{"version":3,"sources":["lib/Subscribable.js"],"names":["symbols","Subscribable","handlers","handler","add","unsubscribe","delete","args","forEach","e"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAEA,IAAMA,UAAU,wBAAc,CAC5B,UAD4B,CAAd,CAAhB;;IAIqBC,Y;AACnB,0BAAc;AAAA;;AACZ,SAAKD,QAAQE,QAAb,IAAyB,mBAAzB;AACD;;;;8BACSC,O,EAAS;AAAA;;AACjB,WAAKH,QAAQE,QAAb,EAAuBE,GAAvB,CAA2BD,OAA3B;AACA,aAAO,YAAM;AACX,cAAKE,WAAL,CAAiBF,OAAjB;AACD,OAFD;AAGD;;;gCACWA,O,EAAS;AACnB,WAAKH,QAAQE,QAAb,EAAuBI,MAAvB,CAA8BH,OAA9B;AACD;;;8BACgB;AAAA,wCAANI,IAAM;AAANA,YAAM;AAAA;;AACf,iDAAI,KAAKP,QAAQE,QAAb,CAAJ,GAA4BM,OAA5B,CAAoC,mBAAW;AAC7C,YAAI;AACFL,mCAAWI,IAAX;AACD,SAFD,CAEE,OAAOE,CAAP,EAAU;AACV;AACD;AACF,OAND;AAOD;;;;;kBArBkBR,Y","file":"Subscribable.js","sourcesContent":["import SymbolMap from 'data-types/symbol-map';\n\nconst symbols = new SymbolMap([\n  'handlers',\n]);\n\nexport default class Subscribable {\n  constructor() {\n    this[symbols.handlers] = new Set();\n  }\n  subscribe(handler) {\n    this[symbols.handlers].add(handler);\n    return () => {\n      this.unsubscribe(handler);\n    };\n  }\n  unsubscribe(handler) {\n    this[symbols.handlers].delete(handler);\n  }\n  trigger(...args) {\n    [...this[symbols.handlers]].forEach(handler => {\n      try {\n        handler(...args);\n      } catch (e) {\n        /* ignore error */\n      }\n    });\n  }\n}\n"]}