{"version":3,"sources":["lib/di/provider.js"],"names":["Provider","token","isPrivate","instance","private","ClassProvider","klass","deps","ExistingProvider","useExisting","FactoryProvider","func","ValueProvider","value","spread"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAaA,Q,WAAAA,Q;AACX,oBAAYC,KAAZ,EAAmBC,SAAnB,EAA8B;AAAA;;AAC5B,SAAKD,KAAL,GAAaA,KAAb;AACA;AACA,SAAKE,QAAL,GAAgB,IAAhB;AACA,SAAKC,OAAL,GAAeF,aAAa,KAA5B;AACD;;;;gCAEWC,Q,EAAU;AACpB,WAAKA,QAAL,GAAgBA,QAAhB;AACD;;;kCAEa;AACZ,aAAO,KAAKA,QAAZ;AACD;;;+BAEU;AACT,aAAO,KAAKA,QAAL,KAAkB,IAAzB;AACD;;;;;IAGUE,a,WAAAA,a;;;AACX,yBAAYJ,KAAZ,EAAmBK,KAAnB,EAA0BC,IAA1B,EAAgCL,SAAhC,EAA2C;AAAA;;AAAA,oJACnCD,KADmC,EAC5BC,SAD4B;;AAEzC,UAAKI,KAAL,GAAaA,KAAb;AACA,UAAKC,IAAL,GAAYA,IAAZ;AAHyC;AAI1C;;;EALgCP,Q;;IAQtBQ,gB,WAAAA,gB;;;AACX,4BAAYP,KAAZ,EAAmBQ,WAAnB,EAAgCP,SAAhC,EAA2C;AAAA;;AAAA,2JACnCD,KADmC,EAC5BC,SAD4B;;AAEzC,WAAKO,WAAL,GAAmBA,eAAe,EAAlC;AAFyC;AAG1C;;;EAJmCT,Q;;IAOzBU,e,WAAAA,e;;;AACX,2BAAYT,KAAZ,EAAmBU,IAAnB,EAAyBJ,IAAzB,EAA+BL,SAA/B,EAA0C;AAAA;;AAAA,yJAClCD,KADkC,EAC3BC,SAD2B;;AAExC,WAAKS,IAAL,GAAYA,IAAZ;AACA,WAAKJ,IAAL,GAAYA,QAAQ,EAApB;AAHwC;AAIzC;;;EALkCP,Q;;IAQxBY,a,WAAAA,a;;;AACX,yBAAYX,KAAZ,EAAmBY,KAAnB,EAA0BC,MAA1B,EAAkCZ,SAAlC,EAA6C;AAAA;;AAAA,qJACrCD,KADqC,EAC9BC,SAD8B;;AAE3C,WAAKW,KAAL,GAAaA,KAAb;AACA,WAAKC,MAAL,GAAcA,UAAU,KAAxB;AAH2C;AAI5C;;;EALgCd,Q","file":"provider.js","sourcesContent":["export class Provider {\n  constructor(token, isPrivate) {\n    this.token = token;\n    // Provider instance reference\n    this.instance = null;\n    this.private = isPrivate || false;\n  }\n\n  setInstance(instance) {\n    this.instance = instance;\n  }\n\n  getInstance() {\n    return this.instance;\n  }\n\n  resolved() {\n    return this.instance !== null;\n  }\n}\n\nexport class ClassProvider extends Provider {\n  constructor(token, klass, deps, isPrivate) {\n    super(token, isPrivate);\n    this.klass = klass;\n    this.deps = deps;\n  }\n}\n\nexport class ExistingProvider extends Provider {\n  constructor(token, useExisting, isPrivate) {\n    super(token, isPrivate);\n    this.useExisting = useExisting || '';\n  }\n}\n\nexport class FactoryProvider extends Provider {\n  constructor(token, func, deps, isPrivate) {\n    super(token, isPrivate);\n    this.func = func;\n    this.deps = deps || [];\n  }\n}\n\nexport class ValueProvider extends Provider {\n  constructor(token, value, spread, isPrivate) {\n    super(token, isPrivate);\n    this.value = value;\n    this.spread = spread || false;\n  }\n}\n"]}