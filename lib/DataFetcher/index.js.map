{"version":3,"sources":["lib/DataFetcher/index.js"],"names":["DEFAULT_TTL","DEFAULT_RETRY","DataFetcher","deps","dep","optional","auth","client","storage","subscription","tabManager","timeToRetry","ttl","polling","disableCache","name","actionTypes","enumMap","prefix","getReducer","getDataReducer","getTimestampReducer","dataStorageKey","timestampStorageKey","fetchFunction","subscriptionFilters","subscriptionHandler","readyCheckFn","cleanOnReset","options","Error","_auth","_client","_storage","_subscription","_tabManager","_ttl","_timeToRetry","_polling","_fetchFunction","_subscriptionFilters","_subscriptionHandler","_readyCheckFn","_cleanOnReset","_dataStorageKey","_timestampStorageKey","_reducer","registerReducer","key","reducer","timestamp","data","_promise","_lastMessage","store","subscribe","_onStateChange","_shouldInit","dispatch","type","init","_hasPermission","_init","initSuccess","hasPermission","_isDataReady","_shouldReset","_clearTimeout","resetSuccess","_shouldSubscribe","_processSubscription","loggedIn","ready","pending","message","active","isFreshLogin","Date","now","status","initializing","_shouldFetch","fetchData","console","error","_retry","_startPolling","fetch","ownerId","fetchSuccess","fetchError","_fetchData","getItem","state"],"mappings":"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","file":"index.js","sourcesContent":["import Pollable from '../Pollable';\nimport { Library } from '../di';\nimport { prefixEnum } from '../Enum';\nimport getDataFetcherReducer, {\n  getDefaultDataReducer,\n  getDefaultTimestampReducer,\n} from './getDataFetcherReducer';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport baseActionTypes from './baseActionTypes';\nimport proxify from '../proxy/proxify';\nimport ensureExist from '../ensureExist';\n\nconst DEFAULT_TTL = 30 * 60 * 1000;\nconst DEFAULT_RETRY = 62 * 1000;\n\n@Library({\n  deps: [\n    'Auth',\n    'Client',\n    'Subscription',\n    { dep: 'TabManager', optional: true },\n    { dep: 'Storage', optional: true },\n    { dep: 'DataFetcherOptions', optional: true }\n  ]\n})\nexport default class DataFetcher extends Pollable {\n  constructor({\n    auth,\n    client,\n    storage,\n    subscription,\n    tabManager,\n    timeToRetry = DEFAULT_RETRY,\n    ttl = DEFAULT_TTL,\n    polling = false,\n    disableCache = false,\n    name,\n    actionTypes = prefixEnum({ enumMap: baseActionTypes, prefix: name }),\n    getReducer = getDataFetcherReducer,\n    getDataReducer = getDefaultDataReducer,\n    getTimestampReducer = getDefaultTimestampReducer,\n    dataStorageKey = `${name}Data`,\n    timestampStorageKey = `${name}Timestamp`,\n    fetchFunction,\n    subscriptionFilters,\n    subscriptionHandler,\n    readyCheckFn,\n    cleanOnReset = false,\n    ...options\n  }) {\n    if (!name) {\n      throw new Error('name must be defined');\n    }\n    if (typeof fetchFunction !== 'function') {\n      throw new Error('fetchFunction must be a asynchronous function');\n    }\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._auth = this::ensureExist(auth, 'auth');\n    this._client = this::ensureExist(client, 'client');\n    if (!disableCache) {\n      this._storage = storage;\n    }\n    this._subscription = subscription;\n    this._tabManager = tabManager;\n    this._ttl = ttl;\n    this._timeToRetry = timeToRetry;\n    this._polling = polling;\n    this._fetchFunction = fetchFunction;\n    this._subscriptionFilters = subscriptionFilters;\n    this._subscriptionHandler = subscriptionHandler;\n    this._readyCheckFn = readyCheckFn;\n    this._cleanOnReset = cleanOnReset;\n\n    this._dataStorageKey = dataStorageKey;\n    this._timestampStorageKey = timestampStorageKey;\n\n    if (this._storage) {\n      this._reducer = getReducer(this.actionTypes);\n\n      this._storage.registerReducer({\n        key: this._dataStorageKey,\n        reducer: getDataReducer(this.actionTypes),\n      });\n      this._storage.registerReducer({\n        key: this._timestampStorageKey,\n        reducer: getTimestampReducer(this.actionTypes),\n      });\n    } else {\n      this._reducer = getReducer(this.actionTypes, {\n        timestamp: getTimestampReducer(this.actionTypes),\n        data: getDataReducer(this.actionTypes),\n      });\n    }\n\n    this._promise = null;\n    this._lastMessage = null;\n  }\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n      });\n      if (this._hasPermission) {\n        await this._init();\n      } else {\n        this.store.dispatch({\n          type: this.actionTypes.initSuccess,\n          hasPermission: false\n        });\n      }\n    } else if (this._isDataReady()) {\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n        hasPermission: this._hasPermission\n      });\n    } else if (this._shouldReset()) {\n      this._clearTimeout();\n      this._promise = null;\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n        cleanOnReset: this._cleanOnReset,\n      });\n    } else if (this._shouldSubscribe()) {\n      this._processSubscription();\n    }\n  }\n  _shouldInit() {\n    return !!(\n      this._auth.loggedIn &&\n      (!this._storage || this._storage.ready) &&\n      (!this._readyCheckFn || this._readyCheckFn()) &&\n      (!this._subscription || this._subscription.ready) &&\n      (!this._tabManager || this._tabManager.ready) &&\n      this.pending\n    );\n  }\n  _shouldReset() {\n    return !!(\n      (\n        !this._auth.loggedIn ||\n        (this._storage && !this._storage.ready) ||\n        (this._readyCheckFn && !this._readyCheckFn()) ||\n        (this._subscription && !this._subscription.ready) ||\n        (this._tabManager && !this._tabManager.ready)\n      ) &&\n      this.ready\n    );\n  }\n  _shouldSubscribe() {\n    return !!(\n      this.ready &&\n      this._subscription &&\n      this._subscription.ready &&\n      this._subscriptionHandler &&\n      this._subscription.message &&\n      this._subscription.message !== this._lastMessage\n    );\n  }\n  _shouldFetch() {\n    return (\n      (!this._tabManager || this._tabManager.active) &&\n      (\n        this._auth.isFreshLogin ||\n        !this.timestamp ||\n        Date.now() - this.timestamp > this.ttl\n      )\n    );\n  }\n  _isDataReady() {\n    // only turns ready when data has been fetched\n    // (could be from other tabs)\n    return this.status === moduleStatuses.initializing &&\n      this.data !== null;\n  }\n  async _init() {\n    if (this._shouldFetch()) {\n      try {\n        await this.fetchData();\n      } catch (e) {\n        console.error('fetchData error:', e);\n        this._retry();\n      }\n    } else if (this._polling) {\n      this._startPolling();\n    } else {\n      this._retry();\n    }\n    if (this._subscription && this._subscriptionFilters) {\n      this._subscription.subscribe(this._subscriptionFilters);\n    }\n  }\n  _processSubscription() {\n    this._lastMessage = this._subscription.message;\n    this._subscriptionHandler(this._lastMessage);\n  }\n  get data() {\n    return this._storage ?\n      this._storage.getItem(this._dataStorageKey) :\n      this.state.data;\n  }\n\n  get timestamp() {\n    return this._storage ?\n      this._storage.getItem(this._timestampStorageKey) :\n      this.state.timestamp;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get pending() {\n    return this.state.status === moduleStatuses.pending;\n  }\n\n  get ttl() {\n    return this._ttl;\n  }\n\n  get timeToRetry() {\n    return this._timeToRetry;\n  }\n\n  get _hasPermission() {\n    return true;\n  }\n\n  @proxify\n  async _fetchData() {\n    this.store.dispatch({\n      type: this.actionTypes.fetch,\n    });\n    const { ownerId } = this._auth;\n    try {\n      const data = await this._fetchFunction();\n      if (this._auth.ownerId === ownerId) {\n        this.store.dispatch({\n          type: this.actionTypes.fetchSuccess,\n          data,\n          timestamp: Date.now(),\n        });\n        if (this._polling) {\n          this._startPolling();\n        }\n        this._promise = null;\n      }\n    } catch (error) {\n      if (this._auth.ownerId === ownerId) {\n        this._promise = null;\n        this.store.dispatch({\n          type: this.actionTypes.fetchError,\n          error,\n        });\n        if (this._polling) {\n          this._startPolling(this.timeToRetry);\n        } else {\n          this._retry();\n        }\n        throw error;\n      }\n    }\n  }\n  @proxify\n  async fetchData() {\n    if (!this._promise) {\n      this._promise = this._fetchData();\n    }\n    return this._promise;\n  }\n}\n"]}