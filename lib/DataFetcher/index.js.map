{"version":3,"sources":["lib/DataFetcher/index.js"],"names":["DEFAULT_TTL","DEFAULT_RETRY","DataFetcher","auth","client","storage","tabManager","ttl","timeToRetry","polling","name","actionTypes","enumMap","prefix","getReducer","getDataReducer","getTimestampReducer","dataStorageKey","timestampStorageKey","fetchFunction","options","Error","_auth","_storage","_client","_tabManager","_ttl","_timeToRetry","_polling","_fetchFunction","_dataStorageKey","_timestampStorageKey","_reducer","registerReducer","key","reducer","_promise","_timeoutId","store","subscribe","loggedIn","ready","status","pending","dispatch","type","init","active","isFreshLogin","timestamp","Date","now","fetchData","_startPolling","_retry","initSuccess","_clearTimeout","resetSuccess","clearTimeout","t","setTimeout","fetch","ownerId","data","fetchSuccess","fetchError","error","_fetchData","getItem","state"],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from '../RcModule';\nimport { prefixEnum } from '../Enum';\nimport getDataFetcherReducer, {\n  getDefaultDataReducer,\n  getDefaultTimestampReducer,\n} from './getDataFetcherReducer';\nimport moduleStatus from '../../enums/moduleStatus';\nimport actionTypesBase from './actionTypesBase';\n\nconst DEFAULT_TTL = 30 * 60 * 1000;\nconst DEFAULT_RETRY = 60 * 1000;\n\nexport default class DataFetcher extends RcModule {\n  constructor({\n    auth,\n    client,\n    storage,\n    tabManager,\n    ttl = DEFAULT_TTL,\n    timeToRetry = DEFAULT_RETRY,\n    polling = false,\n    name,\n    actionTypes = prefixEnum({ enumMap: actionTypesBase, prefix: name }),\n    getReducer = getDataFetcherReducer,\n    getDataReducer = getDefaultDataReducer,\n    getTimestampReducer = getDefaultTimestampReducer,\n    dataStorageKey = `${name}Data`,\n    timestampStorageKey = `${name}Timestamp`,\n    fetchFunction,\n    ...options\n  }) {\n    if (!name) {\n      throw new Error('name must be defined');\n    }\n    if (typeof fetchFunction !== 'function') {\n      throw new Error('fetchFunction must be a asynchronous function');\n    }\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._auth = auth;\n    this._storage = storage;\n    this._client = client;\n    this._tabManager = tabManager;\n    this._ttl = ttl;\n    this._timeToRetry = timeToRetry;\n    this._polling = polling;\n    this._fetchFunction = fetchFunction;\n\n    this._dataStorageKey = dataStorageKey;\n    this._timestampStorageKey = timestampStorageKey;\n    this._reducer = getReducer(this.actionTypes);\n\n    this._storage.registerReducer({\n      key: this._dataStorageKey,\n      reducer: getDataReducer(this.actionTypes),\n    });\n    this._storage.registerReducer({\n      key: this._timestampStorageKey,\n      reducer: getTimestampReducer(this.actionTypes),\n    });\n\n    this._promise = null;\n    this._timeoutId = null;\n  }\n  initialize() {\n    this.store.subscribe(async () => {\n      if (\n        this._auth.loggedIn &&\n        this._storage.ready &&\n        this.status === moduleStatus.pending\n      ) {\n        this.store.dispatch({\n          type: this.actionTypes.init,\n        });\n        if (\n          (!this._tabManager || this._tabManager.active) &&\n          (\n            this._auth.isFreshLogin ||\n            !this.timestamp ||\n            Date.now() - this.timestamp > this._ttl\n          )\n        ) {\n          await this.fetchData();\n        } else {\n          if (this._polling) {\n            this._startPolling();\n          } else {\n            this._retry();\n          }\n        }\n        this.store.dispatch({\n          type: this.actionTypes.initSuccess,\n        });\n      } else if (\n        (!this._auth.loggedIn || !this._storage.ready) &&\n        this.ready\n      ) {\n        this._clearTimeout();\n        this._promise = null;\n        this.store.dispatch({\n          type: this.actionTypes.resetSuccess,\n        });\n      }\n    });\n  }\n\n  get data() {\n    return this._storage.getItem(this._dataStorageKey);\n  }\n\n  get timestamp() {\n    return this._storage.getItem(this._timestampStorageKey);\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatus.ready;\n  }\n\n  _clearTimeout() {\n    if (this._timeoutId) clearTimeout(this._timeoutId);\n  }\n  _startPolling(t = this.timestamp + this._ttl + 10 - Date.now()) {\n    this._clearTimeout();\n    this._timeoutId = setTimeout(() => {\n      this._timeoutId = null;\n      if (!this._tabManager || this._tabManager.active) {\n        if (!this.timestamp || Date.now() - this.timestamp > this._ttl) {\n          this.fetchData();\n        } else {\n          this._startPolling();\n        }\n      } else {\n        if (this.timestamp && Date.now() - this.timestamp < this._ttl) {\n          this._startPolling();\n        } else {\n          this._startPolling(this._timeToRetry);\n        }\n      }\n    }, t);\n  }\n  _retry(t = this._timeToRetry) {\n    this._clearTimeout();\n    this._timeoutId = setTimeout(() => {\n      this._timeoutId = null;\n      if (!this.timestamp || Date.now() - this.timestamp > this._ttl) {\n        if (!this._tabManager || this._tabManager.active) {\n          this.fetchData();\n        } else {\n          // continue retry checks in case tab becomes main tab\n          this._retry();\n        }\n      }\n    }, t);\n  }\n\n  async _fetchData() {\n    this.store.dispatch({\n      type: this.actionTypes.fetch,\n    });\n    const ownerId = this._auth.ownerId;\n    try {\n      const data = await this._fetchFunction();\n      if (this._auth.ownerId === ownerId) {\n        this.store.dispatch({\n          type: this.actionTypes.fetchSuccess,\n          data,\n          timestamp: Date.now(),\n        });\n        if (this._polling) {\n          this._startPolling();\n        }\n        this._promise = null;\n      }\n    } catch (error) {\n      if (this._auth.ownerId === ownerId) {\n        this._promise = null;\n        this.store.dispatch({\n          type: this.actionTypes.fetchError,\n          error,\n        });\n        if (this._polling) {\n          this._startPolling(this._timeToRetry);\n        } else {\n          this._retry();\n        }\n        throw error;\n      }\n    }\n  }\n  fetchData() {\n    if (!this._promise) {\n      this._promise = this._fetchData();\n    }\n    return this._promise;\n  }\n}\n"]}