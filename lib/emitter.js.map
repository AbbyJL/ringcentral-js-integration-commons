{"version":3,"sources":["lib/emitter.js"],"names":["symbols","Emitter","emitter","event","handler","on","off","once","args","emit"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,UAAU,wBAAc,CAC5B,SAD4B,CAAd,CAAhB;;IAIqBC,O;AACnB,qBAAc;AAAA;;AACZ,SAAKD,QAAQE,OAAb,IAAwB,4BAAxB;AACD;AACD;;;;;;;;;;uBAMGC,K,EAAOC,O,EAAS;AAAA;;AACjB,WAAKJ,QAAQE,OAAb,EAAsBG,EAAtB,CAAyBF,KAAzB,EAAgCC,OAAhC;AACA,aAAO,YAAM;AACX,cAAKJ,QAAQE,OAAb,EAAsBI,GAAtB,CAA0BH,KAA1B,EAAiCC,OAAjC;AACD,OAFD;AAGD;AACD;;;;;;;;;yBAMKD,K,EAAOC,O,EAAS;AAAA;;AACnB,WAAKJ,QAAQE,OAAb,EAAsBK,IAAtB,CAA2BJ,KAA3B,EAAkCC,OAAlC;AACA,aAAO,YAAM;AACX,eAAKJ,QAAQE,OAAb,EAAsBI,GAAtB,CAA0BH,KAA1B,EAAiCC,OAAjC;AACD,OAFD;AAGD;AACD;;;;;;;;yBAKKD,K,EAAgB;AAAA;;AAAA,wCAANK,IAAM;AAANA,YAAM;AAAA;;AACnB,+BAAKR,QAAQE,OAAb,GAAsBO,IAAtB,0BAA2BN,KAA3B,SAAqCK,IAArC;AACD;AACD;;;;;;;;wBAKIL,K,EAAOC,O,EAAS;AAClB,WAAKJ,QAAQE,OAAb,EAAsBI,GAAtB,CAA0BH,KAA1B,EAAiCC,OAAjC;AACD;;;;;kBA3CkBH,O","file":"emitter.js","sourcesContent":["import EventEmitter from 'event-emitter';\nimport SymbolMap from 'data-types/symbol-map';\n\nconst symbols = new SymbolMap([\n  'emitter',\n]);\n\nexport default class Emitter {\n  constructor() {\n    this[symbols.emitter] = new EventEmitter();\n  }\n  /**\n   * @function\n   * @param {String} event\n   * @param {Function} handler\n   * @return {Function} Unregister function.\n   */\n  on(event, handler) {\n    this[symbols.emitter].on(event, handler);\n    return () => {\n      this[symbols.emitter].off(event, handler);\n    };\n  }\n  /**\n   * @function\n   * @param {String} event\n   * @param {Function)} handler\n   * @return {Function} Unregister function.\n   */\n  once(event, handler) {\n    this[symbols.emitter].once(event, handler);\n    return () => {\n      this[symbols.emitter].off(event, handler);\n    };\n  }\n  /**\n   * @function\n   * @param {String} event\n   * @param {...args} args\n   */\n  emit(event, ...args) {\n    this[symbols.emitter].emit(event, ...args);\n  }\n  /**\n   * @function\n   * @param {String} event\n   * @param {Function} handler\n   */\n  off(event, handler) {\n    this[symbols.emitter].off(event, handler);\n  }\n}\n"]}