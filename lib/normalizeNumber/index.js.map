{"version":3,"sources":["/src/lib/normalizeNumber/index.js"],"names":["normalizeNumber","phoneNumber","removeExtension","countryCode","areaCode","cleaned","hasPlus","withoutPlus","substring","split","number","extension","length","normalizedNumber"],"mappings":";;;;;;;;;;kBAYwBA,e;;AAZxB;;;;AACA;;;;AAEA;;;;;;;;;AASe,SAASA,eAAT,OAKZ;AAAA,MAJDC,WAIC,QAJDA,WAIC;AAAA,kCAHDC,eAGC;AAAA,MAHDA,eAGC,wCAHiB,KAGjB;AAAA,8BAFDC,WAEC;AAAA,MAFDA,WAEC,oCAFa,IAEb;AAAA,2BADDC,QACC;AAAA,MADDA,QACC,iCADU,EACV;;AACD,MAAMC,UAAU,gCAAeJ,WAAf,CAAhB;AACA,MAAMK,UAAUD,QAAQ,CAAR,MAAe,GAA/B;AACA,MAAME,cAAcD,UAAUD,QAAQG,SAAR,CAAkB,CAAlB,CAAV,GAAiCH,OAArD;AACA,MACEE,gBAAgB,EAAhB,IACAA,YAAY,CAAZ,MAAmB,GAFrB,CAEyB;AAFzB,IAGE,OAAOA,WAAP;;AAPD,2BAYGA,YAAYE,KAAZ,CAAkB,GAAlB,CAZH;AAAA;AAAA,MAUCC,MAVD;AAAA,MAWCC,SAXD;;AAcD;;;AACA,MAAID,OAAOE,MAAP,IAAiB,CAArB,EAAwB,OAAOF,MAAP;;AAExB,MAAIG,yBAAJ;AACA,MACE,CAACP,OAAD,IACAI,OAAOE,MAAP,KAAkB,CADlB,KAECT,gBAAgB,IAAhB,IAAwBA,gBAAgB,IAFzC,KAGAC,aAAa,EAJf,EAKE;AACAS,uBAAmB,6BAAWV,WAAX,QAA2BC,WAAWM,MAAtC,EAAnB;AACD,GAPD,MAOO;AACLG,uBAAmB,6BAAWV,WAAX,QAA2BG,UAAU,GAAV,GAAgB,EAA3C,IAAgDI,MAAhD,CAAnB;AACD;;AAED,SAAOC,aAAa,CAACT,eAAd,GACFW,gBADE,SACkBF,SADlB,GAELE,gBAFF;AAGD","file":"index.js","sourcesContent":["import cleanNumber from '../cleanNumber';\nimport { formatE164 } from 'phoneformat.js';\n\n/**\n * @function\n * @description Normalize phone numbers into E164 format\n * @param {String} params.phoneNumber\n * @param {Boolean} params.removeExtension\n * @param {String} params.countryCode\n * @param {String} params.areaCode\n * @return {String}\n */\nexport default function normalizeNumber({\n  phoneNumber,\n  removeExtension = false,\n  countryCode = 'US',\n  areaCode = '',\n}) {\n  const cleaned = cleanNumber(`${phoneNumber}`);\n  const hasPlus = cleaned[0] === '+';\n  const withoutPlus = hasPlus ? cleaned.substring(1) : cleaned;\n  if (\n    withoutPlus === '' ||\n    withoutPlus[0] === '*' // service number\n  ) return withoutPlus;\n\n  const [\n    number,\n    extension,\n  ] = withoutPlus.split('*');\n\n  // extension or special number\n  if (number.length <= 5) return number;\n\n  let normalizedNumber;\n  if (\n    !hasPlus &&\n    number.length === 7 &&\n    (countryCode === 'CA' || countryCode === 'US') &&\n    areaCode !== ''\n  ) {\n    normalizedNumber = formatE164(countryCode, `${areaCode + number}`);\n  } else {\n    normalizedNumber = formatE164(countryCode, `${hasPlus ? '+' : ''}${number}`);\n  }\n\n  return extension && !removeExtension ?\n    `${normalizedNumber}*${extension}` :\n    normalizedNumber;\n}\n"]}