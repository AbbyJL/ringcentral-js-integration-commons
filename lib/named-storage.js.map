{"version":3,"sources":["lib/named-storage.js"],"names":["symbols","MemoryStorage","data","key","NamedStorage","Error","id","v4","localStorage","window","handler","event","JSON","parse","newValue","setter","trigger","e","addEventListener","getItem","undefined","setItem","removeEventListener"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,UAAU,wBAAc,CAC5B,KAD4B,EAE5B,cAF4B,EAG5B,SAH4B,EAI5B,IAJ4B,CAAd,CAAhB;;IAOMC,a;;;;;;;8BACM;AACR,aAAO,KAAKC,IAAZ;AACD;;;4BACOC,G,EAAKD,I,EAAM;AACjB,WAAKA,IAAL,GAAYA,IAAZ;AACD;;;;;IAGkBE,Y;;;AACnB,8BAEG;AAAA,QADDD,GACC,QADDA,GACC;AAAA;;AAAA;;AAED,QAAI,CAACA,GAAL,EAAU;AACR,YAAME,MAAM,6CAAN,CAAN;AACD;AACD,UAAKL,QAAQG,GAAb,IAAoBA,GAApB;AACA,UAAKH,QAAQM,EAAb,IAAmB,eAAKC,EAAL,EAAnB;AACA,QAAI,OAAOC,YAAP,KAAwB,WAAxB,IAAuC,OAAOC,MAAP,KAAkB,WAA7D,EAA0E;AACxE,YAAKT,QAAQU,OAAb,IAAwB,iBAAS;AAC/B,YAAIC,MAAMR,GAAN,KAAc,MAAKH,QAAQG,GAAb,CAAlB,EAAqC;AACnC,cAAI;AAAA,8BAIES,KAAKC,KAAL,CAAWF,MAAMG,QAAjB,CAJF;;AAAA,gBAEAC,MAFA,eAEAA,MAFA;AAAA,gBAGAb,IAHA,eAGAA,IAHA;;AAKF,gBAAIa,UAAUA,WAAW,MAAKT,EAA9B,EAAkC;AAChC,oBAAKU,OAAL,CAAad,IAAb;AACD;AACF,WARD,CAQE,OAAOe,CAAP,EAAU;AACV;AACD;AACF;AACF,OAdD;AAeA,YAAKjB,QAAQQ,YAAb,IAA6BA,YAA7B;AACAC,aAAOS,gBAAP,CAAwB,SAAxB,EAAmC,MAAKlB,QAAQU,OAAb,CAAnC;AACD,KAlBD,MAkBO;AACL,YAAKV,QAAQQ,YAAb,IAA6B,IAAIP,aAAJ,EAA7B;AACD;AA3BA;AA4BF;;;;8BACS;AACR,UAAI;AAAA,2BAGEW,KAAKC,KAAL,CAAW,KAAKb,QAAQQ,YAAb,EAA2BW,OAA3B,CAAmC,KAAKnB,QAAQG,GAAb,CAAnC,CAAX,CAHF;;AAAA,YAEAD,IAFA,gBAEAA,IAFA;;AAIF,eAAOA,IAAP;AACD,OALD,CAKE,OAAOe,CAAP,EAAU;AACV;AACA,eAAOG,SAAP;AACD;AACF;;;4BACOlB,I,EAAM;AACZ,WAAKF,QAAQQ,YAAb,EAA2Ba,OAA3B,CACE,KAAKrB,QAAQG,GAAb,CADF,EAEE,yBAAe;AACbY,gBAAQ,KAAKT,EADA;AAEbJ;AAFa,OAAf,CAFF;AAOD;;;8BACS;AACR,UAAI,KAAKF,QAAQU,OAAb,CAAJ,EAA2B;AACzBD,eAAOa,mBAAP,CAA2B,SAA3B,EAAsC,KAAKtB,QAAQU,OAAb,CAAtC;AACD;AACF;;;wBACQ;AACP,aAAO,KAAKV,QAAQM,EAAb,CAAP;AACD;;;;;kBA3DkBF,Y","file":"named-storage.js","sourcesContent":["import Subscribable from './subscribable';\nimport SymbolMap from 'data-types/symbol-map';\nimport uuid from 'uuid';\n\nconst symbols = new SymbolMap([\n  'key',\n  'localStorage',\n  'handler',\n  'id',\n]);\n\nclass MemoryStorage {\n  getItem() {\n    return this.data;\n  }\n  setItem(key, data) {\n    this.data = data;\n  }\n}\n\nexport default class NamedStorage extends Subscribable {\n  constructor({\n    key,\n  }) {\n    super();\n    if (!key) {\n      throw Error('NameLocalStorage must be created with a key');\n    }\n    this[symbols.key] = key;\n    this[symbols.id] = uuid.v4();\n    if (typeof localStorage !== 'undefined' && typeof window !== 'undefined') {\n      this[symbols.handler] = event => {\n        if (event.key === this[symbols.key]) {\n          try {\n            const {\n              setter,\n              data,\n            } = JSON.parse(event.newValue);\n            if (setter && setter !== this.id) {\n              this.trigger(data);\n            }\n          } catch (e) {\n            /* ignore error */\n          }\n        }\n      };\n      this[symbols.localStorage] = localStorage;\n      window.addEventListener('storage', this[symbols.handler]);\n    } else {\n      this[symbols.localStorage] = new MemoryStorage();\n    }\n  }\n  getData() {\n    try {\n      const {\n        data,\n      } = JSON.parse(this[symbols.localStorage].getItem(this[symbols.key]));\n      return data;\n    } catch (e) {\n      /* ignore error */\n      return undefined;\n    }\n  }\n  setData(data) {\n    this[symbols.localStorage].setItem(\n      this[symbols.key],\n      JSON.stringify({\n        setter: this.id,\n        data,\n      }),\n    );\n  }\n  destroy() {\n    if (this[symbols.handler]) {\n      window.removeEventListener('storage', this[symbols.handler]);\n    }\n  }\n  get id() {\n    return this[symbols.id];\n  }\n}\n"]}