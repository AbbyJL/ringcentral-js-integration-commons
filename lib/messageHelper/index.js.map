{"version":3,"sources":["lib/messageHelper/index.js"],"names":["filterNumbers","messageIsDeleted","messageIsTextMessage","messageIsFax","messageIsVoicemail","messageIsAcceptable","getMyNumberFromMessage","uniqueRecipients","getRecipientNumbersFromMessage","getRecipients","getNumbersFromMessage","sortByDate","sortSearchResults","getVoicemailAttachment","numbers","filterNumber","filter","number","phoneNumber","extensionNumber","message","availability","type","fax","voiceMail","direction","myExtensionNumber","from","pager","myNumber","to","find","recipients","recipientMap","forEach","recipient","key","sms","allRecipients","concat","length","push","contacts","slice","correspondents","contact","myPhoneLength","self","inbound","fromField","Array","isArray","toField","a","b","ta","Date","creationTime","getTime","tb","matchOrder","accessToken","attachment","attachments","duration","vmDuration","uri","decodeURIComponent"],"mappings":"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","file":"index.js","sourcesContent":["import messageTypes from '../../enums/messageTypes';\n\nexport function filterNumbers(numbers, filterNumber) {\n  return numbers.filter((number) => {\n    if (filterNumber.phoneNumber) {\n      return filterNumber.phoneNumber !== number.phoneNumber;\n    }\n    return filterNumber.extensionNumber !== number.extensionNumber;\n  });\n}\n\nexport function messageIsDeleted(message) {\n  return message.availability === 'Deleted';\n}\n\nexport function messageIsTextMessage(message) {\n  return (message.type !== messageTypes.fax && message.type !== messageTypes.voiceMail);\n}\n\nexport function messageIsFax(message) {\n  return (message.type === messageTypes.fax);\n}\n\nexport function messageIsVoicemail(message) {\n  return (message.type === messageTypes.voiceMail);\n}\n\nexport function messageIsAcceptable(message) {\n  // do not show outbound faxes\n  // do not show deleted messages\n  return (message.type !== messageTypes.fax || message.direction === 'Inbound') &&\n    (!messageIsDeleted(message));\n}\n\nexport function getMyNumberFromMessage({ message, myExtensionNumber }) {\n  if (!message) {\n    return null;\n  }\n  if (message.direction === 'Outbound') {\n    return message.from;\n  }\n  if (message.type === messageTypes.pager) {\n    const myNumber = message.to.find(number => (\n      number.extensionNumber === myExtensionNumber\n    ));\n    if (myNumber) {\n      return myNumber;\n    }\n    return { extensionNumber: myExtensionNumber };\n  }\n  return message.to[0];\n}\n\nexport function uniqueRecipients(recipients, filter = () => true) {\n  const recipientMap = {};\n  recipients.forEach((recipient) => {\n    if (filter(recipient)) {\n      const key = recipient.extensionNumber || recipient.phoneNumber;\n      recipientMap[key] = recipient;\n    }\n  });\n  return Object.values(recipientMap);\n}\n\nexport function getRecipientNumbersFromMessage({ message, myNumber }) {\n  if (!message) {\n    return [];\n  }\n  if (message.type === messageTypes.sms) {\n    if (message.direction === 'Outbound') {\n      return message.to;\n    }\n    return [message.from];\n  }\n  const allRecipients = [message.from].concat(message.to);\n  const recipients = filterNumbers(allRecipients, myNumber);\n  if (recipients.length === 0) {\n    recipients.push(myNumber);\n  }\n  return uniqueRecipients(recipients);\n}\n\nexport function getRecipients({ message, myExtensionNumber }) {\n  const myNumber = getMyNumberFromMessage({\n    message,\n    myExtensionNumber,\n  });\n  return getRecipientNumbersFromMessage({\n    message,\n    myNumber,\n  });\n}\n\nexport function getNumbersFromMessage({ extensionNumber, message }) {\n  if (message.type === messageTypes.pager) {\n    // It is safer and simpler to just put all known contacts into array and filter self out\n    const contacts = (message.to && message.to.slice()) || [];\n    if (message.from) contacts.push(message.from);\n    const correspondents = uniqueRecipients(contacts,\n      contact => contact.extensionNumber !== extensionNumber\n    );\n    // to support send message to myself.\n    if (correspondents && correspondents.length === 0) {\n      const myPhoneLength =\n        contacts.filter(contact => contact.extensionNumber === extensionNumber).length;\n      if (myPhoneLength > 0 && contacts.length === myPhoneLength) {\n        correspondents.push({\n          extensionNumber,\n        });\n      }\n    }\n    return {\n      self: {\n        extensionNumber\n      },\n      correspondents: correspondents || [],\n    };\n  }\n\n  const inbound = message.direction === 'Inbound';\n  const fromField = (\n    message.from &&\n      Array.isArray(message.from) ?\n      message.from :\n      [message.from]\n  ) || [];\n  const toField = (\n    message.to &&\n      Array.isArray(message.to) ?\n      message.to :\n      [message.to]\n  ) || [];\n  if (inbound) {\n    return {\n      self: toField[0],\n      correspondents: fromField,\n    };\n  }\n  return {\n    self: fromField[0],\n    correspondents: toField,\n  };\n}\n\nexport function sortByDate(a, b) {\n  const ta = new Date(a.creationTime).getTime();\n  const tb = new Date(b.creationTime).getTime();\n  return tb - ta;\n}\n\nexport function sortSearchResults(a, b) {\n  if (a.matchOrder === b.matchOrder) return sortByDate(a, b);\n  return a.matchOrder > b.matchOrder ? 1 : -1;\n}\n\nexport function getVoicemailAttachment(message, accessToken) {\n  const attachment = message.attachments && message.attachments[0];\n  if (!attachment) {\n    return { duration: 0 };\n  }\n  const duration = attachment.vmDuration;\n  const uri = `${attachment.uri}?access_token=${decodeURIComponent(accessToken)}`;\n  return {\n    duration,\n    uri,\n  };\n}\n"]}