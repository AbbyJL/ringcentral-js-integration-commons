{"version":3,"sources":["lib/redux-helper.js"],"names":["prefixActions","hasOwnProperty","Object","prototype","ActionMap","actions","prefix","definition","forEach","action"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;QA0BgBA,a,GAAAA,a;;AA1BhB;;;;;;AAEA,IAAMC,iBAAiBC,OAAOC,SAAP,CAAiBF,cAAxC;AACA;;;;;IAIaG,S,WAAAA,S;;;AACX;;;;;AAKA,uBAAuC;AAAA,QAA3BC,OAA2B,uEAAjB,EAAiB;AAAA,QAAbC,MAAa,uEAAJ,EAAI;AAAA;;AACrC,QAAMC,aAAa,EAAnB;AACAF,YAAQG,OAAR,CAAgB,kBAAU;AACxBD,iBAAWE,MAAX,IAAqBH,WAAW,EAAX,GAAmBA,MAAnB,SAA6BG,MAA7B,GAAwCA,MAA7D;AACD,KAFD;AAFqC,uIAK/BF,UAL+B;AAMtC;;;;;AAGH;;;;;;AAIO,SAASP,aAAT,GAAiD;AAAA,iFAAJ,EAAI;;AAAA,MAAxBK,OAAwB,QAAxBA,OAAwB;AAAA,MAAfC,MAAe,QAAfA,MAAe;;AACtD,MAAI,CAACA,MAAD,IAAWA,WAAW,EAA1B,EAA8B,OAAOD,OAAP;AAC9B,MAAME,aAAa,EAAnB;AACA,OAAK,IAAME,MAAX,IAAqBJ,OAArB,EAA8B;AAC5B;AACA,QAAaJ,cAAT,eAAwBQ,MAAxB,CAAJ,EAAqC;AACnCF,iBAAWE,MAAX,IAAwBH,MAAxB,SAAkCD,QAAQI,MAAR,CAAlC;AACD;AACF;AACD,SAAO,0BAAgBF,UAAhB,CAAP;AACD","file":"redux-helper.js","sourcesContent":["import KeyValueMap from 'data-types/key-value-map';\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * @class\n * @description helper class for creating redux action definition maps\n */\nexport class ActionMap extends KeyValueMap {\n  /**\n   * @constructor\n   * @param {String[]} actions - list of action strings\n   * @extends KeyValueMap\n   */\n  constructor(actions = [], prefix = '') {\n    const definition = {};\n    actions.forEach(action => {\n      definition[action] = prefix !== '' ? `${prefix}-${action}` : action;\n    });\n    super(definition);\n  }\n}\n\n/**\n * @function\n * @description helper function to return a prefixed action definition maps\n */\nexport function prefixActions({ actions, prefix } = {}) {\n  if (!prefix || prefix === '') return actions;\n  const definition = {};\n  for (const action in actions) {\n    /* istanbul ignore else */\n    if (actions::hasOwnProperty(action)) {\n      definition[action] = `${prefix}-${actions[action]}`;\n    }\n  }\n  return new KeyValueMap(definition);\n}\n\n"]}