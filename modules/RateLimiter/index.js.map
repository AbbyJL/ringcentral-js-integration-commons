{"version":3,"sources":["modules/RateLimiter/index.js"],"names":["DEFAULT_THROTTLE_DURATION","RateLimiter","alert","client","environment","globalStorage","throttleDuration","options","actionTypes","_beforeRequestHandler","throttling","Error","rateLimitReached","_checkTimestamp","store","dispatch","type","stopThrottle","_requestErrorHandler","apiResponse","message","wasThrottling","startThrottle","timestamp","Date","now","_alert","ttl","allowDuplicates","setTimeout","_throttleDuration","_client","_environment","_storage","_storageKey","_reducer","registerReducer","key","reducer","_timeoutId","subscribe","ready","_bindHandlers","initSuccess","changed","_unbindHandlers","service","platform","on","events","requestError","beforeRequest","removeListener","state","status","getItem"],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport actionTypes from './actionTypes';\nimport moduleStatus from '../../enums/moduleStatus';\nimport getRateLimiterReducer, {\n  getTimestampReducer,\n} from './getRateLimiterReducer';\nimport errorMessages from './errorMessages';\n\nconst DEFAULT_THROTTLE_DURATION = 61 * 1000;\n\nexport default class RateLimiter extends RcModule {\n  constructor({\n    alert,\n    client,\n    environment,\n    globalStorage,\n    throttleDuration = DEFAULT_THROTTLE_DURATION,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._alert = alert;\n    this._client = client;\n    this._environment = environment;\n    this._storage = globalStorage;\n    this._throttleDuration = throttleDuration;\n    this._storageKey = 'rateLimiterTimestamp';\n    this._reducer = getRateLimiterReducer(this.actionTypes);\n    this._storage.registerReducer({\n      key: this._storageKey,\n      reducer: getTimestampReducer(this.actionTypes),\n    });\n    this._timeoutId = null;\n  }\n  initialize() {\n    this.store.subscribe(async () => {\n      if (\n        !this.ready &&\n        this._storage.ready &&\n        (!this._environment || this._environment.ready)\n      ) {\n        this._bindHandlers();\n        this.store.dispatch({\n          type: this.actionTypes.initSuccess,\n        });\n      } else if (\n        this.ready &&\n        this._environment && this._environment.changed\n      ) {\n        this._bindHandlers();\n      }\n    });\n  }\n  _beforeRequestHandler = () => {\n    if (this.throttling) {\n      throw new Error(errorMessages.rateLimitReached);\n    }\n  }\n  _checkTimestamp = () => {\n    if (!this.throttling) {\n      this.store.dispatch({\n        type: this.actionTypes.stopThrottle,\n      });\n    }\n  }\n  _requestErrorHandler = (apiResponse) => {\n    if (\n      apiResponse instanceof Error &&\n      apiResponse.message === 'Request rate exceeded'\n    ) {\n      const wasThrottling = this.throttling;\n      this.store.dispatch({\n        type: this.actionTypes.startThrottle,\n        timestamp: Date.now(),\n      });\n      if (!wasThrottling && this._alert) {\n        this._alert({\n          message: errorMessages.rateLimitReached,\n          ttl: 0,\n          allowDuplicates: false,\n        });\n      }\n      setTimeout(this._checkTimestamp, this._throttleDuration);\n    }\n  }\n  _bindHandlers() {\n    if (this._unbindHandlers) {\n      this._unbindHandlers();\n    }\n    const client = this._client.service.platform().client();\n    client.on(client.events.requestError, this._requestErrorHandler);\n    client.on(client.events.beforeRequest, this._beforeRequestHandler);\n    this._unbindHandlers = () => {\n      client.removeListener(client.events.requestError, this._requestErrorHandler);\n      client.removeListener(client.events.beforeRequest, this._beforeRequestHandler);\n      this._unbindHandlers = null;\n    };\n  }\n\n  get ttl() {\n    return this.throttling ? this._throttleDuration - (Date.now() - this.timestamp) : 0;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get timestamp() {\n    return this._storage.getItem(this._storageKey);\n  }\n\n  get throttling() {\n    return Date.now() - this._storage.getItem(this._storageKey) <= this._throttleDuration;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatus.ready;\n  }\n}\n"]}