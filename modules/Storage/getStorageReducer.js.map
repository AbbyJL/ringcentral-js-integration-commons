{"version":3,"sources":["modules/Storage/getStorageReducer.js"],"names":["getDataReducer","getStorageKeyReducer","getStatusReducer","getStorageReducer","prefix","types","enumMap","state","type","data","key","value","result","init","set","remove","load","reset","storageKey","pending","ready","status"],"mappings":";;;;;;;;;;;;;;QAKgBA,c,GAAAA,c;QAgCAC,oB,GAAAA,oB;QAiBAC,gB,GAAAA,gB;kBAiBQC,iB;;AAvExB;;AACA;;AACA;;;;AACA;;;;;;AAEO,SAASH,cAAT,CAAwBI,MAAxB,EAAgC;AACrC,MAAMC,QAAQ,sBAAW,EAAEC,qCAAF,EAA+BF,cAA/B,EAAX,CAAd;AACA,SAAO,YAA4C;AAAA,QAA3CG,KAA2C,uEAAnC,EAAmC;AAAA;AAAA,QAA7BC,IAA6B,QAA7BA,IAA6B;AAAA,QAAvBC,IAAuB,QAAvBA,IAAuB;AAAA,QAAjBC,GAAiB,QAAjBA,GAAiB;AAAA,QAAZC,KAAY,QAAZA,KAAY;;AACjD,QAAIC,eAAJ;AACA,YAAQJ,IAAR;;AAEE,WAAKH,MAAMQ,IAAX;AACE,eAAOJ,IAAP;;AAEF,WAAKJ,MAAMS,GAAX;AACE,0CACKP,KADL,oCAEGG,GAFH,EAESC,KAFT;;AAKF,WAAKN,MAAMU,MAAX;AACEH,4CAAcL,KAAd;AACA,eAAOK,OAAOF,GAAP,CAAP;AACA,eAAOE,MAAP;;AAEF,WAAKP,MAAMW,IAAX;AACE,eAAOP,IAAP;;AAEF,WAAKJ,MAAMY,KAAX;AACE,eAAO,EAAP;;AAEF;AACE,eAAOV,KAAP;AAvBJ;AAyBD,GA3BD;AA4BD;;AAEM,SAASN,oBAAT,CAA8BG,MAA9B,EAAsC;AAC3C,MAAMC,QAAQ,sBAAW,EAAEC,qCAAF,EAA+BF,cAA/B,EAAX,CAAd;AACA,SAAO,YAAwC;AAAA,QAAvCG,KAAuC,uEAA/B,IAA+B;AAAA;AAAA,QAAvBC,IAAuB,SAAvBA,IAAuB;AAAA,QAAjBU,UAAiB,SAAjBA,UAAiB;;AAC7C,YAAQV,IAAR;;AAEE,WAAKH,MAAMQ,IAAX;AACE,eAAOK,UAAP;;AAEF,WAAKb,MAAMY,KAAX;AACE,eAAO,IAAP;;AAEF;AACE,eAAOV,KAAP;AATJ;AAWD,GAZD;AAaD;;AAEM,SAASL,gBAAT,CAA0BE,MAA1B,EAAkC;AACvC,MAAMC,QAAQ,sBAAW,EAAEC,qCAAF,EAA+BF,cAA/B,EAAX,CAAd;AACA,SAAO,YAA6C;AAAA,QAA5CG,KAA4C,uEAApC,wBAAcY,OAAsB;AAAA;AAAA,QAAXX,IAAW,SAAXA,IAAW;;AAClD,YAAQA,IAAR;;AAEE,WAAKH,MAAMQ,IAAX;AACE,eAAO,wBAAcO,KAArB;;AAEF,WAAKf,MAAMY,KAAX;AACE,eAAO,wBAAcE,OAArB;;AAEF;AACE,eAAOZ,KAAP;AATJ;AAWD,GAZD;AAaD;;AAEc,SAASJ,iBAAT,CAA2BC,MAA3B,EAAmC;AAChD,SAAO,4BAAgB;AACrBK,UAAMT,eAAeI,MAAf,CADe;AAErBc,gBAAYjB,qBAAqBG,MAArB,CAFS;AAGrBiB,YAAQnB,iBAAiBE,MAAjB;AAHa,GAAhB,CAAP;AAKD","file":"getStorageReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { prefixEnum } from '../../lib/Enum';\nimport storageActionTypes from './storageActionTypes';\nimport storageStatus from './storageStatus';\n\nexport function getDataReducer(prefix) {\n  const types = prefixEnum({ enumMap: storageActionTypes, prefix });\n  return (state = {}, { type, data, key, value }) => {\n    let result;\n    switch (type) {\n\n      case types.init:\n        return data;\n\n      case types.set:\n        return {\n          ...state,\n          [key]: value,\n        };\n\n      case types.remove:\n        result = { ...state };\n        delete result[key];\n        return result;\n\n      case types.load:\n        return data;\n\n      case types.reset:\n        return {};\n\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getStorageKeyReducer(prefix) {\n  const types = prefixEnum({ enumMap: storageActionTypes, prefix });\n  return (state = null, { type, storageKey }) => {\n    switch (type) {\n\n      case types.init:\n        return storageKey;\n\n      case types.reset:\n        return null;\n\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getStatusReducer(prefix) {\n  const types = prefixEnum({ enumMap: storageActionTypes, prefix });\n  return (state = storageStatus.pending, { type }) => {\n    switch (type) {\n\n      case types.init:\n        return storageStatus.ready;\n\n      case types.reset:\n        return storageStatus.pending;\n\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getStorageReducer(prefix) {\n  return combineReducers({\n    data: getDataReducer(prefix),\n    storageKey: getStorageKeyReducer(prefix),\n    status: getStatusReducer(prefix),\n  });\n}\n"]}