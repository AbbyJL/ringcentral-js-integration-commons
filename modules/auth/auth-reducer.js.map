{"version":3,"sources":["modules/auth/auth-reducer.js"],"names":["getAuthReducer","initialState","status","pending","token","error","prefix","actions","state","action","type","init","login","loggingIn","logout","loggingOut","loginSuccess","loggedIn","logoutSuccess","notLoggedIn","loginError","logoutError","refreshSuccess","refreshError"],"mappings":";;;;;;;;;;;;;;kBAUwBA,c;;AAVxB;;AACA;;;;AACA;;;;;;AAEA,IAAMC,eAAe;AACnBC,UAAQ,sBAAYC,OADD;AAEnBC,SAAO,IAFY;AAGnBC,SAAO;AAHY,CAArB;;AAMe,SAASL,cAAT,CAAwBM,MAAxB,EAAgC;AAC7C,MAAMC,UAAU,uDAA2BD,MAA3B,CAAhB;AACA,SAAO,UAACE,KAAD,EAAQC,MAAR,EAAmB;AACxB,QAAI,OAAOD,KAAP,KAAiB,WAArB,EAAkC,OAAO,sBAAc,EAAd,EAAkBP,YAAlB,CAAP;AAClC,QAAI,CAACQ,MAAL,EAAa,OAAOD,KAAP;AACb,YAAQC,OAAOC,IAAf;;AAEE,WAAKH,QAAQI,IAAb;AACE,0CACKH,KADL;AAEEN,kBAAQO,OAAOP,MAFjB;AAGEE,iBAAOK,OAAOL;AAHhB;;AAMF,WAAKG,QAAQK,KAAb;AACE,0CACKJ,KADL;AAEEN,kBAAQ,sBAAYW,SAFtB;AAGER,iBAAO;AAHT;;AAMF,WAAKE,QAAQO,MAAb;AACE,0CACKN,KADL;AAEEN,kBAAQ,sBAAYa,UAFtB;AAGEV,iBAAO;AAHT;;AAMF,WAAKE,QAAQS,YAAb;AACE,eAAO;AACLd,kBAAQ,sBAAYe,QADf;AAELb,iBAAOK,OAAOL,KAFT;AAGLC,iBAAO;AAHF,SAAP;;AAMF,WAAKE,QAAQW,aAAb;AACE,eAAO;AACLhB,kBAAQ,sBAAYiB,WADf;AAELf,iBAAO,IAFF;AAGLC,iBAAO;AAHF,SAAP;;AAMF,WAAKE,QAAQa,UAAb;AACE,0CACKZ,KADL;AAEEN,kBAAQ,sBAAYiB,WAFtB;AAGEd,iBAAOI,OAAOJ;AAHhB;;AAMF,WAAKE,QAAQc,WAAb;AACE,0CACKb,KADL;AAEEN,kBAAQ,sBAAYe,QAFtB;AAGEZ,iBAAOI,OAAOJ;AAHhB;;AAMF,WAAKE,QAAQe,cAAb;AACE,0CACKd,KADL;AAEEJ,iBAAOK,OAAOL;AAFhB;;AAKF,WAAKG,QAAQgB,YAAb;AACE,eAAO;AACLrB,kBAAQ,sBAAYiB,WADf;AAELf,iBAAO,IAFF;AAGLC,iBAAOE,QAAQF;AAHV,SAAP;;AAMF;AACE,eAAOG,KAAP;AAjEJ;AAmED,GAtED;AAuED","file":"auth-reducer.js","sourcesContent":["import { prefixActions } from '../../lib/redux-helper';\nimport authActions from './auth-actions';\nimport loginStatus from './login-status';\n\nconst initialState = {\n  status: loginStatus.pending,\n  token: null,\n  error: null,\n};\n\nexport default function getAuthReducer(prefix) {\n  const actions = prefixActions(authActions, prefix);\n  return (state, action) => {\n    if (typeof state === 'undefined') return Object.assign({}, initialState);\n    if (!action) return state;\n    switch (action.type) {\n\n      case actions.init:\n        return {\n          ...state,\n          status: action.status,\n          token: action.token,\n        };\n\n      case actions.login:\n        return {\n          ...state,\n          status: loginStatus.loggingIn,\n          error: null,\n        };\n\n      case actions.logout:\n        return {\n          ...state,\n          status: loginStatus.loggingOut,\n          error: null,\n        };\n\n      case actions.loginSuccess:\n        return {\n          status: loginStatus.loggedIn,\n          token: action.token,\n          error: null,\n        };\n\n      case actions.logoutSuccess:\n        return {\n          status: loginStatus.notLoggedIn,\n          token: null,\n          error: null,\n        };\n\n      case actions.loginError:\n        return {\n          ...state,\n          status: loginStatus.notLoggedIn,\n          error: action.error,\n        };\n\n      case actions.logoutError:\n        return {\n          ...state,\n          status: loginStatus.loggedIn,\n          error: action.error,\n        };\n\n      case actions.refreshSuccess:\n        return {\n          ...state,\n          token: action.token,\n        };\n\n      case actions.refreshError:\n        return {\n          status: loginStatus.notLoggedIn,\n          token: null,\n          error: actions.error,\n        };\n\n      default:\n        return state;\n    }\n  };\n}\n"]}