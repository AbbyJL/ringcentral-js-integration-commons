{"version":3,"sources":["modules/auth/index.js"],"names":["logger","prefix","symbols","Auth","options","actions","api","on","oldState","newState","status","emit","authStatusChange","oldStatus","newStatus","error","platform","service","beforeLogoutHandlers","events","loginSuccess","store","dispatch","type","token","auth","data","loginError","logoutSuccess","logoutError","refreshSuccess","refreshError","loggedIn","init","notLoggedIn","username","password","extension","remember","login","payload","redirectUri","state","brandId","display","prompt","loginUrl","callbackUri","getAuthCode","code","logout","handlers","handler","add","remove","owner_id"],"mappings":"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","file":"index.js","sourcesContent":["import RcModule, { initFunction } from '../../lib/rc-module';\nimport { proxify, throwOnProxy } from '../proxy';\nimport SymbolMap from 'data-types/symbol-map';\nimport authStatus from './auth-status';\nimport authActions from './auth-actions';\nimport getAuthReducer from './get-auth-reducer';\nimport authEvents from './auth-events';\nimport Loganberry from 'loganberry';\n\nconst logger = new Loganberry({\n  prefix: 'auth',\n});\n\nconst symbols = new SymbolMap([\n  'api',\n  'emitter',\n  'beforeLogoutHandlers',\n  'init',\n]);\n\n/**\n * @class\n * @description Authentication module\n */\nexport default class Auth extends RcModule {\n  /**\n   * @function\n   */\n  constructor(options) {\n    super({\n      ...options,\n      actions: authActions,\n    });\n\n    const {\n      api,\n    } = options;\n    this.on('state-change', ({ oldState, newState }) => {\n      if (!oldState || oldState.status !== newState.status) {\n        this.emit(\n          authEvents.authStatusChange,\n          {\n            oldStatus: oldState && oldState.status,\n            newStatus: newState.status,\n          }\n        );\n        if (!newState.error) {\n          this.emit(newState.status);\n        }\n      }\n      if (newState.error && (!oldState || oldState.error !== newState.error)) {\n        this.emit(authEvents.error, newState.error);\n      }\n    });\n    this[symbols.api] = api;\n  }\n  @initFunction\n  init() {\n    const platform = this[symbols.api].service.platform();\n    this[symbols.beforeLogoutHandlers] = new Set();\n\n    // load info on login\n    platform.on(platform.events.loginSuccess, () => {\n      this.store.dispatch({\n        type: this.actions.loginSuccess,\n        token: platform.auth().data(),\n      });\n    });\n    // loginError\n    platform.on(platform.events.loginError, error => {\n      this.store.dispatch({\n        type: this.actions.loginError,\n        error,\n      });\n    });\n    // unload info on logout\n    platform.on(platform.events.logoutSuccess, () => {\n      this.store.dispatch({\n        type: this.actions.logoutSuccess,\n      });\n    });\n\n    platform.on(platform.events.logoutError, error => {\n      this.store.dispatch({\n        type: this.actions.logoutError,\n        error,\n      });\n    });\n    platform.on(platform.events.refreshSuccess, () => {\n      this.store.dispatch({\n        type: this.actions.refreshSuccess,\n        token: platform.auth().data(),\n      });\n    });\n    platform.on(platform.events.refreshError, error => {\n      this.store.dispatch({\n        type: this.actions.refreshError,\n        error,\n      });\n    });\n\n    // load info if already logged in\n    (async () => {\n      const loggedIn = await platform.loggedIn();\n      this.store.dispatch({\n        type: this.actions.init,\n        status: loggedIn ? authStatus.loggedIn : authStatus.notLoggedIn,\n        token: loggedIn ? platform.auth().data() : null,\n      });\n    })();\n  }\n\n  get reducer() {\n    return getAuthReducer(this.prefix);\n  }\n  /**\n   * @function\n   * @async\n   * @description Login function using username and password\n   */\n  @proxify\n  async login({ username, password, extension, remember }) {\n    this.store.dispatch({\n      type: this.actions.login,\n      payload: {\n        username,\n        password,\n        extension,\n        remember,\n      },\n    });\n    return await this[symbols.api].login({\n      username,\n      password,\n      extension,\n      remember,\n    });\n  }\n\n  /**\n   * @function\n   * @description get OAuth page url\n   */\n  loginUrl({ redirectUri, state, brandId, display, prompt }) {\n    return this[symbols.api].loginUrl({\n      redirectUri,\n      state,\n      brandId,\n      display,\n      prompt,\n    });\n  }\n\n  /**\n   * @function\n   * @param {string} url\n   * @return {Object}\n   */\n  parseCallBackUrl({ callbackUri }) {\n    return this[symbols.api].getAuthCode(callbackUri);\n  }\n\n  /**\n   * @function\n   * @async\n   * @description Authorize using OAauth code\n   */\n  @proxify\n  async authorize({ code, redirectUri }) {\n    this.store.dispatch({\n      type: this.actions.login,\n      payload: {\n        code,\n        redirectUri,\n      },\n    });\n    return await this[symbols.api].login({\n      code,\n      redirectUri,\n    });\n  }\n\n  /**\n   * @function\n   * @async\n   * @description Log the user out\n   */\n  @proxify\n  async logout() {\n    // deal with removing subscriptions\n    this.store.dispatch({\n      type: this.actions.logout,\n    });\n    const handlers = [...this[symbols.beforeLogoutHandlers]];\n    for (const handler of handlers) {\n      try {\n        // wraps with async so even normal functions can be awaited\n        // TODO cancel logout if handler resolves to false\n        await (async () => handler())();\n      } catch (e) {\n        // TODO: should emit error\n      }\n    }\n    return await this[symbols.api].logout();\n  }\n  /**\n   * @function\n   * @param {Function} handler\n   * @returns {Function}\n   */\n  @throwOnProxy\n  addBeforeLogoutHandler(handler) {\n    this[symbols.beforeLogoutHandlers].add(handler);\n    return () => {\n      this[symbols.beforeLogoutHandlers].remove(handler);\n    };\n  }\n  /**\n   * @function\n   * @param {Function} handler\n   */\n  @throwOnProxy\n  removeBeforeLogoutHandler(handler) {\n    this[symbols.beforeLogoutHandlers].remove(handler);\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get authEvents() {\n    return authEvents;\n  }\n\n  get authStatus() {\n    return authStatus;\n  }\n\n  get ownerId() {\n    return this.state.token.owner_id;\n  }\n\n  @proxify\n  async isLoggedIn() {\n    return await this[symbols.api].service.platform().loggedIn();\n  }\n}\n\n"]}