{"version":3,"sources":["modules/user/user-reducer.js"],"names":["getUserReducer","initialState","accountInfo","accountInfoLoading","accountInfoError","extensionInfo","extensionInfoLoading","extensionInfoError","dialingPlans","dialingPlansLoading","dialingPlansError","phoneNumbers","phoneNumbersLoading","phoneNumbersError","forwardingNumbers","forwardingNumbersLoading","forwardingNumbersError","blockedNumbers","blockedNumbersLoading","blockedNumbersError","prefix","actions","state","action","type","loadAccountInfo","loadAccountInfoSuccess","payload","loadAccountInfoFailed","error","loadExtensionInfo","loadExtensionInfoSuccess","loadExtensionInfoFailed","loadDialingPlans","loadDialingPlansSuccess","loadDialingPlansFailed","loadPhoneNumbers","loadPhoneNumbersSuccess","loadPhoneNumbersFailed","loadForwardingNumbers","loadForwardingNumbersSuccess","loadForwardingNumbersFailed","loadBlockedNumbers","loadBlockedNumbersSuccess","loadBlockedNumbersFailed","clearUserInfo"],"mappings":"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","file":"user-reducer.js","sourcesContent":["import { prefixActions } from '../../lib/redux-helper';\nimport userActions from './user-actions';\n\nconst initialState = {\n  accountInfo: null,\n  accountInfoLoading: false,\n  accountInfoError: null,\n\n  extensionInfo: null,\n  extensionInfoLoading: false,\n  extensionInfoError: null,\n\n  dialingPlans: [],\n  dialingPlansLoading: false,\n  dialingPlansError: null,\n\n  phoneNumbers: [],\n  phoneNumbersLoading: false,\n  phoneNumbersError: null,\n\n  forwardingNumbers: [],\n  forwardingNumbersLoading: false,\n  forwardingNumbersError: null,\n\n  blockedNumbers: [],\n  blockedNumbersLoading: false,\n  blockedNumbersError: null,\n};\n\nexport default function getUserReducer(prefix) {\n  const actions = prefixActions(userActions, prefix);\n  return (state, action) => {\n    if (typeof state === 'undefined') return Object.assign({}, initialState);\n    if (!action) return state;\n    switch (action.type) {\n\n      // account info\n      case actions.loadAccountInfo:\n        return Object.assign(\n          {},\n          state,\n          {\n            accountInfoLoading: true,\n          },\n        );\n      case actions.loadAccountInfoSuccess:\n        return Object.assign(\n          {},\n          state,\n          {\n            accountInfo: action.payload,\n            accountInfoLoading: false,\n            accountInfoError: null,\n          },\n        );\n      case actions.loadAccountInfoFailed:\n        return Object.assign(\n          {},\n          state,\n          {\n            accountInfoLoading: false,\n            accountInfoError: action.error,\n          },\n        );\n\n      // extension info\n      case actions.loadExtensionInfo:\n        return Object.assign(\n          {},\n          state,\n          {\n            extensionInfoLoading: true,\n          },\n        );\n      case actions.loadExtensionInfoSuccess:\n        return Object.assign(\n          {},\n          state,\n          {\n            extensionInfo: action.payload,\n            extensionInfoLoading: false,\n            extensionInfoError: null,\n          },\n        );\n      case actions.loadExtensionInfoFailed:\n        return Object.assign(\n          {},\n          state,\n          {\n            extensionInfoLoading: false,\n            extensionInfoError: action.error,\n          },\n        );\n\n      // dialing plans\n      case actions.loadDialingPlans:\n        return Object.assign(\n          {},\n          state,\n          {\n            dialingPlansLoading: true,\n          },\n        );\n      case actions.loadDialingPlansSuccess:\n        return Object.assign(\n          {},\n          state,\n          {\n            dialingPlansLoading: false,\n            dialingPlans: action.payload,\n          },\n        );\n      case action.loadDialingPlansFailed:\n        return Object.assign(\n          {},\n          state,\n          {\n            dialingPlansLoading: false,\n            dialingPlansError: action.error,\n          },\n        );\n\n\n      // phone numbers\n      case actions.loadPhoneNumbers:\n        return Object.assign(\n          {},\n          state,\n          {\n            phoneNumbersLoading: true,\n          },\n        );\n      case actions.loadPhoneNumbersSuccess:\n        return Object.assign(\n          {},\n          state,\n          {\n            phoneNumbersLoading: false,\n            phoneNumbers: action.payload,\n          },\n        );\n      case action.loadPhoneNumbersFailed:\n        return Object.assign(\n          {},\n          state,\n          {\n            phoneNumbersLoading: false,\n            phoneNumbersError: action.error,\n          },\n        );\n\n      // forwarding numbers\n      case actions.loadForwardingNumbers:\n        return Object.assign(\n          {},\n          state,\n          {\n            forwardingNumbersLoading: true,\n          },\n        );\n      case actions.loadForwardingNumbersSuccess:\n        return Object.assign(\n          {},\n          state,\n          {\n            forwardingNumbersLoading: false,\n            forwardingNumbers: action.payload,\n          },\n        );\n      case action.loadForwardingNumbersFailed:\n        return Object.assign(\n          {},\n          state,\n          {\n            forwardingNumbersLoading: false,\n            forwardingNumbersError: action.error,\n          },\n        );\n\n      // blocked numbers\n      case actions.loadBlockedNumbers:\n        return Object.assign(\n          {},\n          state,\n          {\n            blockedNumbersLoading: true,\n          },\n        );\n      case actions.loadBlockedNumbersSuccess:\n        return Object.assign(\n          {},\n          state,\n          {\n            blockedNumbersLoading: false,\n            blockedNumbers: action.payload,\n          },\n        );\n      case action.loadBlockedNumbersFailed:\n        return Object.assign(\n          {},\n          state,\n          {\n            blockedNumbersLoading: false,\n            blockedNumbersError: action.error,\n          },\n        );\n\n      case action.clearUserInfo:\n        return Object.assign(\n          {},\n          initialState,\n        );\n\n      default:\n        return state;\n    }\n  };\n}\n"]}