{"version":3,"sources":["modules/TabManager/getTabManagerReducer.js"],"names":["getEventReducer","getStatusReducer","getActiveReducer","getTabManagerReducer","types","state","type","event","args","name","pending","init","ready","active","mainTabIdChanged","status"],"mappings":";;;;;QAGgBA,e,GAAAA,e;QAYAC,gB,GAAAA,gB;QAUAC,gB,GAAAA,gB;kBAYQC,oB;;AArCxB;;AACA;;;;;;AAEO,SAASH,eAAT,CAAyBI,KAAzB,EAAgC;AACrC,SAAO,YAAyC;AAAA,QAAxCC,KAAwC,uEAAhC,IAAgC;AAAA;AAAA,QAAxBC,IAAwB,QAAxBA,IAAwB;AAAA,QAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,QAAXC,IAAW,QAAXA,IAAW;;AAC9C,QAAIF,SAASF,MAAMG,KAAnB,EAA0B;AACxB,aAAO;AACLE,cAAMF,KADD;AAELC;AAFK,OAAP;AAID;AACD,WAAO,IAAP;AACD,GARD;AASD;;AAEM,SAASP,gBAAT,CAA0BG,KAA1B,EAAiC;AACtC,SAAO,YAA4C;AAAA,QAA3CC,KAA2C,uEAAnC,uBAAaK,OAAsB;AAAA;AAAA,QAAXJ,IAAW,SAAXA,IAAW;;AACjD,YAAQA,IAAR;AACE,WAAKF,MAAMO,IAAX;AACE,eAAO,uBAAaC,KAApB;AACF;AACE,eAAOP,KAAP;AAJJ;AAMD,GAPD;AAQD;AACM,SAASH,gBAAT,CAA0BE,KAA1B,EAAiC;AACtC,SAAO,YAAqC;AAAA,QAApCC,KAAoC,uEAA5B,KAA4B;AAAA;AAAA,QAAnBC,IAAmB,SAAnBA,IAAmB;AAAA,QAAbO,MAAa,SAAbA,MAAa;;AAC1C,YAAQP,IAAR;AACE,WAAKF,MAAMO,IAAX;AACA,WAAKP,MAAMU,gBAAX;AACE,eAAOD,MAAP;AACF;AACE,eAAOR,KAAP;AALJ;AAOD,GARD;AASD;;AAEc,SAASF,oBAAT,CAA8BC,KAA9B,EAAqC;AAClD,SAAO,4BAAgB;AACrBW,YAAQd,iBAAiBG,KAAjB,CADa;AAErBS,YAAQX,iBAAiBE,KAAjB,CAFa;AAGrBG,WAAOP,gBAAgBI,KAAhB;AAHc,GAAhB,CAAP;AAKD","file":"getTabManagerReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport moduleStatus from '../../enums/moduleStatus';\n\nexport function getEventReducer(types) {\n  return (state = null, { type, event, args }) => {\n    if (type === types.event) {\n      return {\n        name: event,\n        args,\n      };\n    }\n    return null;\n  };\n}\n\nexport function getStatusReducer(types) {\n  return (state = moduleStatus.pending, { type }) => {\n    switch (type) {\n      case types.init:\n        return moduleStatus.ready;\n      default:\n        return state;\n    }\n  };\n}\nexport function getActiveReducer(types) {\n  return (state = false, { type, active }) => {\n    switch (type) {\n      case types.init:\n      case types.mainTabIdChanged:\n        return active;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getTabManagerReducer(types) {\n  return combineReducers({\n    status: getStatusReducer(types),\n    active: getActiveReducer(types),\n    event: getEventReducer(types),\n  });\n}\n"]}