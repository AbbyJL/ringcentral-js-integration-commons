{"version":3,"sources":["modules/AccountInfo/index.js"],"names":["DEFAULT_MASK","join","DEFAULT_TTL","DEFAULT_RETRY","AccountInfo","auth","client","storage","tabManager","ttl","timeToRetry","options","actionTypes","_auth","_storage","_client","_tabManager","_ttl","_timeToRetry","_infoStorageKey","_timestampStorageKey","_reducer","registerReducer","key","reducer","_promise","_timeoutId","store","subscribe","loggedIn","ready","status","pending","dispatch","type","init","active","isFreshLogin","timestamp","Date","now","loadAccountInfo","_retry","initSuccess","_stopRetry","reset","t","setTimeout","clearTimeout","fetch","id","account","get","info","fetchSuccess","fetchError","error","_loadAccountInfo","getItem","state","serviceInfo","brand","homeCountry","mainNumber"],"mappings":"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","file":"index.js","sourcesContent":["import mask from 'json-mask';\nimport RcModule from '../../lib/RcModule';\nimport actionTypes from './actionTypes';\nimport getAccountInfoReducer, {\n  getInfoReducer,\n  getTimestampReducer,\n} from './getAccountInfoReducer';\nimport moduleStatus from '../../enums/moduleStatus';\n\nconst DEFAULT_MASK = [\n  'id,mainNumber,status',\n  'operator(id,extensionNumber)',\n  'serviceInfo(brand(id,homeCountry(isoCode)))',\n  `regionalSettings(${[\n    'timezone(id,name,bias)',\n    'homeCountry(id)',\n    'language(localeCode)',\n    'formattingLocale(localeCode)',\n    'timeFormat',\n  ].join(',')})`,\n].join(',');\n\nconst DEFAULT_TTL = 30 * 60 * 1000;\nconst DEFAULT_RETRY = 60 * 1000;\n\nexport default class AccountInfo extends RcModule {\n  constructor({\n    auth,\n    client,\n    storage,\n    tabManager,\n    ttl = DEFAULT_TTL,\n    timeToRetry = DEFAULT_RETRY,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._auth = auth;\n    this._storage = storage;\n    this._client = client;\n    this._tabManager = tabManager;\n    this._ttl = ttl;\n    this._timeToRetry = timeToRetry;\n    this._infoStorageKey = 'accountInfo';\n    this._timestampStorageKey = 'accountInfoTimestamp';\n    this._reducer = getAccountInfoReducer(this.actionTypes);\n\n    this._storage.registerReducer({\n      key: this._infoStorageKey,\n      reducer: getInfoReducer(this.actionTypes),\n    });\n    this._storage.registerReducer({\n      key: this._timestampStorageKey,\n      reducer: getTimestampReducer(this.actionTypes),\n    });\n\n    this._promise = null;\n    this._timeoutId = null;\n  }\n  initialize() {\n    this.store.subscribe(async () => {\n      if (\n        this._auth.loggedIn &&\n        this._storage.ready &&\n        this.status === moduleStatus.pending\n      ) {\n        this.store.dispatch({\n          type: this.actionTypes.init,\n        });\n        if (\n          (!this._tabManager || this._tabManager.active) &&\n          (\n            this._auth.isFreshLogin ||\n            !this.timestamp ||\n            Date.now() - this.timestamp > this._ttl\n          )\n        ) {\n          await this.loadAccountInfo();\n        } else {\n          this._retry();\n        }\n        this.store.dispatch({\n          type: this.actionTypes.initSuccess,\n        });\n      } else if (\n        (!this._auth.loggedIn || !this._storage.ready) &&\n        this.ready\n      ) {\n        this._stopRetry();\n        this._promise = null;\n        this.store.dispatch({\n          type: this.actionTypes.reset,\n        });\n      }\n    });\n  }\n\n  _retry(t = this._timeToRetry) {\n    this._stopRetry();\n    this._timeoutId = setTimeout(() => {\n      this._timeoutId = null;\n      if (!this.timestamp || Date.now() - this.timestamp > this._ttl) {\n        if (!this._tabManager || this._tabManager.active) {\n          this.loadAccountInfo();\n        } else {\n          // continue retry checks in case tab becomes main tab\n          this._retry();\n        }\n      }\n    }, t);\n  }\n\n  _stopRetry() {\n    if (this._timeoutId) clearTimeout(this._timeoutId);\n  }\n\n  async _loadAccountInfo() {\n    this.store.dispatch({\n      type: this.actionTypes.fetch,\n    });\n    const id = this._auth.id;\n    try {\n      const info = mask(await this._client.account().get(), DEFAULT_MASK);\n      if (this._auth.id === id) {\n        this.store.dispatch({\n          type: this.actionTypes.fetchSuccess,\n          info,\n          timestamp: Date.now(),\n        });\n        this._promise = null;\n      }\n    } catch (error) {\n      if (this._auth.id === id) {\n        this._promise = null;\n        this.store.dispatch({\n          type: this.actionTypes.fetchError,\n          error,\n        });\n        this._retry();\n        throw error;\n      }\n    }\n  }\n\n  loadAccountInfo() {\n    if (!this._promise) {\n      this._promise = this._loadAccountInfo();\n    }\n    return this._promise;\n  }\n\n  get info() {\n    return this._storage.getItem(this._infoStorageKey);\n  }\n\n  get timestamp() {\n    return this._storage.getItem(this._timestampStorageKey);\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatus.ready;\n  }\n\n  get id() {\n    return this.info.id;\n  }\n\n  get country() {\n    return this.info.serviceInfo && this.info.serviceInfo.brand.homeCountry;\n  }\n\n  get mainCompanyNumber() {\n    return this.info.mainNumber;\n  }\n}\n"]}