{"version":3,"sources":["modules/AccountInfo/getAccountInfoReducer.js"],"names":["getStatusReducer","getInfoReducer","getTimestampReducer","getAccountInfoReducer","types","state","pending","type","init","initializing","initSuccess","ready","reset","info","fetchSuccess","timestamp","status"],"mappings":";;;;;QAIgBA,gB,GAAAA,gB;QAmBAC,c,GAAAA,c;QAOAC,mB,GAAAA,mB;kBAOQC,qB;;AArCxB;;AACA;;;;;;AAGO,SAASH,gBAAT,CAA0BI,KAA1B,EAAiC;AACtC,SAAO,YAA4C;AAAA,QAA3CC,KAA2C,uEAAnC,uBAAaC,OAAsB;AAAA;AAAA,QAAXC,IAAW,QAAXA,IAAW;;AACjD,YAAQA,IAAR;;AAEE,WAAKH,MAAMI,IAAX;AACE,eAAO,uBAAaC,YAApB;;AAEF,WAAKL,MAAMM,WAAX;AACE,eAAO,uBAAaC,KAApB;;AAEF,WAAKP,MAAMQ,KAAX;AACE,eAAO,uBAAaN,OAApB;;AAEF;AACE,eAAOD,KAAP;AAZJ;AAcD,GAfD;AAgBD;;AAEM,SAASJ,cAAT,CAAwBG,KAAxB,EAA+B;AACpC,SAAO,YAAgC;AAAA,QAA/BC,KAA+B,uEAAvB,EAAuB;AAAA;AAAA,QAAjBE,IAAiB,SAAjBA,IAAiB;AAAA,QAAXM,IAAW,SAAXA,IAAW;;AACrC,QAAIN,SAASH,MAAMU,YAAnB,EAAiC,OAAOD,IAAP;AACjC,WAAOR,KAAP;AACD,GAHD;AAID;;AAEM,SAASH,mBAAT,CAA6BE,KAA7B,EAAoC;AACzC,SAAO,YAAuC;AAAA,QAAtCC,KAAsC,uEAA9B,IAA8B;AAAA;AAAA,QAAtBE,IAAsB,SAAtBA,IAAsB;AAAA,QAAhBQ,SAAgB,SAAhBA,SAAgB;;AAC5C,QAAIR,SAASH,MAAMU,YAAnB,EAAiC,OAAOC,SAAP;AACjC,WAAOV,KAAP;AACD,GAHD;AAID;;AAEc,SAASF,qBAAT,CAA+BC,KAA/B,EAAsC;AACnD,SAAO,4BAAgB;AACrBY,YAAQhB,iBAAiBI,KAAjB;AADa,GAAhB,CAAP;AAGD","file":"getAccountInfoReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport moduleStatus from '../../enums/moduleStatus';\n\n\nexport function getStatusReducer(types) {\n  return (state = moduleStatus.pending, { type }) => {\n    switch (type) {\n\n      case types.init:\n        return moduleStatus.initializing;\n\n      case types.initSuccess:\n        return moduleStatus.ready;\n\n      case types.reset:\n        return moduleStatus.pending;\n\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getInfoReducer(types) {\n  return (state = {}, { type, info }) => {\n    if (type === types.fetchSuccess) return info;\n    return state;\n  };\n}\n\nexport function getTimestampReducer(types) {\n  return (state = null, { type, timestamp }) => {\n    if (type === types.fetchSuccess) return timestamp;\n    return state;\n  };\n}\n\nexport default function getAccountInfoReducer(types) {\n  return combineReducers({\n    status: getStatusReducer(types),\n  });\n}\n"]}