{"version":3,"sources":["modules/Analytics/index.js"],"names":["Analytics","deps","dep","optional","auth","call","webphone","contacts","messageSender","adapter","routerInteraction","analyticsKey","appName","appVersion","brandCode","options","actionTypes","_auth","_call","_webphone","_contacts","_messageSender","_adapter","_router","_analyticsKey","_appName","_appVersion","_brandCode","_reducer","_segment","store","subscribe","_onStateChange","load","userId","name","global","analytics","identify","event","properties","trackProps","brand","track","router","eventPostfix","ready","lastActions","length","_promise","_processActions","forEach","action","key","dispatch","type","clear","loginSuccess","ownerId","logout","connect","callSettingMode","connectSuccess","registered","send","sendOver","createCallLog","createSMSLog","clickToDial","clickToSMS","viewEntity","createEntity","editCallLog","editSMSLog","locationChange","path","payload","pathname","target","_getTrackTarget","trackNavigation","callAnswer","isOnTransfer","updateSessions","routes","split","firstRoute","targets","find","undefined","state","lastAction"],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport sleep from '../../lib/sleep';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport actionTypes from './actionTypes';\nimport getAnalyticsReducer from './getAnalyticsReducer';\n\nimport { Segment } from '../../lib/Analytics';\nimport callingModes from '../CallingSettings/callingModes';\n\n/**\n * @class\n * @description Analytics module.\n */\n@Module({\n  deps: [\n    'Auth',\n    'Call',\n    'Webphone',\n    'Contacts',\n    'MessageSender',\n    { dep: 'RouterInteraction', optional: true },\n    { dep: 'AnalyticsAdapter', optional: true },\n    { dep: 'AnalyticsOptions', optional: true }\n  ]\n})\nexport default class Analytics extends RcModule {\n  constructor({\n    auth,\n    call,\n    webphone,\n    contacts,\n    messageSender,\n    adapter,\n    // router,\n    routerInteraction,\n    analyticsKey,\n    appName,\n    appVersion,\n    brandCode,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes\n    });\n    this._auth = auth;\n    this._call = call;\n    this._webphone = webphone;\n    this._contacts = contacts;\n    this._messageSender = messageSender;\n    this._adapter = adapter;\n    this._router = routerInteraction;\n    this._analyticsKey = analyticsKey;\n    this._appName = appName;\n    this._appVersion = appVersion;\n    this._brandCode = brandCode;\n    this._reducer = getAnalyticsReducer(this.actionTypes);\n    this._segment = Segment();\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n    this._segment.load(this._analyticsKey);\n  }\n\n  identify({\n    userId,\n    name,\n  }) {\n    global.analytics.identify(userId, {\n      name\n    });\n  }\n\n  track(event, {\n    ...properties\n  }) {\n    const trackProps = {\n      appName: this._appName,\n      appVersion: this._appVersion,\n      brand: this._brandCode,\n      ...properties,\n    };\n    global.analytics.track(event, trackProps);\n  }\n\n  trackNavigation({ router, eventPostfix }) {\n    const trackProps = {\n      router,\n      appName: this._appName,\n      appVersion: this._appVersion,\n      brand: this._brandCode,\n    };\n    this.track(`Navigator Clicked (${eventPostfix})`, trackProps);\n  }\n\n  async _onStateChange() {\n    if (this.ready && this.lastActions.length && !this._promise) {\n      this._promise = this._processActions();\n    }\n  }\n  async _processActions() {\n    if (this.lastActions.length) {\n      await sleep(300);\n      this.lastActions.forEach((action) => {\n        [\n          '_authentication',\n          '_logout',\n          '_callAttempt',\n          '_callConnected',\n          '_webRTCRegistration',\n          '_smsAttempt',\n          '_smsSent',\n          '_logCall',\n          '_logSMS',\n          '_clickToDial',\n          '_clickToSMS',\n          '_viewEntity',\n          '_createEntity',\n          '_editCallLog',\n          '_editSMSLog',\n          '_navigate',\n          '_inboundCall',\n          '_coldTransfer',\n        ].forEach((key) => {\n          this[key](action);\n        });\n      });\n      this._promise = null;\n      this.store.dispatch({\n        type: this.actionTypes.clear,\n      });\n    }\n  }\n\n  _authentication(action) {\n    if (this._auth && this._auth.actionTypes.loginSuccess === action.type) {\n      this.identify({\n        userId: this._auth.ownerId,\n      });\n      this.track('Authentication');\n    }\n  }\n\n  _logout(action) {\n    if (this._auth && this._auth.actionTypes.logout === action.type) {\n      this.track('Logout');\n    }\n  }\n\n  _callAttempt(action) {\n    if (this._call && this._call.actionTypes.connect === action.type) {\n      if (action.callSettingMode === callingModes.webphone) {\n        this.track('Call Attempt WebRTC');\n      } else {\n        this.track('Call Attempt', {\n          callSettingMode: action.callSettingMode\n        });\n      }\n    }\n  }\n\n  _callConnected(action) {\n    if (this._call && this._call.actionTypes.connectSuccess === action.type) {\n      if (action.callSettingMode === callingModes.webphone) {\n        this.track('Outbound WebRTC Call Connected');\n      } else {\n        this.track('Outbound Call Connected', {\n          callSettingMode: action.callSettingMode\n        });\n      }\n    }\n  }\n\n  _webRTCRegistration(action) {\n    if (this._webphone && this._webphone.actionTypes.registered === action.type) {\n      this.track('WebRTC registration');\n    }\n  }\n\n  _smsAttempt(action) {\n    if (this._messageSender && this._messageSender.actionTypes.send === action.type) {\n      this.track('SMS Attempt');\n    }\n  }\n\n  _smsSent(action) {\n    if (this._messageSender && this._messageSender.actionTypes.sendOver === action.type) {\n      this.track('SMS Sent');\n    }\n  }\n\n  _logCall(action) {\n    if (this._adapter && this._adapter.actionTypes.createCallLog === action.type) {\n      this.track('Log Call');\n    }\n  }\n\n  _logSMS(action) {\n    if (this._adapter && this._adapter.actionTypes.createSMSLog === action.type) {\n      this.track('Log SMS');\n    }\n  }\n\n  _clickToDial(action) {\n    if (this._adapter && this._adapter.actionTypes.clickToDial === action.type) {\n      this.track('Click To Dial');\n    }\n  }\n\n  _clickToSMS(action) {\n    if (this._adapter && this._adapter.actionTypes.clickToSMS === action.type) {\n      this.track('Click To SMS');\n    }\n  }\n\n  _viewEntity(action) {\n    if (this._adapter && this._adapter.actionTypes.viewEntity === action.type) {\n      this.track('View Entity Details');\n    }\n  }\n\n  _createEntity(action) {\n    if (this._adapter && this._adapter.actionTypes.createEntity === action.type) {\n      this.track('Add Entity');\n    }\n  }\n\n  _editCallLog(action) {\n    if (this._adapter && this._adapter.actionTypes.editCallLog === action.type) {\n      this.track('Edit Call Log');\n    }\n  }\n\n  _editSMSLog(action) {\n    if (this._adapter && this._adapter.actionTypes.editSMSLog === action.type) {\n      this.track('Edit SMS Log');\n    }\n  }\n\n  _navigate(action) {\n    if (this._router && this._router.actionTypes.locationChange === action.type) {\n      const path = action.payload && action.payload.pathname;\n      const target = this._getTrackTarget(path);\n      if (target) {\n        this.trackNavigation({\n          ...target\n        });\n      }\n    }\n  }\n\n  _inboundCall(action) {\n    if (this._webphone && this._webphone.actionTypes.callAnswer === action.type) {\n      this.track('Inbound WebRTC Call Connected');\n    }\n  }\n\n  _coldTransfer(action) {\n    if (this._webphone\n      && this._webphone.isOnTransfer === true\n      && this._webphone.actionTypes.updateSessions === action.type\n    ) {\n      this.track('Cold Transfer Call');\n    }\n  }\n\n\n  _getTrackTarget(path) {\n    if (path) {\n      const routes = path.split('/');\n      const firstRoute = routes.length > 1 ? `/${routes[1]}` : '';\n\n      const targets = [{\n        eventPostfix: 'Dialer',\n        router: '/',\n      }, {\n        eventPostfix: 'Compose SMS',\n        router: '/composeText',\n      }, {\n        eventPostfix: 'Messages',\n        router: '/messages',\n      }, {\n        eventPostfix: 'Conversation',\n        router: '/conversations',\n      }, {\n        eventPostfix: 'Call History',\n        router: '/history',\n      }, {\n        eventPostfix: 'Settings',\n        router: '/settings',\n      }, {\n        eventPostfix: 'Conference',\n        router: '/conference',\n      }, {\n        eventPostfix: 'Meeting',\n        router: '/meeting',\n      }, {\n        eventPostfix: 'Contacts',\n        router: '/contacts',\n      }];\n      return targets.find(target => firstRoute === target.router);\n    }\n    return undefined;\n  }\n\n  get analytics() {\n    return global.analytics;\n  }\n\n  get lastActions() {\n    return this.state.lastAction;\n  }\n\n  get status() {\n    return moduleStatuses.ready;\n  }\n\n  get ready() {\n    return true;\n  }\n\n  get pending() {\n    return false;\n  }\n}\n"]}