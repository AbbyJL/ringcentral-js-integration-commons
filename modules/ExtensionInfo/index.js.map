{"version":3,"sources":["modules/ExtensionInfo/index.js"],"names":["DEFAULT_MASK","join","DEFAULT_COUNTRY","id","isoCode","callingCode","extractData","info","serviceFeatures","forEach","f","featureName","enabled","reason","output","ExtensionInfo","deps","dep","optional","client","options","name","fetchFunction","_client","account","extension","get","addSelector","data","_selectors","extensionNumber","regionalSettings","homeCountry","departments"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;;;AAEA,IAAMA,eAAe,CACnB,IADmB,EAEnB,iBAFmB,EAGnB,YAHmB,EAInB,MAJmB,EAKnB,MALmB,EAMnB,QANmB,EAOnB,aAPmB,EAQnB,cARmB,EASnB,aATmB,wBAUC,CAClB,wBADkB,EAElB,qCAFkB,EAGlB,sBAHkB,EAIlB,8BAJkB,EAKlB,YALkB,EAMlBC,IANkB,CAMb,GANa,CAVD,QAiBnBA,IAjBmB,CAiBd,GAjBc,CAArB;;AAmBA,IAAMC,kBAAkB;AACtBC,MAAI,GADkB;AAEtBC,WAAS,IAFa;AAGtBC,eAAa;AAHS,CAAxB;;AAMA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACzB,MAAMC,kBAAkB,EAAxB;AACAD,OAAKC,eAAL,CAAqBC,OAArB,CAA6B,UAACC,CAAD,EAAO;AAClCF,oBAAgBE,EAAEC,WAAlB,IAAiC;AAC/BC,eAASF,EAAEE;AADoB,KAAjC;AAGA,QAAI,CAACF,EAAEE,OAAP,EAAgB;AACdJ,sBAAgBE,EAAEC,WAAlB,EAA+BE,MAA/B,GAAwCH,EAAEG,MAA1C;AACD;AACF,GAPD;AAQA,MAAMC,SAAS,wBAAKP,IAAL,EAAWP,YAAX,CAAf;AACAc,SAAON,eAAP,GAAyBA,eAAzB;AACA,SAAOM,MAAP;AACD;;AAED;;;;IAOqBC,a,WAHpB,gBAAO;AACNC,QAAM,CAAC,QAAD,EAAW,EAAEC,KAAK,sBAAP,EAA+BC,UAAU,IAAzC,EAAX;AADA,CAAP,C;;;AAIC;;;;;AAKA,+BAGG;AAAA;;AAAA,QAFDC,MAEC,QAFDA,MAEC;AAAA,QADEC,OACF;AAAA;;AAAA;AAECC,YAAM,eAFP;AAGCF,oBAHD;AAICG;AAAA,+EAAe;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAYhB,WAAZ;AAAA;AAAA,yBAA8B,MAAKiB,OAAL,CAAaC,OAAb,GAAuBC,SAAvB,GAAmCC,GAAnC,EAA9B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;;AAAA;AAAA;AAAA;AAAA;AAJD,OAKIN,OALJ;;AAOD,UAAKO,WAAL,CAAiB,MAAjB,EACE;AAAA,aAAM,MAAKC,IAAX;AAAA,KADF,EAEE;AAAA,aAASA,QAAQ,EAAjB;AAAA,KAFF;AAIA,UAAKD,WAAL,CAAiB,iBAAjB,EACE,MAAKE,UAAL,CAAgBtB,IADlB,EAEE;AAAA,aAASA,KAAKC,eAAL,IAAwB,EAAjC;AAAA,KAFF;AAXC;AAeF;;;;wBAGU;AACT,aAAO,KAAKqB,UAAL,CAAgBtB,IAAhB,EAAP;AACD;;;wBAEQ;AACP,aAAO,KAAKA,IAAL,CAAUJ,EAAjB;AACD;;;wBAEqB;AACpB,aAAO,KAAKI,IAAL,CAAUuB,eAAjB;AACD;;;wBAEqB;AACpB,aAAO,KAAKD,UAAL,CAAgBrB,eAAhB,EAAP;AACD;;;wBAEa;AACZ,aAAQ,KAAKD,IAAL,CAAUwB,gBAAV,IAA8B,KAAKxB,IAAL,CAAUwB,gBAAV,CAA2BC,WAA1D,IACL9B,eADF;AAED;;;wBAEiB;AAChB,aAAO,KAAKK,IAAL,CAAU0B,WAAjB;AACD;;;wBAEuB;AACtB,aAAO,CAAC,CAAC,KAAKA,WAAd;AACD;;;;kBAtDkBlB,a","file":"index.js","sourcesContent":["import mask from 'json-mask';\nimport { Module } from '../../lib/di';\nimport DataFetcher from '../../lib/DataFetcher';\n\nconst DEFAULT_MASK = [\n  'id',\n  'extensionNumber',\n  'contact(*)',\n  'name',\n  'type',\n  'status',\n  'permissions',\n  'profileImage',\n  'departments',\n  `regionalSettings(${[\n    'timezone(id,name,bias)',\n    'homeCountry(id,isoCode,callingCode)',\n    'language(localeCode)',\n    'formattingLocale(localeCode)',\n    'timeFormat',\n  ].join(',')})`,\n].join(',');\n\nconst DEFAULT_COUNTRY = {\n  id: '1',\n  isoCode: 'US',\n  callingCode: '1',\n};\n\nfunction extractData(info) {\n  const serviceFeatures = {};\n  info.serviceFeatures.forEach((f) => {\n    serviceFeatures[f.featureName] = {\n      enabled: f.enabled,\n    };\n    if (!f.enabled) {\n      serviceFeatures[f.featureName].reason = f.reason;\n    }\n  });\n  const output = mask(info, DEFAULT_MASK);\n  output.serviceFeatures = serviceFeatures;\n  return output;\n}\n\n/**\n * @class\n * @description Extension info module\n */\n@Module({\n  deps: ['Client', { dep: 'ExtensionInfoOptions', optional: true }]\n})\nexport default class ExtensionInfo extends DataFetcher {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   */\n  constructor({\n    client,\n    ...options\n  }) {\n    super({\n      name: 'extensionInfo',\n      client,\n      fetchFunction: async () => extractData(await this._client.account().extension().get()),\n      ...options\n    });\n    this.addSelector('info',\n      () => this.data,\n      data => (data || {}),\n    );\n    this.addSelector('serviceFeatures',\n      this._selectors.info,\n      info => (info.serviceFeatures || {}),\n    );\n  }\n\n\n  get info() {\n    return this._selectors.info();\n  }\n\n  get id() {\n    return this.info.id;\n  }\n\n  get extensionNumber() {\n    return this.info.extensionNumber;\n  }\n\n  get serviceFeatures() {\n    return this._selectors.serviceFeatures();\n  }\n\n  get country() {\n    return (this.info.regionalSettings && this.info.regionalSettings.homeCountry) ||\n      DEFAULT_COUNTRY;\n  }\n\n  get departments() {\n    return this.info.departments;\n  }\n\n  get isCallQueueMember() {\n    return !!this.departments;\n  }\n}\n"]}