{"version":3,"sources":["modules/RegionSettings/getRegionSettingsReducer.js"],"names":["getStatusReducer","getCountryCodeReducer","getAreaCodeReducer","getRegionSettingsReducer","types","state","pending","type","init","initializing","initSuccess","ready","reset","countryCode","setData","areaCode","status"],"mappings":";;;;;QAGgBA,gB,GAAAA,gB;QAeAC,qB,GAAAA,qB;QAOAC,kB,GAAAA,kB;kBAQQC,wB;;AAjCxB;;AACA;;;;;;AAEO,SAASH,gBAAT,CAA0BI,KAA1B,EAAiC;AACtC,SAAO,YAA4C;AAAA,QAA3CC,KAA2C,uEAAnC,uBAAaC,OAAsB;AAAA;AAAA,QAAXC,IAAW,QAAXA,IAAW;;AACjD,YAAQA,IAAR;AACE,WAAKH,MAAMI,IAAX;AACE,eAAO,uBAAaC,YAApB;AACF,WAAKL,MAAMM,WAAX;AACE,eAAO,uBAAaC,KAApB;AACF,WAAKP,MAAMQ,KAAX;AACE,eAAO,uBAAaN,OAApB;AACF;AACE,eAAOD,KAAP;AARJ;AAUD,GAXD;AAYD;;AAEM,SAASJ,qBAAT,CAA+BG,KAA/B,EAAsC;AAC3C,SAAO,YAAiD;AAAA,QAAhDC,KAAgD,uEAAxC,IAAwC;AAAA;AAAA,QAAhCE,IAAgC,SAAhCA,IAAgC;AAAA,kCAA1BM,WAA0B;AAAA,QAA1BA,WAA0B,qCAAZR,KAAY;;AACtD,QAAIE,SAASH,MAAMU,OAAnB,EAA4B,OAAOD,WAAP;AAC5B,WAAOR,KAAP;AACD,GAHD;AAID;;AAEM,SAASH,kBAAT,CAA4BE,KAA5B,EAAmC;AACxC,SAAO,YAA4C;AAAA,QAA3CC,KAA2C,uEAAnC,EAAmC;AAAA;AAAA,QAA7BE,IAA6B,SAA7BA,IAA6B;AAAA,+BAAvBQ,QAAuB;AAAA,QAAvBA,QAAuB,kCAAZV,KAAY;;AACjD,QAAIE,SAASH,MAAMU,OAAnB,EAA4B,OAAOC,QAAP;AAC5B,WAAOV,KAAP;AACD,GAHD;AAID;;AAGc,SAASF,wBAAT,CAAkCC,KAAlC,EAAyC;AACtD,SAAO,4BAAgB;AACrBY,YAAQhB,iBAAiBI,KAAjB;AADa,GAAhB,CAAP;AAGD","file":"getRegionSettingsReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport moduleStatus from '../../enums/moduleStatus';\n\nexport function getStatusReducer(types) {\n  return (state = moduleStatus.pending, { type }) => {\n    switch (type) {\n      case types.init:\n        return moduleStatus.initializing;\n      case types.initSuccess:\n        return moduleStatus.ready;\n      case types.reset:\n        return moduleStatus.pending;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getCountryCodeReducer(types) {\n  return (state = null, { type, countryCode = state }) => {\n    if (type === types.setData) return countryCode;\n    return state;\n  };\n}\n\nexport function getAreaCodeReducer(types) {\n  return (state = '', { type, areaCode = state }) => {\n    if (type === types.setData) return areaCode;\n    return state;\n  };\n}\n\n\nexport default function getRegionSettingsReducer(types) {\n  return combineReducers({\n    status: getStatusReducer(types),\n  });\n}\n"]}