{"version":3,"sources":["modules/BlockedNumber/index.js"],"names":["BlockedNumber","auth","client","storage","ttl","options","actionTypes","_auth","_storage","_client","_ttl","_storageKey","_reducer","prefix","_promise","store","subscribe","status","storageStatus","pending","dispatch","type","init","isFreshLogin","hasItem","Date","now","data","timestamp","loadBlockedNumber","reset","fetch","account","extension","blockedNumber","list","params","setItem","fetchSuccess","actions","fetchError","error","getItem","state"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;IAEqBA,a;;;AACnB,+BAMG;AAAA,QALDC,IAKC,QALDA,IAKC;AAAA,QAJDC,MAIC,QAJDA,MAIC;AAAA,QAHDC,OAGC,QAHDA,OAGC;AAAA,wBAFDC,GAEC;AAAA,QAFDA,GAEC,4BAFK,KAAK,EAAL,GAAU,IAEf;AAAA,QADEC,OACF;AAAA;;AAAA,+KAEIA,OAFJ;AAGCC;AAHD;;AAKD,UAAKC,KAAL,GAAaN,IAAb;AACA,UAAKO,QAAL,GAAgBL,OAAhB;AACA,UAAKM,OAAL,GAAeP,MAAf;AACA,UAAKQ,IAAL,GAAYN,GAAZ;AACA,UAAKO,WAAL,GAAmB,eAAnB;AACA,UAAKC,QAAL,GAAgB,uCAAwB,MAAKC,MAA7B,CAAhB;AACA,UAAKC,QAAL,GAAgB,IAAhB;AAXC;AAYF;;;;iCACY;AAAA;;AACX,WAAKC,KAAL,CAAWC,SAAX,CAAqB,YAAM;AACzB,YACE,OAAKR,QAAL,CAAcS,MAAd,KAAyB,OAAKT,QAAL,CAAcU,aAAd,CAA4BC,OAArD,IACA,OAAKF,MAAL,KAAgB,8BAAoBE,OAFtC,EAGE;AACA,iBAAKJ,KAAL,CAAWK,QAAX,CAAoB;AAClBC,kBAAM,OAAKf,WAAL,CAAiBgB;AADL,WAApB;AAGA,cACE,OAAKf,KAAL,CAAWgB,YAAX,IACA,CAAC,OAAKf,QAAL,CAAcgB,OAAd,CAAsB,OAAKb,WAA3B,CADD,IAEAc,KAAKC,GAAL,KAAa,OAAKC,IAAL,CAAUC,SAAvB,GAAmC,OAAKlB,IAH1C,EAIE;AACA,mBAAKmB,iBAAL;AACD;AACF,SAdD,MAcO,IACL,OAAKrB,QAAL,CAAcS,MAAd,KAAyB,OAAKT,QAAL,CAAcU,aAAd,CAA4BC,OAArD,IACA,OAAKF,MAAL,KAAgB,8BAAoBE,OAF/B,EAGL;AACA,iBAAKJ,KAAL,CAAWK,QAAX,CAAoB;AAClBC,kBAAM,OAAKf,WAAL,CAAiBwB;AADL,WAApB;AAGD;AACF,OAvBD;AAwBD;;;;;;;;;;;AAmBC,oBAAI,CAAC,KAAKhB,QAAV,EAAoB;AAClB,uBAAKA,QAAL,GAAgB,2DAAC;AAAA;AAAA;AAAA;AAAA;AACf,mCAAKC,KAAL,CAAWK,QAAX,CAAoB;AAClBC,oCAAM,OAAKf,WAAL,CAAiByB;AADL,6BAApB;AADe;AAAA,0CAKb,OAAKvB,QALQ;AAAA,0CAKS,OAAKG,WALd;AAAA;AAAA,mCAMU,yBAAU;AAAA,qCAC7B,OAAKF,OAAL,CAAauB,OAAb,GAAuBC,SAAvB,GAAmCC,aAAnC,GAAmDC,IAAnD,CAAwDC,MAAxD,CAD6B;AAAA,6BAAV,CANV;;AAAA;AAAA;AAAA,0CASAX,KAAKC,GAAL,EATA;AAAA;AAMXQ,2CANW;AASXN,uCATW;AAAA;;AAAA,wCAKCS,OALD;;AAWb,mCAAKtB,KAAL,CAAWK,QAAX,CAAoB;AAClBC,oCAAM,OAAKf,WAAL,CAAiBgC;AADL,6BAApB;AAGA,mCAAKxB,QAAL,GAAgB,IAAhB;AAda;AAAA;;AAAA;AAAA;AAAA;;AAgBb,mCAAKC,KAAL,CAAWK,QAAX,CAAoB;AAClBC,oCAAM,OAAKkB,OAAL,CAAaC,UADD;AAElBC;AAFkB,6BAApB;AAIA,mCAAK3B,QAAL,GAAgB,IAAhB;AApBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAD,IAAhB;AAwBD;;uBACK,KAAKA,Q;;;;;;;;;;;;;;;;;;wBA3CF;AACT,aAAO,KAAKN,QAAL,CAAckC,OAAd,CAAsB,KAAK/B,WAA3B,CAAP;AACD;;;wBAEY;AACX,aAAO,KAAKgC,KAAL,CAAW1B,MAAlB;AACD;;;wBAEW;AACV,aAAO,KAAK0B,KAAL,CAAWF,KAAlB;AACD;;;wBAEyB;AACxB;AACD;;;;;kBA7DkBzC,a","file":"index.js","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport blockedNumberStatus from './blockedNumberStatus';\nimport blockedNumberActionTypes from './blockedNumberActionTypes';\nimport getBlockedNumberReducer from './getBlockedNumberReducer';\nimport fetchList from '../../lib/fetchList';\n\nexport default class BlockedNumber extends RcModule {\n  constructor({\n    auth,\n    client,\n    storage,\n    ttl = 30 * 60 * 1000,\n    ...options,\n  }) {\n    super({\n      ...options,\n      actionTypes: blockedNumberActionTypes,\n    });\n    this._auth = auth;\n    this._storage = storage;\n    this._client = client;\n    this._ttl = ttl;\n    this._storageKey = 'blockedNumber';\n    this._reducer = getBlockedNumberReducer(this.prefix);\n    this._promise = null;\n  }\n  initialize() {\n    this.store.subscribe(() => {\n      if (\n        this._storage.status !== this._storage.storageStatus.pending &&\n        this.status === blockedNumberStatus.pending\n      ) {\n        this.store.dispatch({\n          type: this.actionTypes.init,\n        });\n        if (\n          this._auth.isFreshLogin ||\n          !this._storage.hasItem(this._storageKey) ||\n          Date.now() - this.data.timestamp > this._ttl\n        ) {\n          this.loadBlockedNumber();\n        }\n      } else if (\n        this._storage.status === this._storage.storageStatus.pending &&\n        this.status !== blockedNumberStatus.pending\n      ) {\n        this.store.dispatch({\n          type: this.actionTypes.reset,\n        });\n      }\n    });\n  }\n\n  get data() {\n    return this._storage.getItem(this._storageKey);\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get error() {\n    return this.state.error;\n  }\n\n  get blockedNumberStatus() {\n    return blockedNumberStatus;\n  }\n\n  async loadBlockedNumber() {\n    if (!this._promise) {\n      this._promise = (async () => {\n        this.store.dispatch({\n          type: this.actionTypes.fetch,\n        });\n        try {\n          this._storage.setItem(this._storageKey, {\n            blockedNumber: await fetchList(params => (\n              this._client.account().extension().blockedNumber().list(params)\n            )),\n            timestamp: Date.now(),\n          });\n          this.store.dispatch({\n            type: this.actionTypes.fetchSuccess,\n          });\n          this._promise = null;\n        } catch (error) {\n          this.store.dispatch({\n            type: this.actions.fetchError,\n            error,\n          });\n          this._promise = null;\n          throw error;\n        }\n      })();\n    }\n    await this._promise;\n  }\n}\n"]}