{"version":3,"sources":["modules/Environment/getEnvironmentReducer.js"],"names":["getStatusReducer","getChangedReducer","getServerReducer","getEnabledReducer","getEnvironmentReducer","types","state","pending","type","init","ready","environmentChanged","setData","defaultServer","server","enabled","status","changed"],"mappings":";;;;;QAGgBA,gB,GAAAA,gB;QAOAC,iB,GAAAA,iB;QAOAC,gB,GAAAA,gB;QAOAC,iB,GAAAA,iB;kBAOQC,qB;;AA/BxB;;AACA;;;;;;AAEO,SAASJ,gBAAT,CAA0BK,KAA1B,EAAiC;AACtC,SAAO,YAA4C;AAAA,QAA3CC,KAA2C,uEAAnC,uBAAaC,OAAsB;AAAA;AAAA,QAAXC,IAAW,QAAXA,IAAW;;AACjD,QAAIA,SAASH,MAAMI,IAAnB,EAAyB,OAAO,uBAAaC,KAApB;AACzB,WAAOJ,KAAP;AACD,GAHD;AAID;;AAEM,SAASL,iBAAT,CAA2BI,KAA3B,EAAkC;AACvC,SAAO,YAAiD;AAAA,QAAhDC,KAAgD,uEAAxC,KAAwC;AAAA;AAAA,QAA/BE,IAA+B,SAA/BA,IAA+B;AAAA,QAAzBG,kBAAyB,SAAzBA,kBAAyB;;AACtD,QAAIH,SAASH,MAAMO,OAAnB,EAA4B,OAAOD,kBAAP;AAC5B,WAAO,KAAP;AACD,GAHD;AAID;;AAEM,SAAST,gBAAT,QAAoD;AAAA,MAAxBG,KAAwB,SAAxBA,KAAwB;AAAA,MAAjBQ,aAAiB,SAAjBA,aAAiB;;AACzD,SAAO,YAA6C;AAAA,QAA5CP,KAA4C,uEAApCO,aAAoC;AAAA;AAAA,QAAnBL,IAAmB,SAAnBA,IAAmB;AAAA,QAAbM,MAAa,SAAbA,MAAa;;AAClD,QAAIN,SAASH,MAAMO,OAAnB,EAA4B,OAAOE,MAAP;AAC5B,WAAOR,KAAP;AACD,GAHD;AAID;;AAEM,SAASH,iBAAT,CAA2BE,KAA3B,EAAkC;AACvC,SAAO,YAAsC;AAAA,QAArCC,KAAqC,uEAA7B,KAA6B;AAAA;AAAA,QAApBE,IAAoB,SAApBA,IAAoB;AAAA,QAAdO,OAAc,SAAdA,OAAc;;AAC3C,QAAIP,SAASH,MAAMO,OAAnB,EAA4B,OAAOG,OAAP;AAC5B,WAAOT,KAAP;AACD,GAHD;AAID;;AAEc,SAASF,qBAAT,CAA+BC,KAA/B,EAAsC;AACnD,SAAO,4BAAgB;AACrBW,YAAQhB,iBAAiBK,KAAjB,CADa;AAErBY,aAAShB,kBAAkBI,KAAlB;AAFY,GAAhB,CAAP;AAID","file":"getEnvironmentReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport moduleStatus from '../../enums/moduleStatus';\n\nexport function getStatusReducer(types) {\n  return (state = moduleStatus.pending, { type }) => {\n    if (type === types.init) return moduleStatus.ready;\n    return state;\n  };\n}\n\nexport function getChangedReducer(types) {\n  return (state = false, { type, environmentChanged }) => {\n    if (type === types.setData) return environmentChanged;\n    return false;\n  };\n}\n\nexport function getServerReducer({ types, defaultServer }) {\n  return (state = defaultServer, { type, server }) => {\n    if (type === types.setData) return server;\n    return state;\n  };\n}\n\nexport function getEnabledReducer(types) {\n  return (state = false, { type, enabled }) => {\n    if (type === types.setData) return enabled;\n    return state;\n  };\n}\n\nexport default function getEnvironmentReducer(types) {\n  return combineReducers({\n    status: getStatusReducer(types),\n    changed: getChangedReducer(types),\n  });\n}\n"]}