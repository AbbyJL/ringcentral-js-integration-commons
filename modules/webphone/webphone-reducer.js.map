{"version":3,"sources":["modules/webphone/webphone-reducer.js"],"names":["getReducer","initialState","status","preRegister","toNumber","fromNumber","remoteIdentity","localIdentity","operation","error","prefix","actions","state","action","type","registerSuccess","registerSuccessed","registerError","registerFailed","unregister","call","callConnecting","payload","callIncoming","callConnect","callConnected","callAccept","callEnd","callError","callFailed","callOperation","sessionError"],"mappings":";;;;;;;;;;kBAkBwBA,U;;AAlBxB;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,IAAMC,eAAe;AACnBC,UAAQ,yBAAeC,WADJ;AAEnB;AACAC,YAAU,EAHS;AAInBC,cAAY,EAJO;AAKnB;AACAC,kBAAgB,IANG;AAOnBC,iBAAe,IAPI;AAQnBC,aAAW,4BARQ;AASnBC,SAAO;AATY,CAArB;;AAYe,SAAST,UAAT,CAAoBU,MAApB,EAA4B;AACzC,MAAMC,UAAU,2DAA+BD,MAA/B,CAAhB;;AAEA,SAAO,UAACE,KAAD,EAAQC,MAAR,EAAmB;AACxB,QAAI,OAAOD,KAAP,KAAiB,WAArB,EAAkC,OAAO,sBAAc,EAAd,EAAkBX,YAAlB,CAAP;AAClC,QAAI,CAACY,MAAL,EAAa,OAAOD,KAAP;AACb,YAAQC,OAAOC,IAAf;;AAEE,WAAKH,QAAQI,eAAb;AACE,eAAO,sBAAc,EAAd,EAAkBH,KAAlB,EAAyB;AAC9BV,kBAAQ,yBAAec;AADO,SAAzB,CAAP;AAGF,WAAKL,QAAQM,aAAb;AACE,eAAO,sBAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC9BV,kBAAQ,yBAAegB,cADO;AAE9BT,iBAAOI,OAAOJ;AAFgB,SAAzB,CAAP;AAIF,WAAKE,QAAQQ,UAAb;AACE,eAAOlB,YAAP;AACF,WAAKU,QAAQS,IAAb;AACE,eAAO,sBAAc,EAAd,EAAkBR,KAAlB,EAAyB;AAC9BV,kBAAQ,yBAAemB,cADO;AAE9BjB,oBAAUS,OAAOS,OAAP,CAAelB,QAFK;AAG9BC,sBAAYQ,OAAOS,OAAP,CAAejB;AAHG,SAAzB,CAAP;AAKF,WAAKM,QAAQY,YAAb;AACE,eAAO,sBAAc,EAAd,EAAkBX,KAAlB,EAAyB;AAC9BV,kBAAQ,yBAAeqB,YADO;AAE9BjB,0BAAgBO,OAAOS,OAAP,CAAehB,cAFD;AAG9BC,yBAAeM,OAAOS,OAAP,CAAef;AAHA,SAAzB,CAAP;AAKF;AACA,WAAKI,QAAQa,WAAb;AACE,eAAO,sBAAc,EAAd,EAAkBZ,KAAlB,EAAyB;AAC9BV,kBAAQ,yBAAeuB,aADO;AAE9BnB,0BAAgBO,OAAOS,OAAP,CAAehB,cAFD;AAG9BC,yBAAeM,OAAOS,OAAP,CAAef;AAHA,SAAzB,CAAP;AAKF,WAAKI,QAAQe,UAAb;AACE,eAAO,sBAAc,EAAd,EAAkBd,KAAlB,EAAyB;AAC9BV,kBAAQ,yBAAeuB;AADO,SAAzB,CAAP;AAGF,WAAKd,QAAQgB,OAAb;AACE,eAAO,sBAAc,EAAd,EAAkB1B,YAAlB,EAAgC;AACrCC,kBAAQ,yBAAec,iBADc;AAErCP,iBAAOI,OAAOJ;AAFuB,SAAhC,CAAP;AAIF,WAAKE,QAAQiB,SAAb;AACE,eAAO,sBAAc,EAAd,EAAkBhB,KAAlB,EAAyB;AAC9BV,kBAAQ,yBAAe2B,UADO;AAE9BpB,iBAAOI,OAAOJ;AAFgB,SAAzB,CAAP;AAIF,WAAKE,QAAQmB,aAAb;AACE,eAAO,sBAAc,EAAd,EAAkBlB,KAAlB,EAAyB;AAC9BJ,qBAAW,2BAAYI,MAAMJ,SAAlB,EAA6BK,OAAOL,SAApC;AADmB,SAAzB,CAAP;AAGF,WAAKG,QAAQoB,YAAb;AACE,eAAO,sBAAc,EAAd,EAAkB9B,YAAlB,EAAgC;AACrCQ,iBAAOI,OAAOJ;AADuB,SAAhC,CAAP;;AAIF;AACE,eAAOG,KAAP;AAxDJ;AA0DD,GA7DD;AA8DD","file":"webphone-reducer.js","sourcesContent":["import { prefixActions } from '../../lib/redux-helper';\nimport webphoneActions from './webphone-actions';\nimport webphoneStatus from './webphone-status';\n\nimport callReducer from './call-reducer';\n\nconst initialState = {\n  status: webphoneStatus.preRegister,\n  // assign from UI\n  toNumber: '',\n  fromNumber: '',\n  // sip info return from sip server\n  remoteIdentity: null,\n  localIdentity: null,\n  operation: callReducer(),\n  error: null,\n};\n\nexport default function getReducer(prefix) {\n  const actions = prefixActions(webphoneActions, prefix);\n\n  return (state, action) => {\n    if (typeof state === 'undefined') return Object.assign({}, initialState);\n    if (!action) return state;\n    switch (action.type) {\n\n      case actions.registerSuccess:\n        return Object.assign({}, state, {\n          status: webphoneStatus.registerSuccessed,\n        });\n      case actions.registerError:\n        return Object.assign({}, state, {\n          status: webphoneStatus.registerFailed,\n          error: action.error,\n        });\n      case actions.unregister:\n        return initialState;\n      case actions.call:\n        return Object.assign({}, state, {\n          status: webphoneStatus.callConnecting,\n          toNumber: action.payload.toNumber,\n          fromNumber: action.payload.fromNumber,\n        });\n      case actions.callIncoming:\n        return Object.assign({}, state, {\n          status: webphoneStatus.callIncoming,\n          remoteIdentity: action.payload.remoteIdentity,\n          localIdentity: action.payload.localIdentity,\n        });\n      // TODO: update fromNumber, toNumber\n      case actions.callConnect:\n        return Object.assign({}, state, {\n          status: webphoneStatus.callConnected,\n          remoteIdentity: action.payload.remoteIdentity,\n          localIdentity: action.payload.localIdentity,\n        });\n      case actions.callAccept:\n        return Object.assign({}, state, {\n          status: webphoneStatus.callConnected,\n        });\n      case actions.callEnd:\n        return Object.assign({}, initialState, {\n          status: webphoneStatus.registerSuccessed,\n          error: action.error,\n        });\n      case actions.callError:\n        return Object.assign({}, state, {\n          status: webphoneStatus.callFailed,\n          error: action.error,\n        });\n      case actions.callOperation:\n        return Object.assign({}, state, {\n          operation: callReducer(state.operation, action.operation),\n        });\n      case actions.sessionError:\n        return Object.assign({}, initialState, {\n          error: action.error,\n        });\n\n      default:\n        return state;\n    }\n  };\n}\n"]}