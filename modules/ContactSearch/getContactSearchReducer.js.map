{"version":3,"sources":["modules/ContactSearch/getContactSearchReducer.js"],"names":["getContactSearchStatusReducer","getSearchingReducer","getSearchCriteriaReducer","getContactSearchReducer","types","state","idle","type","search","searching","prepareSearch","searchSuccess","searchError","initialState","searchOnSources","searchString","result","entities","join","concat","resetSuccess","reset","sourceName","searchText","pageNumber","updateSearchCriteria","restSearchCriteria","reducers","status","searchStatus","searchCriteria"],"mappings":";;;;;;;;;;QAKgBA,6B,GAAAA,6B;QAiBAC,mB,GAAAA,mB;QAwCAC,wB,GAAAA,wB;kBA6BQC,uB;;AA3FxB;;AACA;;;;AACA;;;;AACA;;;;AAEO,SAASH,6BAAT,CAAuCI,KAAvC,EAA8C;AACnD,SAAO,YAAgD;AAAA,QAA/CC,KAA+C,uEAAvC,8BAAoBC,IAAmB;AAAA;AAAA,QAAXC,IAAW,QAAXA,IAAW;;AACrD,YAAQA,IAAR;AACE,WAAKH,MAAMI,MAAX;AACE,eAAO,8BAAoBC,SAA3B;;AAEF,WAAKL,MAAMM,aAAX;AACA,WAAKN,MAAMO,aAAX;AACA,WAAKP,MAAMQ,WAAX;AACE,eAAO,8BAAoBN,IAA3B;;AAEF;AACE,eAAOD,KAAP;AAVJ;AAYD,GAbD;AAcD;;AAEM,SAASJ,mBAAT,CAA6BG,KAA7B,EAAoC;AACzC,MAAMS,eAAe;AACnBC,qBAAiB,EADE;AAEnBC,kBAAc,EAFK;AAGnBC,YAAQ;AAHW,GAArB;AAKA,SAAO,YAKD;AAAA,QALEX,KAKF,uEALUQ,YAKV;AAAA;AAAA,QAJJN,IAII,SAJJA,IAII;AAAA,QAHJO,eAGI,SAHJA,eAGI;AAAA,QAFJC,YAEI,SAFJA,YAEI;AAAA,QADJE,QACI,SADJA,QACI;;AACJ,YAAQV,IAAR;AACE,WAAKH,MAAMO,aAAX;AACE,YACEN,MAAMU,YAAN,KAAuBA,YAAvB,IACAV,MAAMS,eAAN,CAAsBI,IAAtB,CAA2B,GAA3B,MAAoCJ,gBAAgBI,IAAhB,CAAqB,GAArB,CAFtC,EAGE;AACA,4CACKb,KADL;AAEEW,oBAAQX,MAAMW,MAAN,CAAaG,MAAb,CAAoBF,QAApB;AAFV;AAID;AACD,eAAO;AACLH,0CADK;AAELC,oCAFK;AAGLC,kBAAQC;AAHH,SAAP;AAKF,WAAKb,MAAMgB,YAAX;AACA,WAAKhB,MAAMM,aAAX;AACA,WAAKN,MAAMiB,KAAX;AACA,WAAKjB,MAAMQ,WAAX;AACE,eAAOC,YAAP;AACF,WAAKT,MAAMI,MAAX;AACA;AACE,eAAOH,KAAP;AAvBJ;AAyBD,GA/BD;AAgCD;;AAEM,SAASH,wBAAT,CAAkCE,KAAlC,EAAyC;AAC9C,MAAMS,eAAe;AACnBS,2CADmB;AAEnBC,gBAAY,EAFO;AAGnBC,gBAAY;AAHO,GAArB;AAKA,SAAO,YAAwE;AAAA,QAAvEnB,KAAuE,uEAA/DQ,YAA+D;AAAA;AAAA,QAA/CN,IAA+C,SAA/CA,IAA+C;AAAA,QAAzCe,UAAyC,SAAzCA,UAAyC;AAAA,QAA7BC,UAA6B,SAA7BA,UAA6B;AAAA,QAAjBC,UAAiB,SAAjBA,UAAiB;;AAC7E,YAAQjB,IAAR;AACE,WAAKH,MAAMqB,oBAAX;AACE,YACEpB,MAAMiB,UAAN,KAAqBA,UAArB,IACAjB,MAAMkB,UAAN,KAAqBA,UADrB,IAEAlB,MAAMmB,UAAN,KAAqBA,UAHvB,EAIE;AACA,iBAAO;AACLF,kCADK;AAELC,kCAFK;AAGLC;AAHK,WAAP;AAKD;AACD,eAAOnB,KAAP;AACF,WAAKD,MAAMsB,kBAAX;AACE,eAAOb,YAAP;AACF;AACE,eAAOR,KAAP;AAjBJ;AAmBD,GApBD;AAqBD;;AAEc,SAASF,uBAAT,CAAiCC,KAAjC,EAAuD;AAAA,MAAfuB,QAAe,uEAAJ,EAAI;;AACpE,SAAO,uDACFA,QADE;AAELC,YAAQ,sCAAuBxB,KAAvB,CAFH;AAGLyB,kBAAc7B,8BAA8BI,KAA9B,CAHT;AAILK,eAAWR,oBAAoBG,KAApB,CAJN;AAKL0B,oBAAgB5B,yBAAyBE,KAAzB;AALX,KAAP;AAOD","file":"getContactSearchReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\nimport contactSearchStatus from './contactSearchStatus';\nimport { AllContactSourceName } from './index';\n\nexport function getContactSearchStatusReducer(types) {\n  return (state = contactSearchStatus.idle, { type }) => {\n    switch (type) {\n      case types.search:\n        return contactSearchStatus.searching;\n\n      case types.prepareSearch:\n      case types.searchSuccess:\n      case types.searchError:\n        return contactSearchStatus.idle;\n\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getSearchingReducer(types) {\n  const initialState = {\n    searchOnSources: [],\n    searchString: '',\n    result: [],\n  };\n  return (state = initialState, {\n    type,\n    searchOnSources,\n    searchString,\n    entities,\n  }) => {\n    switch (type) {\n      case types.searchSuccess:\n        if (\n          state.searchString === searchString &&\n          state.searchOnSources.join(',') === searchOnSources.join(',')\n        ) {\n          return {\n            ...state,\n            result: state.result.concat(entities)\n          };\n        }\n        return {\n          searchOnSources,\n          searchString,\n          result: entities\n        };\n      case types.resetSuccess:\n      case types.prepareSearch:\n      case types.reset:\n      case types.searchError:\n        return initialState;\n      case types.search:\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getSearchCriteriaReducer(types) {\n  const initialState = {\n    sourceName: AllContactSourceName,\n    searchText: '',\n    pageNumber: 1\n  };\n  return (state = initialState, { type, sourceName, searchText, pageNumber }) => {\n    switch (type) {\n      case types.updateSearchCriteria:\n        if (\n          state.sourceName !== sourceName ||\n          state.searchText !== searchText ||\n          state.pageNumber !== pageNumber\n        ) {\n          return {\n            sourceName,\n            searchText,\n            pageNumber,\n          };\n        }\n        return state;\n      case types.restSearchCriteria:\n        return initialState;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getContactSearchReducer(types, reducers = {}) {\n  return combineReducers({\n    ...reducers,\n    status: getModuleStatusReducer(types),\n    searchStatus: getContactSearchStatusReducer(types),\n    searching: getSearchingReducer(types),\n    searchCriteria: getSearchCriteriaReducer(types),\n  });\n}\n"]}