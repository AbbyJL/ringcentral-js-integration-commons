{"version":3,"sources":["modules/Auth/index.js"],"names":["getDefaultRedirectUri","window","resolve","location","href","getDefaultProxyUri","Auth","client","alert","redirectUri","proxyUri","brand","locale","tabManager","options","actionTypes","_client","_alert","_brand","_locale","_redirectUri","_proxyUri","_tabManager","_reducer","_beforeLogoutHandlers","platform","service","on","events","loginSuccess","store","dispatch","type","token","auth","data","loginError","error","danger","message","payload","logoutSuccess","logoutError","refreshSuccess","refreshError","refreshTokenValid","access_token","sessionExpired","ttl","_cache","clean","loggedIn","_bindEvents","subscribe","status","pending","ready","init","initSuccess","loginStatus","notLoggedIn","send","event","name","args","tabSync","username","password","extension","remember","code","login","state","brandId","display","prompt","force","loginUrl","callbackUri","parse","query","Error","key","Object","prototype","hasOwnProperty","beforeLogout","handlers","handler","result","cancelLogout","reject","beforeLogoutError","logout","add","removeBeforeLogoutHandler","remove","onLogin","document","_proxyFrame","createElement","src","style","body","appendChild","_callbackHandler","origin","parseCallbackUri","accessDenied","internalError","addEventListener","removeChild","removeEventListener","contentWindow","postMessage","oAuthUri","getLoginUrl","id","encodeURIComponent","currentLocale","ownerId","freshLogin"],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport url from 'url';\nimport getAuthReducer from './getAuthReducer';\nimport actionTypes from './actionTypes';\nimport loginStatus from './loginStatus';\nimport authMessages from './authMessages';\nimport moduleStatus from '../../enums/moduleStatus';\n\nfunction getDefaultRedirectUri() {\n  if (typeof window !== 'undefined') {\n    return url.resolve(window.location.href, './redirect.html');\n  }\n  return null;\n}\n\nfunction getDefaultProxyUri() {\n  if (typeof window !== 'undefined') {\n    return url.resolve(window.location.href, './proxy.html');\n  }\n  return null;\n}\n\n/**\n * @class\n * @description Authentication module\n */\nexport default class Auth extends RcModule {\n  /**\n   * @constructor\n   */\n  constructor({\n    client,\n    alert,\n    redirectUri = getDefaultRedirectUri(),\n    proxyUri = getDefaultProxyUri(),\n    brand,\n    locale,\n    tabManager,\n    ...options\n  } = {}) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._client = client;\n    this._alert = alert;\n    this._brand = brand;\n    this._locale = locale;\n    this._redirectUri = redirectUri;\n    this._proxyUri = proxyUri;\n    this._tabManager = tabManager;\n    this._reducer = getAuthReducer(this.actionTypes);\n    this._beforeLogoutHandlers = new Set();\n  }\n  _bindEvents() {\n    const platform = this._client.service.platform();\n    platform.on(platform.events.loginSuccess, () => {\n      this.store.dispatch({\n        type: this.actionTypes.loginSuccess,\n        token: platform.auth().data(),\n      });\n    });\n    platform.on(platform.events.loginError, error => {\n      this.store.dispatch({\n        type: this.actionTypes.loginError,\n        error,\n      });\n      if (error) {\n        this._alert.danger({\n          message: authMessages.loginError,\n          payload: error,\n        });\n      }\n    });\n    platform.on(platform.events.logoutSuccess, () => {\n      this.store.dispatch({\n        type: this.actionTypes.logoutSuccess,\n      });\n    });\n    platform.on(platform.events.logoutError, error => {\n      this.store.dispatch({\n        type: this.actionTypes.logoutError,\n        error,\n      });\n      if (error) {\n        this._alert.danger({\n          message: authMessages.logoutError,\n          payload: error,\n        });\n      }\n    });\n    platform.on(platform.events.refreshSuccess, () => {\n      this.store.dispatch({\n        type: this.actionTypes.refreshSuccess,\n        token: platform.auth().data(),\n      });\n    });\n    platform.on(platform.events.refreshError, error => {\n      // user is still considered logged in if the refreshToken is still valid\n      const refreshTokenValid = platform.auth().refreshTokenValid();\n      this.store.dispatch({\n        type: this.actionTypes.refreshError,\n        error,\n        refreshTokenValid,\n      });\n      if (!refreshTokenValid && this._client.service.platform().auth().data().access_token !== '') {\n        this._alert.danger({\n          message: authMessages.sessionExpired,\n          payload: error,\n          ttl: 0,\n        });\n        // clean the cache so the error doesn't show again\n        platform._cache.clean();\n      }\n    });\n  }\n  initialize() {\n    let loggedIn;\n    this._bindEvents();\n    this.store.subscribe(async () => {\n      if (\n        this.status === moduleStatus.pending &&\n        this._locale.ready &&\n        this._tabManager.ready\n      ) {\n        this.store.dispatch({\n          type: this.actionTypes.init,\n        });\n        const platform = this._client.service.platform();\n        loggedIn = await platform.loggedIn();\n        this.store.dispatch({\n          type: this.actionTypes.initSuccess,\n          loggedIn,\n          token: loggedIn ? platform.auth().data() : null,\n        });\n      } else if (\n        this._tabManager.ready &&\n        this.ready &&\n        (\n          loggedIn && this.loginStatus === loginStatus.notLoggedIn ||\n          !loggedIn && this.loginStatus === loginStatus.loggedIn\n        )\n      ) {\n        loggedIn = !loggedIn;\n        this._tabManager.send('loginStatusChange', loggedIn);\n      } else if (\n        this._tabManager.event &&\n        this._tabManager.event.name === 'loginStatusChange' &&\n        this._tabManager.event.args[0] !== loggedIn\n      ) {\n        loggedIn = this._tabManager.event.args[0];\n        this.store.dispatch({\n          type: this.actionTypes.tabSync,\n          loggedIn,\n          token: loggedIn ? this._client.service.platform().auth().data() : null,\n        });\n      }\n    });\n  }\n\n  get redirectUri() {\n    return this._redirectUri;\n  }\n\n  get proxyUri() {\n    return this._proxyUri;\n  }\n\n  get ownerId() {\n    return this.state.ownerId;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatus.ready;\n  }\n\n  get loginStatus() {\n    return this.state.loginStatus;\n  }\n\n  get isFreshLogin() {\n    return this.state.freshLogin;\n  }\n\n  /**\n   * @function\n   * @param {String} options.username\n   * @param {String} options.password\n   * @param {String} options.extension\n   * @param {Booleal|Number} options.remember\n   * @param {String} params.code,\n   * @param {String} params.redirectUri,\n   * @return {Promise}\n   * @description Login either with username/password or with authorization code\n   */\n  async login({ username, password, extension, remember, code, redirectUri }) {\n    this.store.dispatch({\n      type: this.actionTypes.login,\n    });\n    return await this._client.login({\n      username,\n      password,\n      extension,\n      remember,\n      code,\n      redirectUri,\n    });\n  }\n  /**\n   * @function\n   * @param {String} options.redirectUri\n   * @param {String} options.brandId\n   * @param {Boolean} options.force\n   * @return {String}\n   * @description get OAuth page url\n   */\n  getLoginUrl({ redirectUri, state, brandId, display, prompt, force }) {\n    return `${this._client.loginUrl({\n      redirectUri,\n      state,\n      brandId,\n      display,\n      prompt,\n    })}${force ? '&force' : ''}`;\n  }\n  /**\n   * @function\n   * @param {String} callbackUri\n   * @return {String} code\n   */\n  parseCallbackUri(callbackUri) {\n    const { query } = url.parse(callbackUri, true);\n    if (query.error) {\n      const error = new Error(query.error);\n      for (const key in query) {\n        if (query::Object.prototype.hasOwnProperty(key)) {\n          error[key] = query[key];\n        }\n      }\n      throw error;\n    }\n    return query.code;\n  }\n\n  /**\n   * @function\n   * @description Triggers the beforeLogoutHandlers to run\n   *  and then proceed to logout from ringcentral.\n   */\n  async logout() {\n    this.store.dispatch({\n      type: this.actionTypes.beforeLogout,\n    });\n    const handlers = [...this._beforeLogoutHandlers];\n    try {\n      for (const handler of handlers) {\n        const result = await (async () => handler())();\n        if (result) {\n          this.store.dispatch({\n            type: this.actionTypes.cancelLogout,\n          });\n          return Promise.reject(result);\n        }\n      }\n    } catch (error) {\n      this._alert.danger({\n        message: authMessages.beforeLogoutError,\n        payload: error,\n      });\n    }\n    this.store.dispatch({\n      type: this.actionTypes.logout,\n    });\n    return await this._client.logout();\n  }\n\n   /**\n   * @function\n   * @param {Function} handler\n   * @returns {Function}\n   */\n  addBeforeLogoutHandler(handler) {\n    this._beforeLogoutHandlers.add(handler);\n    return () => {\n      this.removeBeforeLogoutHandler(handler);\n    };\n  }\n\n   /**\n   * @function\n   * @param {Function} handler\n   */\n  removeBeforeLogoutHandler(handler) {\n    this._beforeLogoutHandlers.remove(handler);\n  }\n\n  async checkIsLoggedIn() {\n    // SDK would return false when there's temporary network issues,\n    // but we should not return use back to welcome string and should\n    // still consider the user as being logged in.\n    await this._client.service.platform().loggedIn();\n    return this.loginStatus === loginStatus.loggedIn;\n  }\n\n  /**\n   * @function\n   * @description Create the proxy frame and append to document if available.\n   * @param {Function} onLogin - Function to be called when user successfully logged in\n   *  through oAuth.\n   */\n  setupProxyFrame(onLogin) {\n    if (\n      typeof window !== 'undefined' &&\n      typeof document !== 'undefined' &&\n      this._proxyUri &&\n      this._proxyUri !== '' &&\n      !this._proxyFrame\n    ) {\n      this._proxyFrame = document.createElement('iframe');\n      this._proxyFrame.src = this.proxyUri;\n      this._proxyFrame.style.display = 'none';\n      document.body.appendChild(this._proxyFrame);\n      this._callbackHandler = async ({ origin, data }) => {\n        // TODO origin check\n        if (data) {\n          const {\n            callbackUri,\n          } = data;\n          if (callbackUri) {\n            try {\n              const code = this.parseCallbackUri(callbackUri);\n              if (code) {\n                await this.login({\n                  code,\n                  redirectUri: this.redirectUri,\n                });\n                if (typeof onLogin === 'function') {\n                  onLogin();\n                }\n              }\n            } catch (error) {\n              let message;\n              switch (error.message) {\n                case 'invalid_request':\n                case 'unauthorized_client':\n                case 'access_denied':\n                case 'unsupported_response_type':\n                case 'invalid_scope':\n                  message = authMessages.accessDenied;\n                  break;\n                case 'server_error':\n                case 'temporarily_unavailable':\n                default:\n                  message = authMessages.internalError;\n                  break;\n              }\n\n              this._alert.danger({\n                message,\n                payload: error,\n              });\n            }\n          }\n        }\n      };\n      window.addEventListener('message', this._callbackHandler);\n    }\n  }\n  clearProxyFrame() {\n    if (this._proxyFrame) {\n      document.body.removeChild(this._proxyFrame);\n      this._proxyFrame = null;\n      window.removeEventListener('message', this._callbackHandler);\n      this._callbackHandler = null;\n    }\n  }\n  openOAuthPage() {\n    if (this._proxyFrame) {\n      this._proxyFrame.contentWindow.postMessage({\n        oAuthUri: `${this.getLoginUrl({\n          redirectUri: this.redirectUri,\n          brandId: this._brand.id,\n        })}&force=true&localeId=${encodeURIComponent(this._locale.currentLocale)}`,\n      }, '*');\n    }\n  }\n}\n"]}