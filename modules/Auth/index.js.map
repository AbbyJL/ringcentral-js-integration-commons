{"version":3,"sources":["modules/Auth/index.js"],"names":["DEFAULT_PROXY_RETRY","getDefaultRedirectUri","window","resolve","location","href","getDefaultProxyUri","Auth","client","alert","redirectUri","proxyUri","brand","locale","tabManager","environment","defaultProxyRetry","options","actionTypes","_callbackHandler","origin","data","_client","_alert","_brand","_locale","_redirectUri","_proxyUri","_tabManager","_environment","_defaultProxyRetry","_reducer","_beforeLogoutHandlers","_proxyFrame","_proxyFrameLoaded","platform","service","on","events","loginSuccess","store","dispatch","type","token","auth","loginError","error","danger","message","payload","logoutSuccess","logoutError","refreshSuccess","refreshError","refreshTokenValid","access_token","sessionExpired","ttl","_cache","clean","loggedIn","_bindEvents","subscribe","status","pending","ready","init","initSuccess","loginStatus","notLoggedIn","send","event","name","args","tabSync","changed","username","password","extension","remember","code","login","state","brandId","display","prompt","force","loginUrl","callbackUri","parse","query","Error","key","Object","prototype","hasOwnProperty","beforeLogout","handlers","handler","result","cancelLogout","reject","beforeLogoutError","logout","add","removeBeforeLogoutHandler","remove","onLogin","document","createElement","src","style","body","appendChild","proxyLoaded","parseCallbackUri","accessDenied","internalError","clearTimeout","_retryTimeoutId","addEventListener","setTimeout","_retrySetupProxyFrame","clearProxyFrame","setupProxyFrame","removeChild","removeEventListener","proxyCleared","contentWindow","postMessage","oAuthUri","getLoginUrl","id","encodeURIComponent","currentLocale","ownerId","freshLogin"],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport url from 'url';\nimport getAuthReducer from './getAuthReducer';\nimport actionTypes from './actionTypes';\nimport loginStatus from './loginStatus';\nimport authMessages from './authMessages';\nimport moduleStatus from '../../enums/moduleStatus';\n\nconst DEFAULT_PROXY_RETRY = 5000;\n\nfunction getDefaultRedirectUri() {\n  if (typeof window !== 'undefined') {\n    return url.resolve(window.location.href, './redirect.html');\n  }\n  return null;\n}\n\nfunction getDefaultProxyUri() {\n  if (typeof window !== 'undefined') {\n    return url.resolve(window.location.href, './proxy.html');\n  }\n  return null;\n}\n\n/**\n * @class\n * @description Authentication module\n */\nexport default class Auth extends RcModule {\n  /**\n   * @constructor\n   */\n  constructor({\n    client,\n    alert,\n    redirectUri = getDefaultRedirectUri(),\n    proxyUri = getDefaultProxyUri(),\n    brand,\n    locale,\n    tabManager,\n    environment,\n    defaultProxyRetry = DEFAULT_PROXY_RETRY,\n    ...options\n  } = {}) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._client = client;\n    this._alert = alert;\n    this._brand = brand;\n    this._locale = locale;\n    this._redirectUri = redirectUri;\n    this._proxyUri = proxyUri;\n    this._tabManager = tabManager;\n    this._environment = environment;\n    this._defaultProxyRetry = defaultProxyRetry;\n    this._reducer = getAuthReducer(this.actionTypes);\n    this._beforeLogoutHandlers = new Set();\n    this._proxyFrame = null;\n    this._proxyFrameLoaded = false;\n  }\n  _bindEvents() {\n    const platform = this._client.service.platform();\n    platform.on(platform.events.loginSuccess, () => {\n      this.store.dispatch({\n        type: this.actionTypes.loginSuccess,\n        token: platform.auth().data(),\n      });\n    });\n    platform.on(platform.events.loginError, error => {\n      this.store.dispatch({\n        type: this.actionTypes.loginError,\n        error,\n      });\n      if (error) {\n        this._alert.danger({\n          message: authMessages.loginError,\n          payload: error,\n        });\n      }\n    });\n    platform.on(platform.events.logoutSuccess, () => {\n      this.store.dispatch({\n        type: this.actionTypes.logoutSuccess,\n      });\n    });\n    platform.on(platform.events.logoutError, error => {\n      this.store.dispatch({\n        type: this.actionTypes.logoutError,\n        error,\n      });\n      if (error) {\n        this._alert.danger({\n          message: authMessages.logoutError,\n          payload: error,\n        });\n      }\n    });\n    platform.on(platform.events.refreshSuccess, () => {\n      this.store.dispatch({\n        type: this.actionTypes.refreshSuccess,\n        token: platform.auth().data(),\n      });\n    });\n    platform.on(platform.events.refreshError, error => {\n      // user is still considered logged in if the refreshToken is still valid\n      const refreshTokenValid = platform.auth().refreshTokenValid();\n      this.store.dispatch({\n        type: this.actionTypes.refreshError,\n        error,\n        refreshTokenValid,\n      });\n      if (!refreshTokenValid && this._client.service.platform().auth().data().access_token !== '') {\n        this._alert.danger({\n          message: authMessages.sessionExpired,\n          payload: error,\n          ttl: 0,\n        });\n        // clean the cache so the error doesn't show again\n        platform._cache.clean();\n      }\n    });\n  }\n  initialize() {\n    let loggedIn;\n    this._bindEvents();\n    this.store.subscribe(async () => {\n      if (\n        this.status === moduleStatus.pending &&\n        this._locale.ready &&\n        (!this._tabManager || this._tabManager.ready) &&\n        (!this._environment || this._environment.ready)\n      ) {\n        this.store.dispatch({\n          type: this.actionTypes.init,\n        });\n        const platform = this._client.service.platform();\n        loggedIn = await platform.loggedIn();\n        this.store.dispatch({\n          type: this.actionTypes.initSuccess,\n          loggedIn,\n          token: loggedIn ? platform.auth().data() : null,\n        });\n      }\n      if (\n        this._tabManager &&\n        this._tabManager.ready &&\n        this.ready\n      ) {\n        if (\n          loggedIn && this.loginStatus === loginStatus.notLoggedIn ||\n          !loggedIn && this.loginStatus === loginStatus.loggedIn\n        ) {\n          loggedIn = !loggedIn;\n          this._tabManager.send('loginStatusChange', loggedIn);\n        } else if (\n          this._tabManager.event &&\n          this._tabManager.event.name === 'loginStatusChange' &&\n          this._tabManager.event.args[0] !== loggedIn\n        ) {\n          loggedIn = this._tabManager.event.args[0];\n          this.store.dispatch({\n            type: this.actionTypes.tabSync,\n            loggedIn,\n            token: loggedIn ? this._client.service.platform().auth().data() : null,\n          });\n        }\n      }\n      if (\n        this.ready &&\n        this._environment &&\n        this._environment.changed\n      ) {\n        this._bindEvents();\n      }\n    });\n  }\n\n  get redirectUri() {\n    return this._redirectUri;\n  }\n\n  get proxyUri() {\n    return this._proxyUri;\n  }\n\n  get ownerId() {\n    return this.state.ownerId;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatus.ready;\n  }\n\n  get loginStatus() {\n    return this.state.loginStatus;\n  }\n\n  get isFreshLogin() {\n    return this.state.freshLogin;\n  }\n\n  get proxyLoaded() {\n    return this.state.proxyLoaded;\n  }\n\n  /**\n   * @function\n   * @param {String} options.username\n   * @param {String} options.password\n   * @param {String} options.extension\n   * @param {Booleal|Number} options.remember\n   * @param {String} params.code,\n   * @param {String} params.redirectUri,\n   * @return {Promise}\n   * @description Login either with username/password or with authorization code\n   */\n  async login({ username, password, extension, remember, code, redirectUri }) {\n    this.store.dispatch({\n      type: this.actionTypes.login,\n    });\n    return await this._client.service.platform().login({\n      username,\n      password,\n      extension,\n      remember,\n      code,\n      redirectUri,\n    });\n  }\n  /**\n   * @function\n   * @param {String} options.redirectUri\n   * @param {String} options.brandId\n   * @param {Boolean} options.force\n   * @return {String}\n   * @description get OAuth page url\n   */\n  getLoginUrl({ redirectUri, state, brandId, display, prompt, force }) {\n    return `${this._client.service.platform().loginUrl({\n      redirectUri,\n      state,\n      brandId,\n      display,\n      prompt,\n    })}${force ? '&force' : ''}`;\n  }\n  /**\n   * @function\n   * @param {String} callbackUri\n   * @return {String} code\n   */\n  parseCallbackUri(callbackUri) {\n    const { query } = url.parse(callbackUri, true);\n    if (query.error) {\n      const error = new Error(query.error);\n      for (const key in query) {\n        if (query::Object.prototype.hasOwnProperty(key)) {\n          error[key] = query[key];\n        }\n      }\n      throw error;\n    }\n    return query.code;\n  }\n\n  /**\n   * @function\n   * @description Triggers the beforeLogoutHandlers to run\n   *  and then proceed to logout from ringcentral.\n   */\n  async logout() {\n    this.store.dispatch({\n      type: this.actionTypes.beforeLogout,\n    });\n    const handlers = [...this._beforeLogoutHandlers];\n    try {\n      for (const handler of handlers) {\n        const result = await (async () => handler())();\n        if (result) {\n          this.store.dispatch({\n            type: this.actionTypes.cancelLogout,\n          });\n          return Promise.reject(result);\n        }\n      }\n    } catch (error) {\n      this._alert.danger({\n        message: authMessages.beforeLogoutError,\n        payload: error,\n      });\n    }\n    this.store.dispatch({\n      type: this.actionTypes.logout,\n    });\n    return await this._client.service.platform().logout();\n  }\n\n  /**\n  * @function\n  * @param {Function} handler\n  * @returns {Function}\n  */\n  addBeforeLogoutHandler(handler) {\n    this._beforeLogoutHandlers.add(handler);\n    return () => {\n      this.removeBeforeLogoutHandler(handler);\n    };\n  }\n\n  /**\n  * @function\n  * @param {Function} handler\n  */\n  removeBeforeLogoutHandler(handler) {\n    this._beforeLogoutHandlers.remove(handler);\n  }\n\n  async checkIsLoggedIn() {\n    // SDK would return false when there's temporary network issues,\n    // but we should not return use back to welcome string and should\n    // still consider the user as being logged in.\n    await this._client.service.platform().loggedIn();\n    return this.state.loginStatus === loginStatus.loggedIn;\n  }\n\n  get loggedIn() {\n    return this.state.loginStatus === loginStatus.loggedIn ||\n      this.state.loginStatus === loginStatus.beforeLogout;\n  }\n\n  _callbackHandler = async ({ origin, data }) => {\n\n  }\n\n  /**\n   * @function\n   * @description Create the proxy frame and append to document if available.\n   * @param {Function} onLogin - Function to be called when user successfully logged in\n   *  through oAuth.\n   */\n  setupProxyFrame(onLogin) {\n    if (\n      typeof window !== 'undefined' &&\n      typeof document !== 'undefined' &&\n      this._proxyUri &&\n      this._proxyUri !== '' &&\n      !this._proxyFrame\n    ) {\n      this._proxyFrame = document.createElement('iframe');\n      this._proxyFrame.src = this.proxyUri;\n      this._proxyFrame.style.display = 'none';\n      document.body.appendChild(this._proxyFrame);\n      this._callbackHandler = async ({ origin, data }) => {\n        // TODO origin check\n        if (data) {\n          const {\n            callbackUri,\n            proxyLoaded,\n          } = data;\n          if (callbackUri) {\n            try {\n              const code = this.parseCallbackUri(callbackUri);\n              if (code) {\n                await this.login({\n                  code,\n                  redirectUri: this.redirectUri,\n                });\n                if (typeof onLogin === 'function') {\n                  onLogin();\n                }\n              }\n            } catch (error) {\n              let message;\n              switch (error.message) {\n                case 'invalid_request':\n                case 'unauthorized_client':\n                case 'access_denied':\n                case 'unsupported_response_type':\n                case 'invalid_scope':\n                  message = authMessages.accessDenied;\n                  break;\n                case 'server_error':\n                case 'temporarily_unavailable':\n                default:\n                  message = authMessages.internalError;\n                  break;\n              }\n\n              this._alert.danger({\n                message,\n                payload: error,\n              });\n            }\n          } else if (proxyLoaded) {\n            clearTimeout(this._retryTimeoutId);\n            this._retryTimeoutId = null;\n            this.store.dispatch({\n              type: this.actionTypes.proxyLoaded,\n            });\n          }\n        }\n      };\n      window.addEventListener('message', this._callbackHandler);\n      this._retryTimeoutId = setTimeout(() => {\n        this._retrySetupProxyFrame(onLogin);\n      }, this._defaultProxyRetry);\n    }\n  }\n  _retrySetupProxyFrame(onLogin) {\n    this._retryTimeoutId = null;\n    if (!this.proxyLoaded) {\n      this.clearProxyFrame();\n      this.setupProxyFrame(onLogin);\n    }\n  }\n  clearProxyFrame() {\n    if (this._proxyFrame) {\n      if (this._retryTimeoutId) {\n        clearTimeout(this._retryTimeoutId);\n        this._retryTimeoutId = null;\n      }\n      document.body.removeChild(this._proxyFrame);\n      this._proxyFrame = null;\n      window.removeEventListener('message', this._callbackHandler);\n      this._callbackHandler = null;\n      this.store.dispatch({\n        type: this.actionTypes.proxyCleared,\n      });\n    }\n  }\n  openOAuthPage() {\n    if (this.proxyLoaded) {\n      this._proxyFrame.contentWindow.postMessage({\n        oAuthUri: `${this.getLoginUrl({\n          redirectUri: this.redirectUri,\n          brandId: this._brand.id,\n        })}&force=true&localeId=${encodeURIComponent(this._locale.currentLocale)}`,\n      }, '*');\n    }\n  }\n}\n"]}