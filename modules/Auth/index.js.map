{"version":3,"sources":["modules/Auth/index.js"],"names":["Auth","client","options","actionTypes","_client","_reducer","prefix","_beforeLogoutHandlers","username","password","extension","remember","code","redirectUri","store","dispatch","type","login","platform","service","on","events","loginSuccess","token","auth","data","loginError","error","logoutSuccess","logoutError","refreshSuccess","refreshError","loggedIn","init","state","brandId","display","prompt","force","loginUrl","callbackUri","getAuthCode","beforeLogout","handlers","handler","cancelLogout","logout","add","removeBeforeLogoutHandler","remove","ownerId","status","freshLogin"],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport getAuthReducer from './getAuthReducer';\nimport authActionTypes from './authActionTypes';\nimport authStatus from './authStatus';\n\n/**\n * @class\n * @description Authentication module\n */\nexport default class Auth extends RcModule {\n  /**\n   * @constructor\n   */\n  constructor({ client, ...options } = {}) {\n    super({\n      ...options,\n      actionTypes: authActionTypes,\n    });\n    this._client = client;\n    this._reducer = getAuthReducer(this.prefix);\n    this._beforeLogoutHandlers = new Set();\n  }\n\n  get ownerId() {\n    return this.state.ownerId;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get error() {\n    return this.state.error;\n  }\n\n  get isFreshLogin() {\n    return this.state.freshLogin;\n  }\n\n  get authStatus() {\n    return authStatus;\n  }\n\n  /**\n   * @function\n   * @param {String} options.username\n   * @param {String} options.password\n   * @param {String} options.extension\n   * @param {Booleal|Number} options.remember\n   * @param {String} params.code,\n   * @param {String} params.redirectUri,\n   * @return {Promise}\n   * @description Login function using username and password\n   */\n  async login({ username, password, extension, remember, code, redirectUri }) {\n    this.store.dispatch({\n      type: this.actionTypes.login,\n    });\n    return await this._client.login({\n      username,\n      password,\n      extension,\n      remember,\n      code,\n      redirectUri,\n    });\n  }\n  initialize() {\n    const platform = this._client.service.platform();\n    platform.on(platform.events.loginSuccess, () => {\n      this.store.dispatch({\n        type: this.actionTypes.loginSuccess,\n        token: platform.auth().data(),\n      });\n    });\n    platform.on(platform.events.loginError, error => {\n      this.store.dispatch({\n        type: this.actionTypes.loginError,\n        error,\n      });\n    });\n    platform.on(platform.events.logoutSuccess, () => {\n      this.store.dispatch({\n        type: this.actionTypes.logoutSuccess,\n      });\n    });\n    platform.on(platform.events.logoutError, error => {\n      this.store.dispatch({\n        type: this.actionTypes.logoutError,\n        error,\n      });\n    });\n    platform.on(platform.events.refreshSuccess, () => {\n      this.store.dispatch({\n        type: this.actionTypes.refreshSuccess,\n        token: platform.auth().data(),\n      });\n    });\n    platform.on(platform.events.refreshError, error => {\n      this.store.dispatch({\n        type: this.actionTypes.refreshError,\n        error,\n      });\n    });\n    (async () => {\n      const loggedIn = await platform.loggedIn();\n      this.store.dispatch({\n        type: this.actionTypes.init,\n        loggedIn,\n        token: loggedIn ? platform.auth().data() : null,\n      });\n    })();\n  }\n\n  /**\n   * @function\n   * @param {String} options.redirectUri\n   * @param {String} options.brandId\n   * @param {Boolean} options.force\n   * @return {String}\n   * @description get OAuth page url\n   */\n  getLoginUrl({ redirectUri, state, brandId, display, prompt, force }) {\n    return `${this._client.loginUrl({\n      redirectUri,\n      state,\n      brandId,\n      display,\n      prompt,\n    })}${force ? '&force' : ''}`;\n  }\n  /**\n   * @function\n   * @param {String} callbackUri\n   * @return {String} code\n   */\n  parseCallbackUri(callbackUri) {\n    return this._client.getAuthCode(callbackUri);\n  }\n\n  async logout() {\n    this.store.dispatch({\n      type: this.actionTypes.beforeLogout,\n    });\n    const handlers = [...this._beforeLogoutHandlers];\n    try {\n      for (const handler of handlers) {\n        await (async () => handler())();\n      }\n    } catch (error) {\n      this.store.dispatch({\n        type: this.actionTypes.cancelLogout,\n        error,\n      });\n    }\n    this.store.dispatch({\n      type: this.actionTypes.logout,\n    });\n    return await this._client.logout();\n  }\n\n   /**\n   * @function\n   * @param {Function} handler\n   * @returns {Function}\n   */\n  addBeforeLogoutHandler(handler) {\n    this._beforeLogoutHandlers.add(handler);\n    return () => {\n      this.removeBeforeLogoutHandler(handler);\n    };\n  }\n\n   /**\n   * @function\n   * @param {Function} handler\n   */\n  removeBeforeLogoutHandler(handler) {\n    this._beforeLogoutHandlers.remove(handler);\n  }\n\n  async isLoggedIn() {\n    return await this._client.service.platform().loggedIn();\n  }\n}\n"]}