{"version":3,"sources":["modules/storage/get-storage-reducer.js"],"names":["getStorageReducer","prefix","actions","tmp","state","action","data","key","status","pending","error","type","init","update","dirty","remove","save","saving","saveSuccess","saved","saveError","reload","reloading","reloadSuccess","reloadError","reset"],"mappings":";;;;;;;;;;kBAIwBA,iB;;AAJxB;;AACA;;;;AACA;;;;;;AAEe,SAASA,iBAAT,CAA2BC,MAA3B,EAAmC;AAChD,MAAMC,UAAU,0DAA8BD,MAA9B,CAAhB;AACA,MAAIE,MAAM,IAAV;AACA,SAAO,UAACC,KAAD,EAAQC,MAAR,EAAmB;AACxB,QAAI,CAACD,KAAL,EAAY;AACV,aAAO;AACLE,cAAM,EADD;AAELC,aAAK,IAFA;AAGLC,gBAAQ,wBAAcC,OAHjB;AAILC,eAAO;AAJF,OAAP;AAMD;AACD,QAAI,CAACL,MAAL,EAAa;AACX,aAAOD,KAAP;AACD;AACD,YAAQC,OAAOM,IAAf;;AAEE,WAAKT,QAAQU,IAAb;AACE,eAAO;AACLN,gBAAMD,OAAOC,IADR;AAELC,eAAKF,OAAOE,GAFP;AAGLC,kBAAQH,OAAOG,MAHV;AAILE,iBAAOL,OAAOK;AAJT,SAAP;;AAOF,WAAKR,QAAQW,MAAb;AACE,0CACKT,KADL;AAEEE,2CACKF,MAAME,IADX,EAEKD,OAAOC,IAFZ,CAFF;AAMEE,kBAAQ,wBAAcM;AANxB;;AASF,WAAKZ,QAAQa,MAAb;AACEZ,yCACKC,MAAME,IADX;AAGA,eAAOH,IAAIE,OAAOE,GAAX,CAAP;AACA,0CACKH,KADL;AAEEE,gBAAMH,GAFR;AAGEK,kBAAQ,wBAAcM;AAHxB;;AAMF,WAAKZ,QAAQc,IAAb;AACE,0CACKZ,KADL;AAEEI,kBAAQ,wBAAcS;AAFxB;;AAKF,WAAKf,QAAQgB,WAAb;AACE,0CACKd,KADL;AAEEI,kBAAQ,wBAAcW;AAFxB;;AAKF,WAAKjB,QAAQkB,SAAb;AACE,0CACKhB,KADL;AAEEI,kBAAQ,wBAAcM;AAFxB;;AAKF,WAAKZ,QAAQmB,MAAb;AACE,0CACKjB,KADL;AAEEI,kBAAQ,wBAAcc;AAFxB;;AAKF,WAAKpB,QAAQqB,aAAb;AACE,0CACKnB,KADL;AAEEE,gBAAMD,OAAOC,IAFf;AAGEE,kBAAQ,wBAAcW;AAHxB;;AAMF,WAAKjB,QAAQsB,WAAb;AACE,0CACKpB,KADL;AAEEM,iBAAOL,OAAOK,KAFhB;AAGEF,kBAAQ,wBAAcM;AAHxB;;AAMF,WAAKZ,QAAQuB,KAAb;AACE,eAAO;AACLjB,kBAAQ,wBAAcC,OADjB;AAELH,gBAAM,EAFD;AAGLC,eAAK,IAHA;AAILG,iBAAO;AAJF,SAAP;;AAOF;AACE,eAAON,KAAP;AA9EJ;AAgFD,GA5FD;AA6FD","file":"get-storage-reducer.js","sourcesContent":["import { prefixActions } from '../../lib/redux-helper';\nimport storageActions from './storage-actions';\nimport storageStatus from './storage-status';\n\nexport default function getStorageReducer(prefix) {\n  const actions = prefixActions(storageActions, prefix);\n  let tmp = null;\n  return (state, action) => {\n    if (!state) {\n      return {\n        data: {},\n        key: null,\n        status: storageStatus.pending,\n        error: null,\n      };\n    }\n    if (!action) {\n      return state;\n    }\n    switch (action.type) {\n\n      case actions.init:\n        return {\n          data: action.data,\n          key: action.key,\n          status: action.status,\n          error: action.error,\n        };\n\n      case actions.update:\n        return {\n          ...state,\n          data: {\n            ...state.data,\n            ...action.data,\n          },\n          status: storageStatus.dirty,\n        };\n\n      case actions.remove:\n        tmp = {\n          ...state.data,\n        };\n        delete tmp[action.key];\n        return {\n          ...state,\n          data: tmp,\n          status: storageStatus.dirty,\n        };\n\n      case actions.save:\n        return {\n          ...state,\n          status: storageStatus.saving,\n        };\n\n      case actions.saveSuccess:\n        return {\n          ...state,\n          status: storageStatus.saved,\n        };\n\n      case actions.saveError:\n        return {\n          ...state,\n          status: storageStatus.dirty,\n        };\n\n      case actions.reload:\n        return {\n          ...state,\n          status: storageStatus.reloading,\n        };\n\n      case actions.reloadSuccess:\n        return {\n          ...state,\n          data: action.data,\n          status: storageStatus.saved,\n        };\n\n      case actions.reloadError:\n        return {\n          ...state,\n          error: action.error,\n          status: storageStatus.dirty,\n        };\n\n      case actions.reset:\n        return {\n          status: storageStatus.pending,\n          data: {},\n          key: null,\n          error: null,\n        };\n\n      default:\n        return state;\n    }\n  };\n}\n"]}