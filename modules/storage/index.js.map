{"version":3,"sources":["modules/storage/index.js"],"names":["logger","prefix","symbols","CONSTANTS","status","events","Storage","options","actions","storage","localStorage","auth","on","oldState","newState","statusChanged","data","emit","dataChanged","loggedIn","key","ownerId","error","saved","getItem","json","JSON","parse","dirty","store","dispatch","type","init","notLoggedIn","reset","value","state","pending","Error","update","save","action","setItem","getData","remove","removeItem"],"mappings":"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","file":"index.js","sourcesContent":["import SymbolMap from 'data-types/symbol-map';\nimport Loganberry from 'loganberry';\nimport KeyValueMap from 'data-types/key-value-map';\nimport RcModule, { initFunction } from '../../lib/rc-module';\nimport { proxify } from '../../modules/proxy';\nimport getStorageReducer from './get-storage-reducer';\nimport storageActions from './storage-actions';\nimport storageStatus from './storage-status';\nimport storageEvents from './storage-events';\nimport { emit } from '../../lib/utils';\n\nconst logger = new Loganberry({\n  prefix: 'storage',\n});\n\nconst symbols = new SymbolMap([\n  'storage',\n]);\n\nconst CONSTANTS = new KeyValueMap({\n  status: storageStatus,\n  events: storageEvents,\n});\n\nexport default class Storage extends RcModule {\n  constructor(options) {\n    super({\n      ...options,\n      actions: storageActions,\n    });\n    const {\n      storage = localStorage,\n      auth,\n    } = options;\n    this[symbols.storage] = storage;\n    this[symbols.auth] = auth;\n\n    this.on('state-update', ({ oldState, newState }) => {\n      if (!oldState || oldState.status !== newState.status) {\n        this::emit(storageEvents.statusChanged, newState.status);\n      }\n      if (!oldState || oldState.data !== newState.data) {\n        this.emit(storageEvents.dataChanged, newState.data);\n      }\n    });\n  }\n  get reducer() {\n    return getStorageReducer(this.prefix);\n  }\n\n  get key() {\n    return this.state.key;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get constants() {\n    return CONSTANTS;\n  }\n\n  @initFunction\n  init() {\n    this[symbols.auth].on(this[symbols.auth].events.loggedIn, async () => {\n      const key = `${this.prefix ? `${this.prefix}-` : ''}storage-${this[symbols.auth].ownerId}`;\n\n      let data = null;\n      let error = null;\n      let status = storageStatus.saved;\n      if (this[symbols.storage]) {\n        try {\n          const json = await (async () => this[symbols.storage].getItem(key))();\n          if (json) {\n            data = JSON.parse(json);\n          }\n        } catch (e) {\n          status = storageStatus.dirty;\n          error = e;\n        }\n      }\n      if (!data) data = {};\n\n      this.store.dispatch({\n        type: this.actions.init,\n        key,\n        data,\n        error,\n        status,\n      });\n    });\n\n    this[symbols.auth].on(this[symbols.auth].events.notLoggedIn, () => {\n      this.store.dispatch({\n        type: this.actions.reset,\n      });\n    });\n  }\n\n  @proxify\n  async setItem(key, value) {\n    if (!this.state || this.state.status === storageStatus.pending) {\n      throw new Error('Storage is not ready');\n    }\n    this.store.dispatch({\n      type: this.actions.update,\n      data: {\n        [key]: value,\n      },\n    });\n    await this.save();\n  }\n\n  @proxify\n  async setData(data) {\n    if (!this.state || this.state.status === storageStatus.pending) {\n      throw new Error('Storage is not ready');\n    }\n    this.store.dispatch({\n      type: this.action.update,\n      data,\n    });\n    if (this[symbols.storage]) {\n      await (\n        async () => this[symbols.storage].setItem(this.key, JSON.stringify(this.getData()))\n      )();\n    }\n    this.store.dispatch({\n      type: this.action.save,\n    });\n  }\n\n  @proxify\n  async removeItem(key) {\n    if (!this.state || this.state.status === storageStatus.pending) {\n      throw new Error('Storage is not ready');\n    }\n    this.store.dispatch({\n      type: this.action.remove,\n      key,\n    });\n    if (this[symbols.storage]) {\n      await (\n        async () => this[symbols.storage].removeItem(this.key)\n      )();\n    }\n    this.store.dispatch({\n      type: this.action.save,\n    });\n  }\n\n  @proxify\n  async removeData() {\n    if (!this.state || this.state.status === storageStatus.pending) {\n      throw new Error('Storage is not ready');\n    }\n    if (!this[symbols.storage]) {\n      throw new Error('No storage option was supplied');\n    }\n    await (async () => this[symbols.storage].removeItem(this.key))();\n  }\n\n  getItem(key) {\n    return this.state.data[key];\n  }\n\n  getData() {\n    return {\n      ...this.state.data,\n    };\n  }\n}\n"]}