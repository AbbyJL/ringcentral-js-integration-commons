{"version":3,"sources":["modules/storage/index.js"],"names":["symbols","Storage","options","actions","StorageProvider","auth","storage","storageProvider","on","oldState","newState","status","emit","statusChange","oldStatus","newStatus","data","dataChange","oldData","newData","key","ready","authEvents","loggedIn","console","log","prefix","ownerId","error","saved","getData","dirty","store","dispatch","type","init","unsubscribeStorage","subscribe","load","addBeforeLogoutHandler","pending","reset","destroy","notLoggedIn","value","setData","state","Error","update","version","save","saveSuccess","saveError","remove"],"mappings":"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","file":"index.js","sourcesContent":["import SymbolMap from 'data-types/symbol-map';\nimport RcModule, { initFunction } from '../../lib/rc-module';\nimport { proxify } from '../../modules/proxy';\nimport NamedStorage from '../../lib/named-storage';\nimport getStorageReducer from './get-storage-reducer';\nimport storageActions from './storage-actions';\nimport storageStatus from './storage-status';\nimport storageEvents from './storage-events';\n\nconst symbols = new SymbolMap([\n  'storage',\n  'storageProvider',\n  'unsubscribeStorage',\n]);\n\nexport default class Storage extends RcModule {\n  constructor(options) {\n    super({\n      ...options,\n      actions: storageActions,\n    });\n    const {\n      StorageProvider = NamedStorage,\n      auth,\n    } = options;\n    this[symbols.storage] = null;\n    this[symbols.storageProvider] = StorageProvider;\n    this[symbols.auth] = auth;\n\n    this.on('state-change', ({ oldState, newState }) => {\n      if (oldState) {\n        if (oldState.status !== newState.status) {\n          this.emit(\n            storageEvents.statusChange,\n            {\n              oldStatus: oldState.status,\n              newStatus: newState.status,\n            },\n          );\n          this.emit(newState.status);\n        }\n        if (oldState.data !== newState.data) {\n          this.emit(\n            storageEvents.dataChange,\n            {\n              oldData: oldState.data,\n              newData: newState.data,\n            },\n          );\n        }\n        if (newState.key && !oldState.key) {\n          this.emit(storageEvents.ready);\n        }\n      }\n    });\n  }\n  get reducer() {\n    return getStorageReducer(this.prefix);\n  }\n\n  get key() {\n    return this.state.key;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get storageStatus() {\n    return storageStatus;\n  }\n\n  get storageEvents() {\n    return storageEvents;\n  }\n\n  @initFunction\n  init() {\n    this[symbols.auth].on(this[symbols.auth].authEvents.loggedIn, async () => {\n      console.log('check');\n      const key = `${this.prefix ? `${this.prefix}-` : ''}storage-${this[symbols.auth].ownerId}`;\n      this[symbols.storage] = new this[symbols.storageProvider]({ key });\n\n      let data = null;\n      let error = null;\n      let status = storageStatus.saved;\n\n      try {\n        data = await (async () => this[symbols.storage].getData())();\n      } catch (e) {\n        status = storageStatus.dirty;\n        error = e;\n      }\n\n      if (!data) data = {};\n\n      this.store.dispatch({\n        type: this.actions.init,\n        key,\n        data,\n        error,\n        status,\n      });\n\n      this[symbols.unsubscribeStorage] = this[symbols.storage].subscribe(newData => {\n        this.store.dispatch({\n          type: this.actions.load,\n          data: newData,\n        });\n      });\n    });\n\n    this[symbols.auth].addBeforeLogoutHandler(async () => {\n      if (this.status !== storageStatus.pending) {\n        this.store.dispatch({\n          type: this.actions.reset,\n        });\n        this[symbols.unsubscribeStorage]();\n        this[symbols.storage].destroy();\n        this[symbols.storage] = null;\n      }\n    });\n    this[symbols.auth].on(this[symbols.auth].authEvents.notLoggedIn, () => {\n      if (this.status !== storageStatus.pending) {\n        this.store.dispatch({\n          type: this.actions.reset,\n        });\n        this[symbols.unsubscribeStorage]();\n        this[symbols.storage].destroy();\n        this[symbols.storage] = null;\n      }\n    });\n  }\n\n  @proxify\n  async setItem(key, value) {\n    await this.setData({\n      [key]: value,\n    });\n  }\n\n  @proxify\n  async setData(data) {\n    if (!this.state || this.state.status === storageStatus.pending) {\n      throw new Error('Storage is not ready');\n    }\n    this.store.dispatch({\n      type: this.actions.update,\n      data,\n    });\n    const version = this.state.version;\n    try {\n      this.store.dispatch({\n        type: this.actions.save,\n      });\n      await(\n        async () => this[symbols.storage].setData(this.getData())\n      )();\n      this.store.dispatch({\n        type: this.actions.saveSuccess,\n        version,\n      });\n    } catch (error) {\n      this.store.dispatch({\n        type: this.actions.saveError,\n        version,\n        error,\n      });\n    }\n  }\n\n  @proxify\n  async removeItem(key) {\n    if (!this.state || this.state.status === storageStatus.pending) {\n      throw new Error('Storage is not ready');\n    }\n    this.store.dispatch({\n      type: this.actions.remove,\n      key,\n    });\n    const version = this.state.version;\n    try {\n      this.store.dispatch({\n        type: this.actions.save,\n      });\n      await(\n        async () => this[symbols.storage].setData(this.getData())\n      )();\n      this.store.dispatch({\n        type: this.actions.saveSuccess,\n        version,\n      });\n    } catch (error) {\n      this.store.dispatch({\n        type: this.actions.saveError,\n        version,\n        error,\n      });\n    }\n  }\n\n  getItem(key) {\n    return this.state.data[key];\n  }\n\n  getData() {\n    return {\n      ...this.state.data,\n    };\n  }\n}\n"]}