{"version":3,"sources":["modules/ExtensionPhoneNumber/index.js"],"names":["ExtensionPhoneNumber","auth","client","storage","ttl","options","actionTypes","_auth","_storage","_client","_ttl","_storageKey","_reducer","prefix","_promise","addSelector","data","extensionPhoneNumbers","phoneNumbers","filter","p","usageType","store","subscribe","status","storageStatus","ready","pending","isFreshLogin","hasItem","Date","now","timestamp","loadExtensionPhoneNumbers","dispatch","type","init","reset","fetch","account","extension","phoneNumber","list","params","setItem","fetchSuccess","actions","fetchError","error","getItem","state","_selectors","companyNumbers"],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport extensionPhoneNumberStatus from './extensionPhoneNumberStatus';\nimport extensionPhoneNumberActionTypes from './extensionPhoneNumberActionTypes';\nimport getExtensionPhoneNumberReducer from './getExtensionPhoneNumberReducer';\nimport fetchList from '../../lib/fetchList';\n\nexport default class ExtensionPhoneNumber extends RcModule {\n  constructor({\n    auth,\n    client,\n    storage,\n    ttl = 30 * 60 * 1000,\n    ...options,\n  }) {\n    super({\n      ...options,\n      actionTypes: extensionPhoneNumberActionTypes,\n    });\n    this._auth = auth;\n    this._storage = storage;\n    this._client = client;\n    this._ttl = ttl;\n    this._storageKey = 'extensionPhoneNumber';\n    this._reducer = getExtensionPhoneNumberReducer(this.prefix);\n    this._promise = null;\n\n    this.addSelector(\n      'companyNumbers',\n      () => this.data.extensionPhoneNumbers,\n      phoneNumbers => phoneNumbers.filter(p => p.usageType === 'CompanyNumber'),\n    );\n  }\n  initialize() {\n    this.store.subscribe(() => {\n      if (\n        this._storage.status === this._storage.storageStatus.ready &&\n        this.status === extensionPhoneNumberStatus.pending\n      ) {\n        if (\n          this._auth.isFreshLogin ||\n          !this._storage.hasItem(this._storageKey) ||\n          Date.now() - this.data.timestamp > this._ttl\n        ) {\n          this.loadExtensionPhoneNumbers();\n        } else {\n          this.store.dispatch({\n            type: this.actionTypes.init,\n          });\n        }\n      } else if (\n        this._storage.status === this._storage.storageStatus.pending &&\n        this.status !== extensionPhoneNumberStatus.pending\n      ) {\n        this.store.dispatch({\n          type: this.actionTypes.reset,\n        });\n      }\n    });\n  }\n\n  get data() {\n    return this._storage.getItem(this._storageKey);\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get error() {\n    return this.state.error;\n  }\n\n  get numbers() {\n    return this.data.extensionPhoneNumbers;\n  }\n\n  get companyNumbers() {\n    return this._selectors.companyNumbers();\n  }\n\n  get extensionPhoneNumberStatus() {\n    return extensionPhoneNumberStatus;\n  }\n\n  async loadExtensionPhoneNumbers() {\n    if (!this._promise) {\n      this._promise = (async () => {\n        this.store.dispatch({\n          type: this.actionTypes.fetch,\n        });\n        try {\n          this._storage.setItem(this._storageKey, {\n            extensionPhoneNumbers: await fetchList(params => (\n              this._client.account().extension().phoneNumber().list(params)\n            )),\n            timestamp: Date.now(),\n          });\n          this.store.dispatch({\n            type: this.actionTypes.fetchSuccess,\n          });\n          this._promise = null;\n        } catch (error) {\n          this.store.dispatch({\n            type: this.actions.fetchError,\n            error,\n          });\n          this._promise = null;\n          throw error;\n        }\n      })();\n    }\n    await this._promise;\n  }\n}\n"]}