{"version":3,"sources":["modules/ExtensionPhoneNumber/index.js"],"names":["ExtensionPhoneNumber","client","options","name","fetchFunction","account","extension","phoneNumber","list","params","addSelector","data","numbers","phoneNumbers","filter","p","usageType","find","features","indexOf","status","_selectors","mainCompanyNumber","companyNumbers","directNumbers","callerIdNumbers"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;IAEqBA,oB;;;AACnB,sCAGG;AAAA,QAFDC,MAEC,QAFDA,MAEC;AAAA,QADEC,OACF;AAAA;;AAAA;AAECC,YAAM,sBAFP;AAGCF,oBAHD;AAICG,qBAAe;AAAA,eAAO,yBAAU;AAAA,iBAC9BH,OAAOI,OAAP,GAAiBC,SAAjB,GAA6BC,WAA7B,GAA2CC,IAA3C,CAAgDC,MAAhD,CAD8B;AAAA,SAAV,CAAP;AAAA;AAJhB,OAOIP,OAPJ;;AAUD,UAAKQ,WAAL,CACE,SADF,EAEE;AAAA,aAAM,MAAKC,IAAX;AAAA,KAFF,EAGE;AAAA,aAAQA,QAAQ,EAAhB;AAAA,KAHF;;AAMA,UAAKD,WAAL,CACE,gBADF,EAEE;AAAA,aAAM,MAAKE,OAAX;AAAA,KAFF,EAGE;AAAA,aAAgBC,aAAaC,MAAb,CAAoB;AAAA,eAAKC,EAAEC,SAAF,KAAgB,eAArB;AAAA,OAApB,CAAhB;AAAA,KAHF;;AAMA,UAAKN,WAAL,CACE,mBADF,EAEE;AAAA,aAAM,MAAKE,OAAX;AAAA,KAFF,EAGE;AAAA,aAAgBC,aAAaI,IAAb,CAAkB;AAAA,eAAKF,EAAEC,SAAF,KAAgB,mBAArB;AAAA,OAAlB,CAAhB;AAAA,KAHF;;AAMA,UAAKN,WAAL,CACE,eADF,EAEE;AAAA,aAAM,MAAKE,OAAX;AAAA,KAFF,EAGE;AAAA,aAAgBC,aAAaC,MAAb,CAAoB;AAAA,eAAKC,EAAEC,SAAF,KAAgB,cAArB;AAAA,OAApB,CAAhB;AAAA,KAHF;;AAMA,UAAKN,WAAL,CACE,iBADF,EAEE;AAAA,aAAM,MAAKE,OAAX;AAAA,KAFF,EAGE;AAAA,aAAgBC,aAAaC,MAAb,CAAoB;AAAA,eACjCC,EAAEG,QAAF,IAAcH,EAAEG,QAAF,CAAWC,OAAX,CAAmB,UAAnB,MAAmC,CAAC,CAAnD,IACCJ,EAAEC,SAAF,KAAgB,iBAAhB,IAAqCD,EAAEK,MAAF,KAAa,UAFjB;AAAA,OAApB,CAAhB;AAAA,KAHF;AAlCC;AA0CF;;;;wBAEa;AACZ,aAAO,KAAKC,UAAL,CAAgBT,OAAhB,EAAP;AACD;;;wBAEuB;AACtB,aAAO,KAAKS,UAAL,CAAgBC,iBAAhB,EAAP;AACD;;;wBAEoB;AACnB,aAAO,KAAKD,UAAL,CAAgBE,cAAhB,EAAP;AACD;;;wBAEmB;AAClB,aAAO,KAAKF,UAAL,CAAgBG,aAAhB,EAAP;AACD;;;wBAEqB;AACpB,aAAO,KAAKH,UAAL,CAAgBI,eAAhB,EAAP;AACD;;;;;kBAlEkBzB,oB","file":"index.js","sourcesContent":["import fetchList from '../../lib/fetchList';\nimport DataFetcher from '../../lib/DataFetcher';\n\nexport default class ExtensionPhoneNumber extends DataFetcher {\n  constructor({\n    client,\n    ...options,\n  }) {\n    super({\n      name: 'extensionPhoneNumber',\n      client,\n      fetchFunction: () => (fetchList(params => (\n        client.account().extension().phoneNumber().list(params)\n      ))),\n      ...options,\n    });\n\n    this.addSelector(\n      'numbers',\n      () => this.data,\n      data => data || [],\n    );\n\n    this.addSelector(\n      'companyNumbers',\n      () => this.numbers,\n      phoneNumbers => phoneNumbers.filter(p => p.usageType === 'CompanyNumber'),\n    );\n\n    this.addSelector(\n      'mainCompanyNumber',\n      () => this.numbers,\n      phoneNumbers => phoneNumbers.find(p => p.usageType === 'MainCompanyNumber'),\n    );\n\n    this.addSelector(\n      'directNumbers',\n      () => this.numbers,\n      phoneNumbers => phoneNumbers.filter(p => p.usageType === 'DirectNumber'),\n    );\n\n    this.addSelector(\n      'callerIdNumbers',\n      () => this.numbers,\n      phoneNumbers => phoneNumbers.filter(p => (\n        (p.features && p.features.indexOf('CallerId') !== -1) ||\n        (p.usageType === 'ForwardedNumber' && p.status === 'PortedIn')\n      )),\n    );\n  }\n\n  get numbers() {\n    return this._selectors.numbers();\n  }\n\n  get mainCompanyNumber() {\n    return this._selectors.mainCompanyNumber();\n  }\n\n  get companyNumbers() {\n    return this._selectors.companyNumbers();\n  }\n\n  get directNumbers() {\n    return this._selectors.directNumbers();\n  }\n\n  get callerIdNumbers() {\n    return this._selectors.callerIdNumbers();\n  }\n}\n"]}