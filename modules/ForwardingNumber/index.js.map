{"version":3,"sources":["modules/ForwardingNumber/index.js"],"names":["ForwardingNumber","deps","dep","optional","client","rolesAndPermissions","options","name","fetchFunction","_rolesAndPermissions","permissions","ReadUserForwardingFlipNumbers","_client","account","extension","forwardingNumber","list","params","readyCheckFn","ready","addSelector","numbers","phoneNumbers","filter","p","features","indexOf","phoneNumber","data","_selectors","flipNumbers","forwardingNumbers"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;;;AACA;;;;IAOqBA,gB,WAHpB,gBAAO;AACNC,QAAM,CAAC,QAAD,EAAW,qBAAX,EAAkC,EAAEC,KAAK,yBAAP,EAAkCC,UAAU,IAA5C,EAAlC;AADA,CAAP,C;;;AAIC;;;;;AAKA,kCAIG;AAAA;;AAAA,QAHDC,MAGC,QAHDA,MAGC;AAAA,QAFDC,mBAEC,QAFDA,mBAEC;AAAA,QADEC,OACF;AAAA;;AAAA;AAECC,YAAM,kBAFP;AAGCH,oBAHD;AAICI;AAAA,+EAAe;AAAA;AAAA;AAAA;AAAA;AAAA,sBACR,MAAKC,oBAAL,CAA0BC,WAA1B,CAAsCC,6BAD9B;AAAA;AAAA;AAAA;;AAAA,mDAEJ,EAFI;;AAAA;AAAA,mDAIN,yBAAU;AAAA,2BACf,MAAKC,OAAL,CAAaC,OAAb,GAAuBC,SAAvB,GAAmCC,gBAAnC,GAAsDC,IAAtD,CAA2DC,MAA3D,CADe;AAAA,mBAAV,CAJM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;;AAAA;AAAA;AAAA;AAAA,SAJD;AAYCC,oBAAc;AAAA,eAAM,MAAKT,oBAAL,CAA0BU,KAAhC;AAAA;AAZf,OAaIb,OAbJ;;AAeD,UAAKG,oBAAL,GAA4B,kCAAkBJ,mBAAlB,EAAuC,qBAAvC,CAA5B;;AAEA,UAAKe,WAAL,CACE,aADF,EAEE;AAAA,aAAM,MAAKC,OAAX;AAAA,KAFF,EAGE;AAAA,aACEC,aAAaC,MAAb,CAAoB;AAAA,eAAKC,EAAEC,QAAF,CAAWC,OAAX,CAAmB,UAAnB,MAAmC,CAAC,CAApC,IAAyCF,EAAEG,WAAhD;AAAA,OAApB,CADF;AAAA,KAHF;AAMA,UAAKP,WAAL,CACE,SADF,EAEE;AAAA,aAAM,MAAKQ,IAAX;AAAA,KAFF,EAGE;AAAA,aAAQA,QAAQ,EAAhB;AAAA,KAHF;AAKA,UAAKR,WAAL,CACE,mBADF,EAEE;AAAA,aAAM,MAAKC,OAAX;AAAA,KAFF,EAGE;AAAA,aACEC,aAAaC,MAAb,CAAoB;AAAA,eAAKC,EAAEC,QAAF,CAAWC,OAAX,CAAmB,gBAAnB,MAAyC,CAAC,CAA1C,IAA+CF,EAAEG,WAAtD;AAAA,OAApB,CADF;AAAA,KAHF;AA5BC;AAkCF;;;;wBAEa;AACZ,aAAO,KAAKE,UAAL,CAAgBR,OAAhB,EAAP;AACD;;;wBAEiB;AAChB,aAAO,KAAKQ,UAAL,CAAgBC,WAAhB,EAAP;AACD;;;wBAEuB;AACtB,aAAO,KAAKD,UAAL,CAAgBE,iBAAhB,EAAP;AACD;;;;kBAxDkB/B,gB","file":"index.js","sourcesContent":["import { Module } from '../../lib/di';\nimport DataFetcher from '../../lib/DataFetcher';\nimport fetchList from '../../lib/fetchList';\nimport ensureExist from '../../lib/ensureExist';\n/**\n * @class\n * @description Extension forwarding number list module\n */\n@Module({\n  deps: ['Client', 'RolesAndPermissions', { dep: 'ForwardingNumberOptions', optional: true }]\n})\nexport default class ForwardingNumber extends DataFetcher {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   */\n  constructor({\n    client,\n    rolesAndPermissions,\n    ...options\n  }) {\n    super({\n      name: 'forwardingNumber',\n      client,\n      fetchFunction: async () => {\n        if (!this._rolesAndPermissions.permissions.ReadUserForwardingFlipNumbers) {\n          return [];\n        }\n        return fetchList(params => (\n          this._client.account().extension().forwardingNumber().list(params)\n        ));\n      },\n      readyCheckFn: () => this._rolesAndPermissions.ready,\n      ...options,\n    });\n    this._rolesAndPermissions = this::ensureExist(rolesAndPermissions, 'rolesAndPermissions');\n\n    this.addSelector(\n      'flipNumbers',\n      () => this.numbers,\n      phoneNumbers =>\n        phoneNumbers.filter(p => p.features.indexOf('CallFlip') !== -1 && p.phoneNumber)\n    );\n    this.addSelector(\n      'numbers',\n      () => this.data,\n      data => data || [],\n    );\n    this.addSelector(\n      'forwardingNumbers',\n      () => this.numbers,\n      phoneNumbers =>\n        phoneNumbers.filter(p => p.features.indexOf('CallForwarding') !== -1 && p.phoneNumber)\n    );\n  }\n\n  get numbers() {\n    return this._selectors.numbers();\n  }\n\n  get flipNumbers() {\n    return this._selectors.flipNumbers();\n  }\n\n  get forwardingNumbers() {\n    return this._selectors.forwardingNumbers();\n  }\n}\n"]}