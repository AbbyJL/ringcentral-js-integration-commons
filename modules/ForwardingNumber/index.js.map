{"version":3,"sources":["modules/ForwardingNumber/index.js"],"names":["keys","storage","DEFAULT_TTL","symbols","ForwardingNumber","options","actions","api","auth","ttl","on","oldState","newState","status","emit","statusChange","oldStatus","newStatus","error","storageEvents","dataChange","oldData","newData","forwardingNumbers","forwardingNumberChange","ready","loadForwardingNumbers","store","dispatch","type","pending","reset","force","data","getItem","Date","now","timestamp","fetch","account","extension","forwardingNumber","list","params","setItem","fetchSuccess","fetchError","prefix","state"],"mappings":"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","file":"index.js","sourcesContent":["import SymbolMap from 'data-types/symbol-map';\nimport KeyValueMap from 'data-types/key-value-map';\nimport RcModule, { initFunction } from '../../lib/RcModule';\nimport { proxify } from '../../lib/proxy';\nimport fetchList from '../../lib/fetchList';\nimport forwardingNumberStatus from './forwardingNumberStatus';\nimport forwardingNumberActions from './forwardingNumberActions';\nimport getForwardingNumberReducer from './getForwardingNumberReducer';\nimport forwardingNumberEvents from './forwardingNumberEvents';\n\nconst keys = new KeyValueMap({\n  storage: 'forwarding-number-data',\n});\n\nconst DEFAULT_TTL = 30 * 60 * 1000;\n\nconst symbols = new SymbolMap([\n  'api',\n  'auth',\n  'storage',\n  'ttl',\n]);\n\nexport default class ForwardingNumber extends RcModule {\n  constructor(options = {}) {\n    super({\n      ...options,\n      actions: forwardingNumberActions,\n    });\n    const {\n      api,\n      auth,\n      storage,\n      ttl = DEFAULT_TTL,\n    } = options;\n    this[symbols.api] = api;\n    this[symbols.auth] = auth;\n    this[symbols.storage] = storage;\n    this[symbols.ttl] = ttl;\n\n    this.on('state-change', ({ oldState, newState }) => {\n      if (oldState) {\n        if (oldState.status !== newState.status) {\n          this.emit(forwardingNumberEvents.statusChange, {\n            oldStatus: oldState.status,\n            newStatus: newState.status,\n          });\n        }\n        if (newState.error && newState.error !== oldState.error) {\n          this.emit(forwardingNumberEvents.error, newState.error);\n        }\n      }\n    });\n    this[symbols.storage].on(\n      this[symbols.storage].storageEvents.dataChange,\n      ({ oldData, newData }) => {\n        if (!oldData[keys.storage] && !newData[keys.storage]) return;\n        if (\n          oldData[keys.storage] && !newData[keys.storage] ||\n          !oldData[keys.storage] && newData[keys.storage] ||\n          oldData[keys.storage] !== newData[keys.storage] &&\n          (JSON.stringify(oldData[keys.storage].forwardingNumbers) !==\n            JSON.stringify(newData[keys.storage].forwardingNumbers))\n        ) {\n          this.emit(forwardingNumberEvents.forwardingNumberChange, {\n            oldData: oldData[keys.storage] && oldData[keys.storage].forwardingNumbers,\n            newData: newData[keys.storage] && newData[keys.storage].forwardingNumbers,\n          });\n        }\n      },\n    );\n  }\n\n  @initFunction\n  init() {\n    this[symbols.storage].on(this[symbols.storage].storageEvents.ready, async () => {\n      await this.loadForwardingNumbers();\n      this.store.dispatch({\n        type: this.actions.ready,\n      });\n    });\n    this[symbols.storage].on(this[symbols.storage].storageEvents.pending, () => {\n      this.store.dispatch({\n        type: this.actions.reset,\n      });\n    });\n  }\n  get data() {\n    return this[symbols.storage].getItem(keys.storage);\n  }\n  @proxify\n  async loadForwardingNumbers(options = {}) {\n    const {\n      force = false,\n    } = options;\n    let data = this[symbols.storage].getItem(keys.storage);\n    if (force || !data || Date.now() - data.timestamp > this[symbols.ttl]) {\n      try {\n        this.store.dispatch({\n          type: this.actions.fetch,\n        });\n        data = {\n          forwardingNumbers: await fetchList(params => (\n            this[symbols.api].account().extension().forwardingNumber().list(params)\n          )),\n          timestamp: Date.now(),\n        };\n        this[symbols.storage].setItem(keys.storage, data);\n        this.store.dispatch({\n          type: this.actions.fetchSuccess,\n        });\n      } catch (error) {\n        this.store.dispatch({\n          type: this.actions.fetchError,\n          error,\n        });\n        throw error;\n      }\n    }\n    return data;\n  }\n  get reducer() {\n    return getForwardingNumberReducer(this.prefix);\n  }\n\n  get forwardingNumberStatus() {\n    return forwardingNumberStatus;\n  }\n  static get forwardingNumberStatus() {\n    return forwardingNumberStatus;\n  }\n\n  get forwardingNumberEvents() {\n    return forwardingNumberEvents;\n  }\n  static get forwardingNumberEvents() {\n    return forwardingNumberEvents;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n}\n"]}