{"version":3,"sources":["modules/ForwardingNumber/index.js"],"names":["ForwardingNumber","deps","dep","optional","client","rolesAndPermissions","options","name","fetchFunction","_client","account","extension","forwardingNumber","list","params","lists","apiResponse","_response","status","readyCheckFn","_rolesAndPermissions","ready","cleanOnReset","permissions","ReadUserForwardingFlipNumbers","data","numbers","phoneNumbers","filter","p","features","indexOf","phoneNumber"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;IAWqBA,gB,WAPpB,gBAAO;AACNC,QAAM,CACJ,QADI,EAEJ,qBAFI,EAGJ,EAAEC,KAAK,yBAAP,EAAkCC,UAAU,IAA5C,EAHI;AADA,CAAP,C;;;AAQC;;;;;AAKA,kCAIG;AAAA;;AAAA,QAHDC,MAGC,QAHDA,MAGC;AAAA,QAFDC,mBAEC,QAFDA,mBAEC;AAAA,QADEC,OACF;AAAA;;AAAA;AAECC,YAAM,kBAFP;AAGCH,oBAHD;AAICI;AAAA,+EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAES,yBAAU;AAAA,2BAC5B,MAAKC,OAAL,CAAaC,OAAb,GAAuBC,SAAvB,GAAmCC,gBAAnC,GAAsDC,IAAtD,CAA2DC,MAA3D,CAD4B;AAAA,mBAAV,CAFT;;AAAA;AAELC,uBAFK;AAAA,mDAKJA,KALI;;AAAA;AAAA;AAAA;;AAAA,wBAQT,eACA,YAAMC,WADN,IAEA,YAAMA,WAAN,CAAkBC,SAFlB,IAGA,YAAMD,WAAN,CAAkBC,SAAlB,CAA4BC,MAA5B,KAAuC,GAX9B;AAAA;AAAA;AAAA;;AAAA,mDAaF,EAbE;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;;AAAA;AAAA;AAAA;AAAA,SAJD;AAsBCC,oBAAc;AAAA,eAAM,MAAKC,oBAAL,CAA0BC,KAAhC;AAAA,OAtBf;AAuBCC,oBAAc;AAvBf,OAwBIhB,OAxBJ;;AAAA;;AAAA;;AAAA;;AA0BD,UAAKc,oBAAL,GAA4B,kCAAkBf,mBAAlB,EAAuC,qBAAvC,CAA5B;AA1BC;AA2BF;;;;wBAsBoB;AACnB,aAAO,CAAC,CAAC,KAAKe,oBAAL,CAA0BG,WAA1B,CAAsCC,6BAA/C;AACD;;;;;;;;WArBS,8BACR;AAAA,aAAM,OAAKC,IAAX;AAAA,KADQ,EAER;AAAA,aAAQA,QAAQ,EAAhB;AAAA,KAFQ,C;;;;;;;WAMI,8BACZ;AAAA,aAAM,OAAKC,OAAX;AAAA,KADY,EAEZ;AAAA,aACEC,aAAaC,MAAb,CAAoB;AAAA,eAAKC,EAAEC,QAAF,CAAWC,OAAX,CAAmB,UAAnB,MAAmC,CAAC,CAApC,IAAyCF,EAAEG,WAAhD;AAAA,OAApB,CADF;AAAA,KAFY,C;;;;;;;WAOM,8BAClB;AAAA,aAAM,OAAKN,OAAX;AAAA,KADkB,EAElB;AAAA,aACEC,aAAaC,MAAb,CAAoB;AAAA,eAAKC,EAAEC,QAAF,CAAWC,OAAX,CAAmB,gBAAnB,MAAyC,CAAC,CAA1C,IAA+CF,EAAEG,WAAtD;AAAA,OAApB,CADF;AAAA,KAFkB,C;;;kBArDDhC,gB","file":"index.js","sourcesContent":["import { createSelector } from 'reselect';\n\nimport { Module } from '../../lib/di';\nimport DataFetcher from '../../lib/DataFetcher';\nimport fetchList from '../../lib/fetchList';\nimport ensureExist from '../../lib/ensureExist';\nimport getter from '../../lib/getter';\n\n/**\n * @class\n * @description Extension forwarding number list module\n */\n@Module({\n  deps: [\n    'Client',\n    'RolesAndPermissions',\n    { dep: 'ForwardingNumberOptions', optional: true }\n  ]\n})\nexport default class ForwardingNumber extends DataFetcher {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   */\n  constructor({\n    client,\n    rolesAndPermissions,\n    ...options\n  }) {\n    super({\n      name: 'forwardingNumber',\n      client,\n      fetchFunction: async () => {\n        try {\n          const lists = await fetchList(params => (\n            this._client.account().extension().forwardingNumber().list(params)\n          ));\n          return lists;\n        } catch (error) {\n          if (\n            error &&\n            error.apiResponse &&\n            error.apiResponse._response &&\n            error.apiResponse._response.status === 403\n          ) {\n            return [];\n          }\n          throw error;\n        }\n      },\n      readyCheckFn: () => this._rolesAndPermissions.ready,\n      cleanOnReset: true,\n      ...options,\n    });\n    this._rolesAndPermissions = this::ensureExist(rolesAndPermissions, 'rolesAndPermissions');\n  }\n\n  @getter\n  numbers = createSelector(\n    () => this.data,\n    data => data || [],\n  )\n\n  @getter\n  flipNumbers = createSelector(\n    () => this.numbers,\n    phoneNumbers =>\n      phoneNumbers.filter(p => p.features.indexOf('CallFlip') !== -1 && p.phoneNumber)\n  )\n\n  @getter\n  forwardingNumbers = createSelector(\n    () => this.numbers,\n    phoneNumbers =>\n      phoneNumbers.filter(p => p.features.indexOf('CallForwarding') !== -1 && p.phoneNumber)\n  )\n\n  get _hasPermission() {\n    return !!this._rolesAndPermissions.permissions.ReadUserForwardingFlipNumbers;\n  }\n}\n"]}