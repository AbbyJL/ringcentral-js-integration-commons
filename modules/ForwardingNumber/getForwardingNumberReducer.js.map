{"version":3,"sources":["modules/ForwardingNumber/getForwardingNumberReducer.js"],"names":["getStatusReducer","getErrorReducer","getAccountInfoReducer","prefix","prefixedTypes","enumMap","state","pending","type","fetch","fetching","init","fetchSuccess","fetchError","ready","reset","error","status"],"mappings":";;;;;QAKgBA,gB,GAAAA,gB;QAoBAC,e,GAAAA,e;kBAmBQC,qB;;AA5CxB;;AACA;;AACA;;;;AACA;;;;;;AAEO,SAASF,gBAAT,CAA0BG,MAA1B,EAAkC;AACvC,MAAMC,gBAAgB,sBAAW,EAAEC,8CAAF,EAAwCF,cAAxC,EAAX,CAAtB;AACA,SAAO,YAAsD;AAAA,QAArDG,KAAqD,uEAA7C,iCAAuBC,OAAsB;AAAA;AAAA,QAAXC,IAAW,QAAXA,IAAW;;AAC3D,YAAQA,IAAR;AACE,WAAKJ,cAAcK,KAAnB;AACE,eAAO,iCAAuBC,QAA9B;;AAEF,WAAKN,cAAcO,IAAnB;AACA,WAAKP,cAAcQ,YAAnB;AACA,WAAKR,cAAcS,UAAnB;AACE,eAAO,iCAAuBC,KAA9B;;AAEF,WAAKV,cAAcW,KAAnB;AACE,eAAO,iCAAuBR,OAA9B;AACF;AACE,eAAOD,KAAP;AAZJ;AAcD,GAfD;AAgBD;;AAEM,SAASL,eAAT,CAAyBE,MAAzB,EAAiC;AACtC,MAAMC,gBAAgB,sBAAW,EAAEC,8CAAF,EAAwCF,cAAxC,EAAX,CAAtB;AACA,SAAO,YAAmC;AAAA,QAAlCG,KAAkC,uEAA1B,IAA0B;AAAA;AAAA,QAAlBE,IAAkB,SAAlBA,IAAkB;AAAA,QAAZQ,KAAY,SAAZA,KAAY;;AACxC,YAAQR,IAAR;AACE,WAAKJ,cAAcO,IAAnB;AACA,WAAKP,cAAcK,KAAnB;AACA,WAAKL,cAAcQ,YAAnB;AACA,WAAKR,cAAcW,KAAnB;AACE,eAAO,IAAP;;AAEF,WAAKX,cAAcS,UAAnB;AACE,eAAOG,KAAP;;AAEF;AACE,eAAOV,KAAP;AAXJ;AAaD,GAdD;AAeD;;AAEc,SAASJ,qBAAT,CAA+BC,MAA/B,EAAuC;AACpD,SAAO,4BAAgB;AACrBc,YAAQjB,iBAAiBG,MAAjB,CADa;AAErBa,WAAOf,gBAAgBE,MAAhB;AAFc,GAAhB,CAAP;AAID","file":"getForwardingNumberReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { prefixEnum } from '../../lib/Enum';\nimport forwardingNumberActionTypes from './forwardingNumberActionTypes';\nimport forwardingNumberStatus from './forwardingNumberStatus';\n\nexport function getStatusReducer(prefix) {\n  const prefixedTypes = prefixEnum({ enumMap: forwardingNumberActionTypes, prefix });\n  return (state = forwardingNumberStatus.pending, { type }) => {\n    switch (type) {\n      case prefixedTypes.fetch:\n        return forwardingNumberStatus.fetching;\n\n      case prefixedTypes.init:\n      case prefixedTypes.fetchSuccess:\n      case prefixedTypes.fetchError:\n        return forwardingNumberStatus.ready;\n\n      case prefixedTypes.reset:\n        return forwardingNumberStatus.pending;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getErrorReducer(prefix) {\n  const prefixedTypes = prefixEnum({ enumMap: forwardingNumberActionTypes, prefix });\n  return (state = null, { type, error }) => {\n    switch (type) {\n      case prefixedTypes.init:\n      case prefixedTypes.fetch:\n      case prefixedTypes.fetchSuccess:\n      case prefixedTypes.reset:\n        return null;\n\n      case prefixedTypes.fetchError:\n        return error;\n\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getAccountInfoReducer(prefix) {\n  return combineReducers({\n    status: getStatusReducer(prefix),\n    error: getErrorReducer(prefix),\n  });\n}\n"]}