{"version":3,"sources":["modules/DialingPlan/getDialingPlanReducer.js"],"names":["getStatusReducer","getErrorReducer","getAccountInfoReducer","prefix","types","enumMap","state","pending","type","fetch","fetching","init","fetchSuccess","ready","fetchError","error","reset","status"],"mappings":";;;;;QAKgBA,gB,GAAAA,gB;QAsBAC,e,GAAAA,e;kBAmBQC,qB;;AA9CxB;;AACA;;AACA;;;;AACA;;;;;;AAEO,SAASF,gBAAT,CAA0BG,MAA1B,EAAkC;AACvC,MAAMC,QAAQ,sBAAW,EAAEC,yCAAF,EAAmCF,cAAnC,EAAX,CAAd;AACA,SAAO,YAAiD;AAAA,QAAhDG,KAAgD,uEAAxC,4BAAkBC,OAAsB;AAAA;AAAA,QAAXC,IAAW,QAAXA,IAAW;;AACtD,YAAQA,IAAR;AACE,WAAKJ,MAAMK,KAAX;AACE,eAAO,4BAAkBC,QAAzB;;AAEF,WAAKN,MAAMO,IAAX;AACA,WAAKP,MAAMQ,YAAX;AACE,eAAO,4BAAkBC,KAAzB;;AAEF,WAAKT,MAAMU,UAAX;AACE,eAAO,4BAAkBC,KAAzB;;AAEF,WAAKX,MAAMY,KAAX;AACE,eAAO,4BAAkBT,OAAzB;AACF;AACE,eAAOD,KAAP;AAdJ;AAgBD,GAjBD;AAkBD;;AAEM,SAASL,eAAT,CAAyBE,MAAzB,EAAiC;AACtC,MAAMC,QAAQ,sBAAW,EAAEC,yCAAF,EAAmCF,cAAnC,EAAX,CAAd;AACA,SAAO,YAAmC;AAAA,QAAlCG,KAAkC,uEAA1B,IAA0B;AAAA;AAAA,QAAlBE,IAAkB,SAAlBA,IAAkB;AAAA,QAAZO,KAAY,SAAZA,KAAY;;AACxC,YAAQP,IAAR;AACE,WAAKJ,MAAMO,IAAX;AACA,WAAKP,MAAMK,KAAX;AACA,WAAKL,MAAMQ,YAAX;AACA,WAAKR,MAAMY,KAAX;AACE,eAAO,IAAP;;AAEF,WAAKZ,MAAMU,UAAX;AACE,eAAOC,KAAP;;AAEF;AACE,eAAOT,KAAP;AAXJ;AAaD,GAdD;AAeD;;AAEc,SAASJ,qBAAT,CAA+BC,MAA/B,EAAuC;AACpD,SAAO,4BAAgB;AACrBc,YAAQjB,iBAAiBG,MAAjB,CADa;AAErBY,WAAOd,gBAAgBE,MAAhB;AAFc,GAAhB,CAAP;AAID","file":"getDialingPlanReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { prefixEnum } from '../../lib/Enum';\nimport dialingPlanActionTypes from './dialingPlanActionTypes';\nimport dialingPlanStatus from './dialingPlanStatus';\n\nexport function getStatusReducer(prefix) {\n  const types = prefixEnum({ enumMap: dialingPlanActionTypes, prefix });\n  return (state = dialingPlanStatus.pending, { type }) => {\n    switch (type) {\n      case types.fetch:\n        return dialingPlanStatus.fetching;\n\n      case types.init:\n      case types.fetchSuccess:\n        return dialingPlanStatus.ready;\n\n      case types.fetchError:\n        return dialingPlanStatus.error;\n\n      case types.reset:\n        return dialingPlanStatus.pending;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getErrorReducer(prefix) {\n  const types = prefixEnum({ enumMap: dialingPlanActionTypes, prefix });\n  return (state = null, { type, error }) => {\n    switch (type) {\n      case types.init:\n      case types.fetch:\n      case types.fetchSuccess:\n      case types.reset:\n        return null;\n\n      case types.fetchError:\n        return error;\n\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getAccountInfoReducer(prefix) {\n  return combineReducers({\n    status: getStatusReducer(prefix),\n    error: getErrorReducer(prefix),\n  });\n}\n"]}