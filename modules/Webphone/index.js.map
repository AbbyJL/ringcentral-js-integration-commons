{"version":3,"sources":["modules/Webphone/index.js"],"names":["FIRST_THREE_RETRIES_DELAY","FOURTH_RETRIES_DELAY","FIFTH_RETRIES_DELAY","MAX_RETRIES_DELAY","Webphone","deps","dep","optional","appKey","appName","appVersion","alert","auth","client","rolesAndPermissions","webphoneLogLevel","contactMatcher","extensionDevice","numberValidate","audioSettings","onCallEnd","onCallRing","onCallStart","options","actionTypes","_appKey","_appName","_appVersion","_alert","_webphoneLogLevel","_auth","_client","_rolesAndPermissions","_extensionDevice","_numberValidate","_audioSettings","_contactMatcher","_onCallEndFunc","_onCallRingFunc","_onCallStartFunc","_webphone","_remoteVideo","_localVideo","_sessions","_reducer","addSelector","sessions","outputs","forEach","session","push","to","from","ringSessionId","ringSession","find","id","activeSessionId","activeSession","filter","addQuerySource","getQueriesFn","_selectors","sessionPhoneNumbers","readyCheckFn","ready","_isFirstRegister","document","createElement","setAttribute","body","appendChild","volume","callVolume","supportDevices","setSinkId","outputDeviceId","store","dispatch","type","videoElementPrepared","window","readyState","addEventListener","_prepareVideoElement","_disconnect","subscribe","_onStateChange","_shouldInit","init","initSuccess","_shouldReset","resetSuccess","disconnect","_ringtoneVolume","ringtoneVolume","_ringtoneMuted","ringtoneMuted","userAgent","audioHelper","setVolume","_callVolume","_outputDeviceId","loggedIn","pending","service","platform","post","sipInfo","transport","response","json","account","extension","device","list","devices","records","phoneLines","length","concat","stop","unregister","removeAllListeners","provisionData","_removeWebphone","uuid","endpointId","logLevel","enabled","incoming","outgoing","onRegistered","registered","info","message","connected","onUnregistered","unregistered","onRegistrationFailed","cause","errorCode","needToReconnect","console","error","status_code","webphoneCountOverLimit","warning","registrationFailed","_connect","on","once","debug","_onInvite","reconnect","_retrySleep","connectionStatus","connecting","connectFailed","resetRetryCounts","connect","_sipProvision","sipProvision","disconnecting","_createWebphone","ttl","allowDuplicates","indexOf","refreshServiceFeatures","notWebphonePermission","connectError","disconnected","browserNotSupported","_fetchDL","notOutboundCallWithoutDL","log","checkDLError","hangup","_updateSessions","callStatus","_onCallStart","finished","_onCallEnd","newSession","replaced","direction","inbound","_addSession","_onAccepted","isOnMute","onMute","onHold","creationTime","Date","now","_onCallRing","sessionId","get","_holdOtherSession","accept","acceptOptions","callAnswer","_removeSession","reject","unhold","forwardNumber","validateNumbers","validatedResult","result","errors","payload","phoneNumber","validPhoneNumber","numbers","e164","isForwarded","forward","forwardError","_sessionHandleWithId","mute","muteError","unmute","isOnHold","local","hold","holdError","currentSessionId","recordStatus","startRecord","recording","idle","code","danger","recordDisabled","recordError","stopRecord","park","transferNumber","isOnTransfer","transfer","transferError","ua","invite","media","warmTransfer","flipValue","flip","isOnFlip","flipError","dtmfValue","dtmf","terminate","isToVoicemail","toVoicemail","toVoiceMailError","replyOptions","isReplied","replyWithMessage","func","toNumber","fromNumber","homeCountryId","outbound","contact","contactMatch","updateSessions","values","map","set","delete","minimized","normalizedSession","callStart","triggerMatch","callRing","playIncoming","callEnd","connectRetryCounts","state","status","ringSessions","onHoldSessions","lastEndedSessions","webphoneEnabled","audio","deviceId","inputDeviceId","video","render","remote"],"mappings":"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","file":"index.js","sourcesContent":["import RingCentralWebphone from 'ringcentral-web-phone';\nimport incomingAudio from 'ringcentral-web-phone/audio/incoming.ogg';\nimport outgoingAudio from 'ringcentral-web-phone/audio/outgoing.ogg';\n\nimport { Module } from '../../lib/di';\nimport RcModule from '../../lib/RcModule';\nimport sleep from '../../lib/sleep';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport connectionStatus from './connectionStatus';\nimport sessionStatus from './sessionStatus';\nimport recordStatus from './recordStatus';\nimport actionTypes from './actionTypes';\nimport callDirections from '../../enums/callDirections';\nimport webphoneErrors from './webphoneErrors';\nimport callErrors from '../Call/callErrors';\nimport ensureExist from '../../lib/ensureExist';\nimport proxify from '../../lib/proxy/proxify';\nimport {\n  isBrowerSupport,\n  normalizeSession,\n  isRing,\n  isOnHold,\n} from './webphoneHelper';\nimport getWebphoneReducer from './getWebphoneReducer';\n\nconst FIRST_THREE_RETRIES_DELAY = 10 * 1000;\nconst FOURTH_RETRIES_DELAY = 30 * 1000;\nconst FIFTH_RETRIES_DELAY = 60 * 1000;\nconst MAX_RETRIES_DELAY = 2 * 60 * 1000;\n\n/**\n * @constructor\n * @description Web phone module to handle phone interaction with WebRTC.\n */\n@Module({\n  deps: [\n    'Auth',\n    'Alert',\n    'Client',\n    { dep: 'ContactMatcher', optional: true },\n    'ExtensionDevice',\n    'NumberValidate',\n    'RolesAndPermissions',\n    'AudioSettings',\n    { dep: 'WebphoneOptions', optional: true }\n  ]\n})\nexport default class Webphone extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {String} params.appKey - app key\n   * @param {String} params.appName - app name\n   * @param {String} params.appVersion - app version\n   * @param {Number} params.webphoneLogLevel - log Level\n   * @param {Alert} params.alert - alert module instance\n   * @param {Auth} params.auth - auth module instance\n   * @param {Client} params.client - client module instance\n   * @param {RolesAndPermissions} params.rolesAndPermissions - rolesAndPermissions module instance\n   * @param {Storage} params.storage - storage module instance\n   * @param {GlobalStorage} params.globalStorage - globalStorage module instance\n   * @param {ExtensionDevice} params.extensionDevice - extensionDevice module instance\n   * @param {NumberValidate} params.numberValidate - numberValidate module instance\n   * @param {ContactMatcher} params.contactMatcher - contactMatcher module instance, optional\n   * @param {Function} params.onCallEnd - callback on a call end\n   * @param {Function} params.onCallRing - callback on a call ring\n   * @param {Function} params.onCallStart - callback on a call start\n   */\n  constructor({\n    appKey,\n    appName,\n    appVersion,\n    alert,\n    auth,\n    client,\n    rolesAndPermissions,\n    webphoneLogLevel = 3,\n    contactMatcher,\n    extensionDevice,\n    numberValidate,\n    audioSettings,\n    onCallEnd,\n    onCallRing,\n    onCallStart,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._appKey = appKey;\n    this._appName = appName;\n    this._appVersion = appVersion;\n    this._alert = alert;\n    this._webphoneLogLevel = webphoneLogLevel;\n    this._auth = this::ensureExist(auth, 'auth');\n    this._client = this::ensureExist(client, 'client');\n    this._rolesAndPermissions = this::ensureExist(rolesAndPermissions, 'rolesAndPermissions');\n    this._extensionDevice = this::ensureExist(extensionDevice, 'extensionDevice');\n    this._numberValidate = this::ensureExist(numberValidate, 'numberValidate');\n    this._audioSettings = this::ensureExist(audioSettings, 'audioSettings');\n    this._contactMatcher = contactMatcher;\n    this._onCallEndFunc = onCallEnd;\n    this._onCallRingFunc = onCallRing;\n    this._onCallStartFunc = onCallStart;\n    this._webphone = null;\n    this._remoteVideo = null;\n    this._localVideo = null;\n\n    this._sessions = new Map();\n\n    this._reducer = getWebphoneReducer(this.actionTypes);\n\n    this.addSelector('sessionPhoneNumbers',\n      () => this.sessions,\n      (sessions) => {\n        const outputs = [];\n        sessions.forEach((session) => {\n          outputs.push(session.to);\n          outputs.push(session.from);\n        });\n        return outputs;\n      }\n    );\n\n    this.addSelector('ringSession',\n      () => this.ringSessionId,\n      () => this.sessions,\n      (ringSessionId, sessions) => {\n        if (!ringSessionId) {\n          return null;\n        }\n        const ringSession = sessions.find(\n          session => session.id === ringSessionId\n        );\n        return ringSession;\n      }\n    );\n\n    this.addSelector('activeSession',\n      () => this.activeSessionId,\n      () => this.sessions,\n      (activeSessionId, sessions) => {\n        if (!activeSessionId) {\n          return null;\n        }\n        const activeSession = sessions.find(\n          session => session.id === activeSessionId\n        );\n        return activeSession;\n      }\n    );\n\n    this.addSelector('ringSessions',\n      () => this.sessions,\n      sessions => sessions.filter(session => isRing(session))\n    );\n\n    this.addSelector('onHoldSessions',\n      () => this.sessions,\n      sessions => sessions.filter(session => isOnHold(session))\n    );\n\n    if (this._contactMatcher) {\n      this._contactMatcher.addQuerySource({\n        getQueriesFn: this._selectors.sessionPhoneNumbers,\n        readyCheckFn: () => (\n          this.ready\n        ),\n      });\n    }\n\n    this._isFirstRegister = true;\n  }\n\n  _prepareVideoElement() {\n    this._remoteVideo = document.createElement('video');\n    this._remoteVideo.setAttribute('hidden', 'hidden');\n    this._localVideo = document.createElement('video');\n    this._localVideo.setAttribute('hidden', 'hidden');\n    this._localVideo.setAttribute('muted', 'muted');\n    document.body.appendChild(this._remoteVideo);\n    document.body.appendChild(this._localVideo);\n\n    this._remoteVideo.volume = this._audioSettings.callVolume;\n    if (this._audioSettings.supportDevices) {\n      this._remoteVideo.setSinkId(this._audioSettings.outputDeviceId);\n    }\n\n    this.store.dispatch({\n      type: this.actionTypes.videoElementPrepared,\n    });\n  }\n\n  initialize() {\n    if (\n      typeof window !== 'undefined' &&\n      typeof document !== 'undefined'\n    ) {\n      if (document.readyState === 'loading') {\n        window.addEventListener('load', () => {\n          this._prepareVideoElement();\n        });\n      } else {\n        this._prepareVideoElement();\n      }\n      window.addEventListener('unload', () => {\n        this._disconnect();\n      });\n    }\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n      });\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n      this.disconnect();\n    }\n    if (\n      this.ready &&\n      (\n        this._ringtoneVolume !== this._audioSettings.ringtoneVolume ||\n        this._ringtoneMuted !== this._audioSettings.ringtoneMuted\n      )\n    ) {\n      this._ringtoneVolume = this._audioSettings.ringtoneVolume;\n      this._ringtoneMuted = this._audioSettings.ringtoneMuted;\n      if (\n        this._webphone &&\n        this._webphone.userAgent\n      ) {\n        this._webphone.userAgent.audioHelper\n          .setVolume(this._ringtoneMuted ? 0 : this._audioSettings.ringtoneVolume);\n      }\n    }\n    if (\n      this.ready &&\n      this._callVolume !== this._audioSettings.callVolume\n    ) {\n      this._callVolume = this._audioSettings.callVolume;\n      if (\n        this._remoteVideo\n      ) {\n        this._remoteVideo.volume = this._audioSettings.callVolume;\n      }\n    }\n    if (\n      this.ready &&\n      this._audioSettings.supportDevices &&\n      this._outputDeviceId !== this._audioSettings.outputDeviceId\n    ) {\n      this._outputDeviceId = this._audioSettings.outputDeviceId;\n      if (\n        this._remoteVideo\n      ) {\n        this._remoteVideo.setSinkId(this._outputDeviceId);\n      }\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._auth.loggedIn &&\n      this._rolesAndPermissions.ready &&\n      this._extensionDevice.ready &&\n      this._numberValidate.ready &&\n      this._audioSettings.ready &&\n      this.pending\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (\n        !this._auth.loggedIn ||\n        !this._rolesAndPermissions.ready ||\n        !this._numberValidate.ready ||\n        !this._extensionDevice.ready ||\n        !this._audioSettings.ready\n      ) &&\n      this.ready\n    );\n  }\n\n  @proxify\n  async _sipProvision() {\n    const response = await this._client.service.platform()\n      .post('/client-info/sip-provision', {\n        sipInfo: [{ transport: 'WSS' }]\n      });\n    return response.json();\n  }\n\n  async _fetchDL() {\n    const response = await this._client.account().extension().device().list();\n    const devices = response.records;\n    let phoneLines = [];\n    devices.forEach((device) => {\n      if (!device.phoneLines || device.phoneLines.length === 0) {\n        return;\n      }\n      phoneLines = phoneLines.concat(device.phoneLines);\n    });\n    return phoneLines;\n  }\n\n  _removeWebphone() {\n    if (!this._webphone || !this._webphone.userAgent) {\n      return;\n    }\n    this._webphone.userAgent.stop();\n    this._webphone.userAgent.unregister();\n    this._webphone.userAgent.removeAllListeners();\n    this._webphone = null;\n  }\n\n  _createWebphone(provisionData) {\n    this._removeWebphone();\n    this._webphone = new RingCentralWebphone(provisionData, {\n      appKey: this._appKey,\n      appName: this._appName,\n      appVersion: this._appVersion,\n      uuid: this._auth.endpointId,\n      logLevel: this._webphoneLogLevel, // error 0, warn 1, log: 2, debug: 3\n      audioHelper: {\n        enabled: true, // enables audio feedback when web phone is ringing or making a call\n        incoming: incomingAudio, // path to audio file for incoming call\n        outgoing: outgoingAudio, // path to aduotfile for outgoing call\n      }\n    });\n    this._isFirstRegister = true;\n    const onRegistered = () => {\n      if (this._isFirstRegister) {\n        this.store.dispatch({\n          type: this.actionTypes.registered,\n        });\n        this._alert.info({\n          message: webphoneErrors.connected,\n        });\n      }\n      this._isFirstRegister = false;\n    };\n    const onUnregistered = () => {\n      this._isFirstRegister = true;\n      this.store.dispatch({\n        type: this.actionTypes.unregistered,\n      });\n    };\n    const onRegistrationFailed = (response, cause) => {\n      this._isFirstRegister = true;\n      let errorCode;\n      let needToReconnect = false;\n      console.error(response);\n      console.error(`webphone register failed: ${cause}`);\n      if (response && response.status_code === 503) {\n        errorCode = webphoneErrors.webphoneCountOverLimit;\n        this._alert.warning({\n          message: errorCode,\n        });\n        needToReconnect = true;\n      }\n      this.store.dispatch({\n        type: this.actionTypes.registrationFailed,\n        errorCode,\n      });\n      if (cause === 'Request Timeout') {\n        needToReconnect = true;\n      }\n      if (needToReconnect) {\n        this._removeWebphone();\n        this._connect(needToReconnect);\n      }\n    };\n    this._webphone.userAgent.audioHelper.setVolume(\n      this._audioSettings.ringtoneMuted ? 0 : this._audioSettings.ringtoneVolume\n    );\n    this._webphone.userAgent.on('registered', onRegistered);\n    this._webphone.userAgent.on('unregistered', onUnregistered);\n    this._webphone.userAgent.once('registrationFailed', onRegistrationFailed);\n    this._webphone.userAgent.on('invite', (session) => {\n      console.debug('UA invite');\n      this._onInvite(session);\n    });\n  }\n\n  @proxify\n  async _connect(reconnect = false) {\n    try {\n      if (reconnect) {\n        await this._retrySleep();\n      }\n\n      if (!this._auth.loggedIn) {\n        return;\n      }\n\n      // do not connect if it is connecting\n      if (this.connectionStatus === connectionStatus.connecting) {\n        return;\n      }\n\n      // when reconnect is break by disconnect\n      if (reconnect && this.connectionStatus !== connectionStatus.connectFailed) {\n        this.store.dispatch({\n          type: this.actionTypes.resetRetryCounts,\n        });\n        return;\n      }\n\n      this.store.dispatch({\n        type: (\n          reconnect ?\n            this.actionTypes.reconnect : this.actionTypes.connect\n        )\n      });\n\n      const sipProvision = await this._sipProvision();\n\n      // do not continue if it is disconnecting\n      if (this.disconnecting) {\n        return;\n      }\n      this._createWebphone(sipProvision);\n    } catch (error) {\n      console.error(error);\n      this._alert.warning({\n        message: webphoneErrors.connectFailed,\n        ttl: 0,\n        allowDuplicates: false,\n      });\n      let needToReconnect = true;\n      let errorCode;\n      if (\n        error && error.message &&\n        (error.message.indexOf('Feature [WebPhone] is not available') > -1)\n      ) {\n        this._rolesAndPermissions.refreshServiceFeatures();\n        needToReconnect = false;\n        errorCode = webphoneErrors.notWebphonePermission;\n        return;\n      }\n      this.store.dispatch({\n        type: this.actionTypes.connectError,\n        errorCode,\n        error,\n      });\n      if (needToReconnect) {\n        await this._connect(needToReconnect);\n      }\n    }\n  }\n\n  /**\n   * connect a web phone.\n   */\n  @proxify\n  async connect() {\n    if (\n      this._auth.loggedIn &&\n      this.enabled &&\n      this.connectionStatus === connectionStatus.disconnected\n    ) {\n      if (!isBrowerSupport()) {\n        this.store.dispatch({\n          type: this.actionTypes.connectError,\n          errorCode: webphoneErrors.browserNotSupported,\n        });\n        this._alert.warning({\n          message: webphoneErrors.browserNotSupported,\n          ttl: 0,\n        });\n        return;\n      }\n      try {\n        const phoneLines = await this._fetchDL();\n        if (phoneLines.length === 0) {\n          this.store.dispatch({\n            type: this.actionTypes.connectError,\n            errorCode: webphoneErrors.notOutboundCallWithoutDL,\n          });\n          this._alert.warning({\n            message: webphoneErrors.notOutboundCallWithoutDL,\n          });\n        }\n      } catch (error) {\n        console.log(error);\n        this.store.dispatch({\n          type: this.actionTypes.connectError,\n          errorCode: webphoneErrors.checkDLError,\n        });\n        this._alert.warning({\n          message: webphoneErrors.checkDLError,\n        });\n      }\n      await this._connect();\n    }\n  }\n\n  _disconnect() {\n    if (\n      this.connectionStatus === connectionStatus.connected ||\n      this.connectionStatus === connectionStatus.connecting ||\n      this.connectionStatus === connectionStatus.connectFailed\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.disconnect,\n      });\n      if (this._webphone) {\n        this._sessions.forEach((session) => {\n          this.hangup(session);\n        });\n        this._removeWebphone();\n        this._sessions = new Map();\n        this._updateSessions();\n      }\n      this.store.dispatch({\n        type: this.actionTypes.unregistered,\n      });\n    }\n  }\n\n  @proxify\n  async disconnect() {\n    this._disconnect();\n  }\n\n  _onAccepted(session) {\n    session.on('accepted', () => {\n      console.log('accepted');\n      session.callStatus = sessionStatus.connected;\n      this._onCallStart(session);\n    });\n    session.on('progress', () => {\n      console.log('progress...');\n      session.callStatus = sessionStatus.connecting;\n      this._updateSessions();\n    });\n    session.on('rejected', () => {\n      console.log('rejected');\n      session.callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('failed', (response, cause) => {\n      console.log('Event: Failed');\n      console.log(cause);\n      session.callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      session.callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('cancel', () => {\n      console.log('Event: Cancel');\n      session.callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('refer', () => {\n      console.log('Event: Refer');\n    });\n    session.on('replaced', (newSession) => {\n      session.callStatus = sessionStatus.replaced;\n      newSession.callStatus = sessionStatus.connected;\n      newSession.direction = callDirections.inbound;\n      this._addSession(newSession);\n      this._onAccepted(newSession);\n    });\n    session.on('muted', () => {\n      console.log('Event: Muted');\n      session.isOnMute = true;\n      session.callStatus = sessionStatus.onMute;\n      this._updateSessions();\n    });\n    session.on('unmuted', () => {\n      console.log('Event: Unmuted');\n      session.isOnMute = false;\n      session.callStatus = sessionStatus.connected;\n      this._updateSessions();\n    });\n    session.on('hold', () => {\n      console.log('Event: hold');\n      session.callStatus = sessionStatus.onHold;\n      this._updateSessions();\n    });\n    session.on('unhold', () => {\n      console.log('Event: unhold');\n      session.callStatus = sessionStatus.connected;\n      this._updateSessions();\n    });\n  }\n\n  _onInvite(session) {\n    session.creationTime = Date.now();\n    session.direction = callDirections.inbound;\n    session.callStatus = sessionStatus.connecting;\n    session.on('rejected', () => {\n      console.log('Event: Rejected');\n      this._onCallEnd(session);\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      this._onCallEnd(session);\n    });\n    this._onCallRing(session);\n  }\n\n  @proxify\n  async answer(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      this._holdOtherSession(session.id);\n      this._onAccepted(session, 'inbound');\n      await session.accept(this.acceptOptions);\n      this._onCallStart(session);\n      this.store.dispatch({ // for track\n        type: this.actionTypes.callAnswer,\n      });\n    } catch (e) {\n      console.log('Accept failed');\n      console.error(e);\n      this._removeSession(session);\n    }\n  }\n\n  @proxify\n  async reject(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.reject();\n    } catch (e) {\n      console.error(e);\n      this._removeSession(session);\n    }\n  }\n\n  @proxify\n  async resume(sessionId) {\n    await this.unhold(sessionId);\n  }\n\n  @proxify\n  async forward(sessionId, forwardNumber) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return false;\n    }\n    try {\n      const validatedResult\n        = await this._numberValidate.validateNumbers([forwardNumber]);\n      if (!validatedResult.result) {\n        validatedResult.errors.forEach((error) => {\n          this._alert.warning({\n            message: callErrors[error.type],\n            payload: {\n              phoneNumber: error.phoneNumber\n            }\n          });\n        });\n        return false;\n      }\n      const validPhoneNumber =\n        validatedResult.numbers[0] && validatedResult.numbers[0].e164;\n      session.isForwarded = true;\n      await session.forward(validPhoneNumber, this.acceptOptions);\n      console.log('Forwarded');\n      this._onCallEnd(session);\n      return true;\n    } catch (e) {\n      console.error(e);\n      this._alert.warning({\n        message: webphoneErrors.forwardError\n      });\n      return false;\n    }\n  }\n\n  @proxify\n  async mute(sessionId) {\n    try {\n      this._sessionHandleWithId(sessionId, (session) => {\n        session.isOnMute = true;\n        session.mute();\n        this._updateSessions();\n      });\n      return true;\n    } catch (e) {\n      console.error(e);\n      this._alert.warning({\n        message: webphoneErrors.muteError\n      });\n      return false;\n    }\n  }\n\n  @proxify\n  async unmute(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.isOnMute = false;\n      session.unmute();\n      this._updateSessions();\n    });\n  }\n\n  @proxify\n  async hold(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return false;\n    }\n    if (session.isOnHold().local) {\n      return true;\n    }\n    try {\n      await session.hold();\n      this._updateSessions();\n      return true;\n    } catch (e) {\n      console.error('hold error:', e);\n      this._alert.warning({\n        message: webphoneErrors.holdError\n      });\n      return false;\n    }\n  }\n\n  _holdOtherSession(currentSessionId) {\n    this._sessions.forEach((session, sessionId) => {\n      if (currentSessionId === sessionId) {\n        return;\n      }\n      if (session.isOnHold().local) {\n        return;\n      }\n      session.hold();\n    });\n  }\n\n  @proxify\n  async unhold(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      if (session.isOnHold().local) {\n        this._holdOtherSession(session.id);\n        await session.unhold();\n        this._onCallStart(session);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  @proxify\n  async startRecord(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    // If the status of current session is not connected,\n    // the recording process can not be started.\n    if (session.callStatus === sessionStatus.connecting) {\n      return;\n    }\n    try {\n      session.recordStatus = recordStatus.pending;\n      this._updateSessions();\n      await session.startRecord();\n      session.recordStatus = recordStatus.recording;\n      this._updateSessions();\n    } catch (e) {\n      console.error(e);\n      session.recordStatus = recordStatus.idle;\n      this._updateSessions();\n      // Recording has been disabled\n      if (e && e.code === -5) {\n        this._alert.danger({\n          message: webphoneErrors.recordDisabled\n        });\n        // Disabled phone recording\n        session.recordStatus = recordStatus.pending;\n        this._updateSessions();\n        return;\n      }\n      this._alert.danger({\n        message: webphoneErrors.recordError,\n        payload: {\n          errorCode: e.code\n        }\n      });\n    }\n  }\n\n  @proxify\n  async stopRecord(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.recordStatus = recordStatus.pending;\n      this._updateSessions();\n      await session.stopRecord();\n      session.recordStatus = recordStatus.idle;\n      this._updateSessions();\n    } catch (e) {\n      console.error(e);\n      session.recordStatus = recordStatus.recording;\n      this._updateSessions();\n    }\n  }\n\n  @proxify\n  async park(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.park();\n      console.log('Parked');\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async transfer(transferNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.isOnTransfer = true;\n      this._updateSessions();\n      const validatedResult\n        = await this._numberValidate.validateNumbers([transferNumber]);\n      if (!validatedResult.result) {\n        validatedResult.errors.forEach((error) => {\n          this._alert.warning({\n            message: callErrors[error.type],\n            payload: {\n              phoneNumber: error.phoneNumber\n            }\n          });\n        });\n        session.isOnTransfer = false;\n        this._updateSessions();\n        return;\n      }\n      const validPhoneNumber =\n        validatedResult.numbers[0] && validatedResult.numbers[0].e164;\n      await session.transfer(validPhoneNumber);\n      session.isOnTransfer = false;\n      this._updateSessions();\n      this._onCallEnd(session);\n    } catch (e) {\n      console.error(e);\n      session.isOnTransfer = false;\n      this._updateSessions();\n      this._alert.danger({\n        message: webphoneErrors.transferError\n      });\n    }\n  }\n\n  @proxify\n  async transferWarm(transferNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.hold();\n      const newSession = session.ua.invite(transferNumber, {\n        media: this.acceptOptions.media\n      });\n      newSession.once('accepted', async () => {\n        try {\n          await session.warmTransfer(newSession);\n          console.log('Transferred');\n          this._onCallEnd(session);\n        } catch (e) {\n          console.error(e);\n        }\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async flip(flipValue, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.flip(flipValue);\n      // this._onCallEnd(session);\n      session.isOnFlip = true;\n      console.log('Flipped');\n    } catch (e) {\n      session.isOnFlip = false;\n      this._alert.warning({\n        message: webphoneErrors.flipError\n      });\n      console.error(e);\n    }\n    this._updateSessions();\n  }\n\n  @proxify\n  async sendDTMF(dtmfValue, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.dtmf(dtmfValue);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async hangup(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.terminate();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  @proxify\n  async toVoiceMail(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.isToVoicemail = true;\n      await session.toVoicemail();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n      this._alert.warning({\n        message: webphoneErrors.toVoiceMailError\n      });\n    }\n  }\n\n  @proxify\n  async replyWithMessage(sessionId, replyOptions) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.isReplied = true;\n      await session.replyWithMessage(replyOptions);\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  _sessionHandleWithId(sessionId, func) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return null;\n    }\n    return func(session);\n  }\n\n  /**\n   * start a outbound call.\n   * @param {toNumber} recipient number\n   * @param {fromNumber} call Id\n   * @param {homeCountryId} homeCountry Id\n   */\n  @proxify\n  async makeCall({ toNumber, fromNumber, homeCountryId }) {\n    if (!this._webphone) {\n      this._alert.warning({\n        message: this.errorCode,\n      });\n      return null;\n    }\n    const phoneLines = await this._fetchDL();\n    if (phoneLines.length === 0) {\n      this._alert.warning({\n        message: webphoneErrors.notOutboundCallWithoutDL,\n      });\n      return null;\n    }\n    const session = this._webphone.userAgent.invite(toNumber, {\n      media: this.acceptOptions.media,\n      fromNumber,\n      homeCountryId,\n    });\n    session.direction = callDirections.outbound;\n    session.callStatus = sessionStatus.connecting;\n    session.creationTime = Date.now();\n    this._onAccepted(session);\n    this._holdOtherSession(session.id);\n    this._onCallStart(session);\n    return session;\n  }\n\n  @proxify\n  async updateSessionMatchedContact(sessionId, contact) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.contactMatch = contact;\n      this._updateSessions();\n    });\n  }\n\n  _updateSessions() {\n    this.store.dispatch({\n      type: this.actionTypes.updateSessions,\n      sessions: [...this._sessions.values()].map(normalizeSession),\n    });\n  }\n\n  _addSession(session) {\n    this._sessions.set(session.id, session);\n    this._updateSessions();\n  }\n\n  _removeSession(session) {\n    this._sessions.delete(session.id);\n    this._updateSessions();\n  }\n\n  @proxify\n  async toggleMinimized(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.minimized = !session.minimized;\n      this._updateSessions();\n    });\n  }\n\n  _onCallStart(session) {\n    this._addSession(session);\n    const normalizedSession = normalizeSession(session);\n    this.store.dispatch({\n      type: this.actionTypes.callStart,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    if (this._contactMatcher) {\n      this._contactMatcher.triggerMatch();\n    }\n    if (typeof this._onCallStartFunc === 'function') {\n      this._onCallStartFunc(normalizedSession, this.activeSession);\n    }\n  }\n\n  _onCallRing(session) {\n    this._addSession(session);\n    const normalizedSession = normalizeSession(session);\n    this.store.dispatch({\n      type: this.actionTypes.callRing,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    if (this._contactMatcher) {\n      this._contactMatcher.triggerMatch();\n    }\n    if (this.activeSession && !isOnHold(this.activeSession)) {\n      this._webphone.userAgent.audioHelper.playIncoming(false);\n    }\n    if (typeof this._onCallRingFunc === 'function') {\n      this._onCallRingFunc(normalizedSession, this.ringSession);\n    }\n  }\n\n  _onCallEnd(session) {\n    this._removeSession(session);\n    const normalizedSession = normalizeSession(session);\n    this.store.dispatch({\n      type: this.actionTypes.callEnd,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    if (typeof this._onCallEndFunc === 'function') {\n      this._onCallEndFunc(normalizedSession, this.activeSession);\n    }\n  }\n\n  async _retrySleep() {\n    if (this.connectRetryCounts < 3) {\n      await sleep(FIRST_THREE_RETRIES_DELAY);\n    }\n    if (this.connectRetryCounts === 3) {\n      await sleep(FOURTH_RETRIES_DELAY);\n    }\n    if (this.connectRetryCounts === 4) {\n      await sleep(FIFTH_RETRIES_DELAY); // sleep 30 seconds\n    }\n    if (this.connectRetryCounts > 4) {\n      await sleep(MAX_RETRIES_DELAY); // sleep 30 seconds\n    }\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get originalSessions() {\n    return this._sessions;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get pending() {\n    return this.state.status === moduleStatuses.pending;\n  }\n\n  get ringSessionId() {\n    return this.state.ringSessionId;\n  }\n\n  get activeSessionId() {\n    return this.state.activeSessionId;\n  }\n\n  /**\n   * Current active session(Outbound and InBound that answered)\n   */\n  get activeSession() {\n    return this._selectors.activeSession();\n  }\n\n  /**\n   * Current ring session(inbound)\n   */\n  get ringSession() {\n    return this._selectors.ringSession();\n  }\n\n  get sessions() {\n    return this.state.sessions;\n  }\n\n  get ringSessions() {\n    return this._selectors.ringSessions();\n  }\n\n  get onHoldSessions() {\n    return this._selectors.onHoldSessions();\n  }\n\n  get lastEndedSessions() {\n    return this.state.lastEndedSessions;\n  }\n\n  get videoElementPrepared() {\n    return this.state.videoElementPrepared;\n  }\n\n  get enabled() {\n    return this._rolesAndPermissions.webphoneEnabled;\n  }\n\n  get connectionStatus() {\n    return this.state.connectionStatus;\n  }\n\n  get connectRetryCounts() {\n    return this.state.connectRetryCounts;\n  }\n\n  get acceptOptions() {\n    return {\n      media: {\n        audio: {\n          deviceId: this._audioSettings.inputDeviceId,\n        },\n        video: false,\n        render: {\n          remote: this._remoteVideo,\n          local: this._localVideo,\n        }\n      }\n    };\n  }\n  get isOnTransfer() {\n    return this.activeSession && this.activeSession.isOnTransfer;\n  }\n\n  get errorCode() {\n    return this.state.errorCode;\n  }\n\n  get disconnecting() {\n    return this.connectionStatus === connectionStatus.disconnecting;\n  }\n\n  get connecting() {\n    return this.connectionStatus === connectionStatus.connecting;\n  }\n\n  get connected() {\n    return this.connectionStatus === connectionStatus.connected;\n  }\n\n  get connectFailed() {\n    return this.connectionStatus === connectionStatus.connectFailed;\n  }\n}\n"]}