{"version":3,"sources":["modules/AccountPhoneNumber/index.js"],"names":["simplifyPhoneNumber","number","AccountPhoneNumber","deps","dep","optional","client","options","name","getDataReducer","fetchFunction","account","phoneNumber","list","params","map","addSelector","data","numbers","numberMap","forEach","extension","extensionNumber","push","_selectors","extensionToPhoneNumberMap"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEA,SAASA,mBAAT,CAA6BC,MAA7B,EAAqC;AACnC,SAAO,yBAAUA,MAAV,CAAP;AACD;;AAED;;;;IAUqBC,kB,WANpB,gBAAO;AACNC,QAAM,CACJ,QADI,EAEJ,EAAEC,KAAK,2BAAP,EAAoCC,UAAU,IAA9C,EAFI;AADA,CAAP,C;;;AAOC;;;;;AAKA,oCAGG;AAAA;;AAAA,QAFDC,MAEC,QAFDA,MAEC;AAAA,QADEC,OACF;AAAA;;AAAA;AAECC,YAAM,oBAFP;AAGCF,oBAHD;AAICG,gDAJD;AAKCC;AAAA,+EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmB,yBAAU;AAAA,2BAC1CJ,OAAOK,OAAP,GAAiBC,WAAjB,GAA+BC,IAA/B,CAAoCC,MAApC,CAD0C;AAAA,mBAAV,CAAnB;;AAAA;AAAA,gCAEPd,mBAFO;AAAA,iEAEXe,GAFW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;;AAAA;AAAA;AAAA;AAAA;AALD,OAQIR,OARJ;;AAWD,UAAKS,WAAL,CACE,SADF,EAEE;AAAA,aAAM,MAAKC,IAAX;AAAA,KAFF,EAGE;AAAA,aAAQA,QAAQ,EAAhB;AAAA,KAHF;;AAMA,UAAKD,WAAL,CACE,2BADF,EAEE;AAAA,aAAM,MAAKE,OAAX;AAAA,KAFF,EAGE,UAACA,OAAD,EAAa;AACX,UAAMC,YAAY,EAAlB;AACAD,cAAQE,OAAR,CAAgB,UAACnB,MAAD,EAAY;AAC1B,YAAIA,OAAOoB,SAAP,IAAoBpB,OAAOoB,SAAP,CAAiBC,eAAzC,EAA0D;AACxD,cAAI,CAACH,UAAUlB,OAAOoB,SAAP,CAAiBC,eAA3B,CAAL,EAAkD;AAChDH,sBAAUlB,OAAOoB,SAAP,CAAiBC,eAA3B,IAA8C,EAA9C;AACD;AACDH,oBAAUlB,OAAOoB,SAAP,CAAiBC,eAA3B,EAA4CC,IAA5C,CAAiDtB,MAAjD;AACD;AACF,OAPD;AAQA,aAAOkB,SAAP;AACD,KAdH;AAjBC;AAiCF;;;;wBAEa;AACZ,aAAO,KAAKK,UAAL,CAAgBN,OAAhB,EAAP;AACD;;;wBAE+B;AAC9B,aAAO,KAAKM,UAAL,CAAgBC,yBAAhB,EAAP;AACD;;;;kBAlDkBvB,kB","file":"index.js","sourcesContent":["import 'core-js/fn/array/find';\nimport { Module } from '../../lib/di';\nimport fetchList from '../../lib/fetchList';\nimport DataFetcher from '../../lib/DataFetcher';\nimport removeUri from '../../lib/removeUri';\n\nimport { getDataReducer } from './getReducer';\n\nfunction simplifyPhoneNumber(number) {\n  return removeUri(number);\n}\n\n/**\n * @class\n * @description Accound phone number module to get account phone number list\n */\n@Module({\n  deps: [\n    'Client',\n    { dep: 'AccountPhoneNumberOptions', optional: true }\n  ]\n})\nexport default class AccountPhoneNumber extends DataFetcher {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   */\n  constructor({\n    client,\n    ...options\n  }) {\n    super({\n      name: 'accountPhoneNumber',\n      client,\n      getDataReducer,\n      fetchFunction: async () => (await fetchList(params => (\n        client.account().phoneNumber().list(params)\n      ))).map(simplifyPhoneNumber),\n      ...options,\n    });\n\n    this.addSelector(\n      'numbers',\n      () => this.data,\n      data => data || [],\n    );\n\n    this.addSelector(\n      'extensionToPhoneNumberMap',\n      () => this.numbers,\n      (numbers) => {\n        const numberMap = {};\n        numbers.forEach((number) => {\n          if (number.extension && number.extension.extensionNumber) {\n            if (!numberMap[number.extension.extensionNumber]) {\n              numberMap[number.extension.extensionNumber] = [];\n            }\n            numberMap[number.extension.extensionNumber].push(number);\n          }\n        });\n        return numberMap;\n      },\n    );\n  }\n\n  get numbers() {\n    return this._selectors.numbers();\n  }\n\n  get extensionToPhoneNumberMap() {\n    return this._selectors.extensionToPhoneNumberMap();\n  }\n}\n"]}