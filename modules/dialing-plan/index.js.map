{"version":3,"sources":["modules/dialing-plan/index.js"],"names":["keys","storage","DEFAULT_TTL","symbols","DialingPlan","options","actions","api","auth","ttl","on","oldState","newState","status","emit","statusChange","oldStatus","newStatus","storageEvents","dataChange","oldData","newData","oldPlanData","newPlanData","dialingPlans","map","plan","id","sort","join","dialingPlanChange","ready","loadDialingPlans","store","dispatch","type","force","data","getItem","Date","now","timestamp","fetch","account","dialingPlan","list","params","setItem","fetchSuccess","fetchError","error","prefix","state"],"mappings":"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","file":"index.js","sourcesContent":["import SymbolMap from 'data-types/symbol-map';\nimport KeyValueMap from 'data-types/key-value-map';\nimport RcModule, { initFunction } from '../../lib/rc-module';\nimport { proxify } from '../proxy';\nimport fetchList from '../../lib/fetch-list';\nimport dialingPlanStatus from './dialing-plan-status';\nimport dialingPlanActions from './dialing-plan-actions';\nimport getDialingPlanReducer from './get-dialing-plan-reducer';\nimport dialingPlanEvents from './dialing-plan-events';\n\nconst keys = new KeyValueMap({\n  storage: 'dialing-plan-data',\n});\n\nconst DEFAULT_TTL = 30 * 60 * 1000;\n\nconst symbols = new SymbolMap([\n  'api',\n  'auth',\n  'storage',\n  'ttl',\n]);\n\nexport default class DialingPlan extends RcModule {\n  constructor(options = {}) {\n    super({\n      ...options,\n      actions: dialingPlanActions,\n    });\n    const {\n      api,\n      auth,\n      storage,\n      ttl = DEFAULT_TTL,\n    } = options;\n    this[symbols.api] = api;\n    this[symbols.auth] = auth;\n    this[symbols.storage] = storage;\n    this[symbols.ttl] = ttl;\n\n    this.on('state-change', ({ oldState, newState }) => {\n      if (oldState) {\n        if (oldState.status !== newState.status) {\n          this.emit(dialingPlanEvents.statusChange, {\n            oldStatus: oldState.status,\n            newStatus: newState.status,\n          });\n        }\n      }\n    });\n    this[symbols.storage].on(\n      this[symbols.storage].storageEvents.dataChange,\n      ({ oldData, newData }) => {\n        const oldPlanData = oldData[keys.storage];\n        const newPlanData = newData[keys.storage];\n        if (!oldPlanData && !newPlanData) return;\n        if (\n          oldPlanData && !newPlanData ||\n          !oldPlanData && newPlanData ||\n          oldPlanData.dialingPlans.map(plan => plan.id).sort().join(',') !==\n          newPlanData.dialingPlans.map(plan => plan.id).sort().join(',')\n        ) {\n          this.emit(dialingPlanEvents.dialingPlanChange, newPlanData.dialingPlans);\n        }\n      },\n    );\n  }\n\n  @initFunction\n  init() {\n    this[symbols.storage].on(this[symbols.storage].storageEvents.ready, async () => {\n      await this.loadDialingPlans();\n      this.store.dispatch({\n        type: this.actions.ready,\n      });\n    });\n  }\n  get dialingPlans() {\n    return this[symbols.storage].getItem(keys.storage);\n  }\n  @proxify\n  async loadDialingPlans(options = {}) {\n    const {\n      force = false,\n    } = options;\n    let data = this[symbols.storage].getItem(keys.storage);\n    if (force || !data || Date.now() - data.timestamp > this[symbols.ttl]) {\n      try {\n        this.store.dispatch({\n          type: this.actions.fetch,\n        });\n        data = {\n          dialingPlans: await fetchList(params => (\n            this[symbols.api].account().dialingPlan().list(params)\n          )),\n          timestamp: Date.now(),\n        };\n        this[symbols.storage].setItem(keys.storage, data);\n        this.store.dispatch({\n          type: this.actions.fetchSuccess,\n        });\n      } catch (error) {\n        this.store.dispatch({\n          type: this.actions.fetchError,\n          error,\n        });\n        throw error;\n      }\n    }\n    return data;\n  }\n  get reducer() {\n    return getDialingPlanReducer(this.prefix);\n  }\n\n  get dialingPlanStatus() {\n    return dialingPlanStatus;\n  }\n\n  get dialingPlanEvents() {\n    return dialingPlanEvents;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n}\n"]}