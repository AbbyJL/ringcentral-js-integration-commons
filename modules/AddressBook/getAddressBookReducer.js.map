{"version":3,"sources":["modules/AddressBook/getAddressBookReducer.js"],"names":["getSyncStatusReducer","getContactListReducer","getSyncTokenReducer","getSyncTimestampReducer","getAddressBookReducer","types","state","idle","type","sync","syncing","syncError","syncSuccess","records","contacts","contactMap","length","forEach","contact","push","id","record","isDeleted","availability","deleted","oldIndex","undefined","oldContact","filter","resetSuccess","cleanUp","syncToken","syncTime","Date","getTime","reducers","status","syncStatus"],"mappings":"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","file":"getAddressBookReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\nimport availabilityTypes from '../../enums/availabilityTypes';\nimport removeUri from '../../lib/removeUri';\nimport syncStatus from './syncStatus';\n\nexport function getSyncStatusReducer(types) {\n  return (state = syncStatus.idle, { type }) => {\n    switch (type) {\n      case types.sync:\n        return syncStatus.syncing;\n      case types.syncError:\n      case types.syncSuccess:\n        return syncStatus.idle;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getContactListReducer(types) {\n  return (state = [], { type, records }) => {\n    const contacts = [];\n    const contactMap = {};\n    switch (type) {\n      case types.syncSuccess:\n        if (!records || records.length === 0) {\n          return state;\n        }\n        state.forEach((contact) => {\n          contacts.push(contact);\n          contactMap[contact.id] = contacts.length - 1;\n        });\n        records.forEach((record) => {\n          const isDeleted = (record.availability === availabilityTypes.deleted);\n          const oldIndex = contactMap[record.id];\n          if (oldIndex !== undefined && oldIndex !== null) {\n            if (isDeleted) {\n              contacts[oldIndex] = null;\n              delete contactMap[record.id];\n            } else {\n              const oldContact = contacts[oldIndex];\n              contacts[oldIndex] = {\n                ...oldContact,\n                ...(removeUri(record)),\n              };\n            }\n          } else if (!isDeleted) {\n            contacts.push(removeUri(record));\n            contactMap[record.id] = contacts.length - 1;\n          }\n        });\n        return contacts.filter(contact => !!contact);\n      case types.resetSuccess:\n      case types.cleanUp:\n        return [];\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getSyncTokenReducer(types) {\n  return (state = null, { type, syncToken }) => {\n    switch (type) {\n      case types.syncSuccess:\n        return syncToken;\n      case types.resetSuccess:\n      case types.cleanUp:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getSyncTimestampReducer(types) {\n  return (state = null, { type, syncTime }) => {\n    switch (type) {\n      case types.syncSuccess:\n        return (new Date(syncTime)).getTime();\n      case types.resetSuccess:\n      case types.cleanUp:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getAddressBookReducer(types, reducers = {}) {\n  return combineReducers({\n    ...reducers,\n    status: getModuleStatusReducer(types),\n    syncStatus: getSyncStatusReducer(types),\n  });\n}\n"]}