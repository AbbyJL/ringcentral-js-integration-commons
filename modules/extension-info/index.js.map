{"version":3,"sources":["modules/extension-info/index.js"],"names":["keys","storage","DEFAULT_TTL","symbols","ExtensionInfo","options","actions","api","auth","ttl","on","oldState","newState","status","emit","statusChange","oldStatus","newStatus","storageEvents","dataChange","oldData","newData","extensionInfoChange","extensionInfo","ready","loadExtensionInfo","store","dispatch","type","pending","reset","force","data","getItem","Date","now","timestamp","fetch","account","extension","get","setItem","fetchSuccess","fetchError","error","prefix","state"],"mappings":"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","file":"index.js","sourcesContent":["import SymbolMap from 'data-types/symbol-map';\nimport KeyValueMap from 'data-types/key-value-map';\nimport RcModule, { initFunction } from '../../lib/rc-module';\nimport { proxify } from '../proxy';\nimport extensionInfoStatus from './extension-info-status';\nimport extensionInfoActions from './extension-info-actions';\nimport getExtensionInfoReducer from './get-extension-info-reducer';\nimport extensionInfoEvents from './extension-info-events';\n\nconst keys = new KeyValueMap({\n  storage: 'extension-info-data',\n});\n\nconst DEFAULT_TTL = 30 * 60 * 1000;\n\nconst symbols = new SymbolMap([\n  'api',\n  'auth',\n  'storage',\n  'ttl',\n]);\n\nexport default class ExtensionInfo extends RcModule {\n  constructor(options = {}) {\n    super({\n      ...options,\n      actions: extensionInfoActions,\n    });\n    const {\n      api,\n      auth,\n      storage,\n      ttl = DEFAULT_TTL,\n    } = options;\n    this[symbols.api] = api;\n    this[symbols.auth] = auth;\n    this[symbols.storage] = storage;\n    this[symbols.ttl] = ttl;\n\n    this.on('state-change', ({ oldState, newState }) => {\n      if (oldState) {\n        if (oldState.status !== newState.status) {\n          this.emit(extensionInfoEvents.statusChange, {\n            oldStatus: oldState.status,\n            newStatus: newState.status,\n          });\n        }\n      }\n    });\n    this[symbols.storage].on(\n      this[symbols.storage].storageEvents.dataChange,\n      ({ oldData, newData }) => {\n        if (!oldData[keys.storage] && !newData[keys.storage]) return;\n        if (\n          oldData[keys.storage] && !newData[keys.storage] ||\n          !oldData[keys.storage] && newData[keys.storage] ||\n          oldData[keys.storage] !== newData[keys.storage] &&\n          JSON.stringify(oldData[keys.storage]) !== JSON.stringify(newData[keys.storage])\n        ) {\n          this.emit(extensionInfoEvents.extensionInfoChange, newData[keys.storage].extensionInfo);\n        }\n      },\n    );\n  }\n\n  @initFunction\n  init() {\n    this[symbols.storage].on(this[symbols.storage].storageEvents.ready, async () => {\n      await this.loadExtensionInfo();\n      this.store.dispatch({\n        type: this.actions.ready,\n      });\n    });\n    this[symbols.storage].on(this[symbols.storage].storageEvents.pending, () => {\n      this.store.dispatch({\n        type: this.actions.reset,\n      });\n    });\n  }\n  get data() {\n    return this[symbols.storage].getItem(keys.storage);\n  }\n  @proxify\n  async loadExtensionInfo(options = {}) {\n    const {\n      force = false,\n    } = options;\n    let data = this[symbols.storage].getItem(keys.storage);\n    if (force || !data || Date.now() - data.timestamp > this[symbols.ttl]) {\n      try {\n        this.store.dispatch({\n          type: this.actions.fetch,\n        });\n        data = {\n          extensionInfo: await this[symbols.api].account().extension().get(),\n          timestamp: Date.now(),\n        };\n        this[symbols.storage].setItem(keys.storage, data);\n        this.store.dispatch({\n          type: this.actions.fetchSuccess,\n        });\n      } catch (error) {\n        this.store.dispatch({\n          type: this.actions.fetchError,\n          error,\n        });\n        throw error;\n      }\n    }\n    return data;\n  }\n  get reducer() {\n    return getExtensionInfoReducer(this.prefix);\n  }\n\n  get extensionInfoStatus() {\n    return extensionInfoStatus;\n  }\n  static get extensionInfoStatus() {\n    return extensionInfoStatus;\n  }\n\n  get extensionInfoEvents() {\n    return extensionInfoEvents;\n  }\n  static get extensionInfoEvents() {\n    return extensionInfoEvents;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n}\n"]}