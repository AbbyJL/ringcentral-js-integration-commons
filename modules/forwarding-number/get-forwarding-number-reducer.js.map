{"version":3,"sources":["modules/forwarding-number/get-forwarding-number-reducer.js"],"names":["getForwardingNumberReducer","prefix","actions","state","action","status","pending","error","type","ready","fetch","fetching","fetchSuccess","fetchError","reset"],"mappings":";;;;;kBAIwBA,0B;;AAJxB;;AACA;;;;AACA;;;;;;AAEe,SAASA,0BAAT,CAAoCC,MAApC,EAA4C;AACzD,MAAMC,UAAU,mEAAuCD,MAAvC,CAAhB;AACA,SAAO,UAACE,KAAD,EAAQC,MAAR,EAAmB;AACxB,QAAI,CAACD,KAAL,EAAY;AACV,aAAO;AACLE,gBAAQ,iCAAuBC,OAD1B;AAELC,eAAO;AAFF,OAAP;AAID;AACD,QAAI,CAACH,MAAL,EAAa;AACX,aAAOD,KAAP;AACD;AACD,YAAQC,OAAOI,IAAf;AACE,WAAKN,QAAQO,KAAb;AACE,eAAO;AACLJ,kBAAQ,iCAAuBI,KAD1B;AAELF,iBAAO;AAFF,SAAP;AAIF,WAAKL,QAAQQ,KAAb;AACE,eAAO;AACLL,kBAAQ,iCAAuBM,QAD1B;AAELJ,iBAAO;AAFF,SAAP;AAIF,WAAKL,QAAQU,YAAb;AACE,eAAO;AACLP,kBAAQ,iCAAuBI,KAD1B;AAELF,iBAAO;AAFF,SAAP;AAIF,WAAKL,QAAQW,UAAb;AACE,eAAO;AACLR,kBAAQ,iCAAuBI,KAD1B;AAELF,iBAAOH,OAAOG;AAFT,SAAP;AAIF,WAAKL,QAAQY,KAAb;AACE,eAAO;AACLT,kBAAQ,iCAAuBC,OAD1B;AAELC,iBAAO;AAFF,SAAP;AAIF;AACE,eAAOJ,KAAP;AA3BJ;AA6BD,GAvCD;AAwCD","file":"get-forwarding-number-reducer.js","sourcesContent":["import { prefixActions } from '../../lib/redux-helper';\nimport forwardingNumberActions from './forwarding-number-actions';\nimport forwardingNumberStatus from './forwarding-number-status';\n\nexport default function getForwardingNumberReducer(prefix) {\n  const actions = prefixActions(forwardingNumberActions, prefix);\n  return (state, action) => {\n    if (!state) {\n      return {\n        status: forwardingNumberStatus.pending,\n        error: null,\n      };\n    }\n    if (!action) {\n      return state;\n    }\n    switch (action.type) {\n      case actions.ready:\n        return {\n          status: forwardingNumberStatus.ready,\n          error: null,\n        };\n      case actions.fetch:\n        return {\n          status: forwardingNumberStatus.fetching,\n          error: null,\n        };\n      case actions.fetchSuccess:\n        return {\n          status: forwardingNumberStatus.ready,\n          error: null,\n        };\n      case actions.fetchError:\n        return {\n          status: forwardingNumberStatus.ready,\n          error: action.error,\n        };\n      case actions.reset:\n        return {\n          status: forwardingNumberStatus.pending,\n          error: null,\n        };\n      default:\n        return state;\n    }\n  };\n}\n"]}