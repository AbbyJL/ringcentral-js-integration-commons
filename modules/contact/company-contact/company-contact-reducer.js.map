{"version":3,"sources":["modules/contact/company-contact/company-contact-reducer.js"],"names":["getReducer","initialState","companyContact","companyContactLoading","companyContactError","prefix","actions","state","action","type","loadCompanyContact","loadCompanyContactSuccess","payload","loadCompanyContactFailed","error"],"mappings":";;;;;;;;;;kBASwBA,U;;AATxB;;AACA;;;;;;AAEA,IAAMC,eAAe;AACnBC,kBAAgB,IADG;AAEnBC,yBAAuB,KAFJ;AAGnBC,uBAAqB;AAHF,CAArB;;AAMe,SAASJ,UAAT,CAAoBK,MAApB,EAA4B;AACzC,MAAMC,UAAU,iEAAqCD,MAArC,CAAhB;;AAEA,SAAO,UAACE,KAAD,EAAQC,MAAR,EAAmB;AACxB,QAAI,OAAOD,KAAP,KAAiB,WAArB,EAAkC,OAAO,sBAAc,EAAd,EAAkBN,YAAlB,CAAP;AAClC,QAAI,CAACO,MAAL,EAAa,OAAOD,KAAP;AACb,YAAQC,OAAOC,IAAf;;AAEE,WAAKH,QAAQI,kBAAb;AACE,eAAO,sBACL,EADK,EAELH,KAFK,EAGL;AACEJ,iCAAuB;AADzB,SAHK,CAAP;AAOF,WAAKG,QAAQK,yBAAb;AACE,eAAO,sBACL,EADK,EAELJ,KAFK,EAGL;AACEL,0BAAgBM,OAAOI,OADzB;AAEET,iCAAuB,KAFzB;AAGEC,+BAAqB;AAHvB,SAHK,CAAP;AASF,WAAKE,QAAQO,wBAAb;AACE,eAAO,sBACL,EADK,EAELN,KAFK,EAGL;AACEJ,iCAAuB,KADzB;AAEEC,+BAAqBI,OAAOM;AAF9B,SAHK,CAAP;;AASF;AACE,eAAOP,KAAP;AA/BJ;AAiCD,GApCD;AAqCD","file":"company-contact-reducer.js","sourcesContent":["import { prefixActions } from '../../../lib/redux-helper';\nimport companyContactActions from './company-contact-actions';\n\nconst initialState = {\n  companyContact: null,\n  companyContactLoading: false,\n  companyContactError: null,\n};\n\nexport default function getReducer(prefix) {\n  const actions = prefixActions(companyContactActions, prefix);\n\n  return (state, action) => {\n    if (typeof state === 'undefined') return Object.assign({}, initialState);\n    if (!action) return state;\n    switch (action.type) {\n\n      case actions.loadCompanyContact:\n        return Object.assign(\n          {},\n          state,\n          {\n            companyContactLoading: true,\n          },\n        );\n      case actions.loadCompanyContactSuccess:\n        return Object.assign(\n          {},\n          state,\n          {\n            companyContact: action.payload,\n            companyContactLoading: false,\n            companyContactError: null,\n          },\n        );\n      case actions.loadCompanyContactFailed:\n        return Object.assign(\n          {},\n          state,\n          {\n            companyContactLoading: false,\n            companyContactError: action.error,\n          },\n        );\n\n      default:\n        return state;\n    }\n  };\n}\n"]}