{"version":3,"sources":["modules/contact/company-contact/index.js"],"names":["symbols","CompanyContact","options","actions","api","platform","settings","on","events","loginSuccess","loadCompanyContact","loggedIn","userOptions","perPage","store","dispatch","type","account","extension","list","contacts","loadCompanyContactSuccess","payload","loadCompanyContactFailed","error","prefix"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEA,IAAMA,UAAU,wBAAc,CAC5B,KAD4B,EAE5B,UAF4B,EAG5B,UAH4B,CAAd,CAAhB;;AAMA;;;;;IAIqBC,c;;;AACnB;;;AAGA,0BAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AAAA,iLAEdA,OAFc;AAGjBC;AAHiB;;AAAA,QAMjBC,GANiB,GASfF,OATe,CAMjBE,GANiB;AAAA,QAOjBC,QAPiB,GASfH,OATe,CAOjBG,QAPiB;AAAA,QAQjBC,QARiB,GASfJ,OATe,CAQjBI,QARiB;;AAUnB,UAAKN,QAAQI,GAAb,IAAoBA,GAApB;AACA,UAAKJ,QAAQK,QAAb,IAAyBA,QAAzB;AACA,UAAKL,QAAQM,QAAb,IAAyBA,QAAzB;;AAEAD,aAASE,EAAT,CAAYF,SAASG,MAAT,CAAgBC,YAA5B,EAA0C,YAAM;AAC9C,YAAKC,kBAAL;AACD,KAFD;;AAIA,+DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACWL,SAASM,QAAT,EADX;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAES,MAAKD,kBAAL,EAFT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAlBmB;AAuBpB;;;;;;;;wFAKG,E;;sCAFFE,W;YAAAA,W,qCAAc,E;kCACdC,O;YAAAA,O,iCAAU,K;;;;;;AAEV,qBAAKC,KAAL,CAAWC,QAAX,CAAoB;AAClBC,wBAAM,KAAKb,OAAL,CAAaO;AADD,iBAApB;;;uBAIqC,4BAAgB;AAAA,yBACjD,OAAKV,QAAQI,GAAb,EAAkBa,OAAlB,GAA4BC,SAA5B,GAAwCC,IAAxC,4BACKjB,OADL,EAEKU,WAFL;AAGEC;AAHF,qBADiD;AAAA,iBAAhB,C;;;;AAA7BO,wB;;AAON,qBAAKN,KAAL,CAAWC,QAAX,CAAoB;AAClBC,wBAAM,KAAKb,OAAL,CAAakB,yBADD;AAElBC,2BAASF;AAFS,iBAApB;;;;;;;;AAKA,qBAAKN,KAAL,CAAWC,QAAX,CAAoB;AAClBC,wBAAM,KAAKb,OAAL,CAAaoB,wBADD;AAElBC;AAFkB,iBAApB;;;;;;;;;;;;;;;;;;wBAOU;AACZ,aAAO,qCAAQ,KAAKC,MAAb,CAAP;AACD;;;;;kBA1DkBxB,c","file":"index.js","sourcesContent":["import RcModule from '../../../lib/rc-module';\nimport SymbolMap from 'data-types/symbol-map';\nimport KeyValueMap from 'data-types/key-value-map';\nimport reducer from './company-contact-reducer';\nimport actions from './company-contact-actions';\n\nimport { fetchList, extractData } from '../../../lib/utils';\n\nconst symbols = new SymbolMap([\n  'api',\n  'platform',\n  'settings',\n]);\n\n/**\n * @class\n * @description Contact module\n */\nexport default class CompanyContact extends RcModule {\n  /**\n   * @function\n   */\n  constructor(options) {\n    super({\n      ...options,\n      actions,\n    });\n    const {\n      api,\n      platform,\n      settings,\n    } = options;\n    this[symbols.api] = api;\n    this[symbols.platform] = platform;\n    this[symbols.settings] = settings;\n\n    platform.on(platform.events.loginSuccess, () => {\n      this.loadCompanyContact();\n    });\n\n    (async () => {\n      if (await platform.loggedIn()) {\n        await this.loadCompanyContact();\n      }\n    })();\n  }\n\n  async loadCompanyContact({\n    userOptions = {},\n    perPage = 'max',\n  } = {}) {\n    this.store.dispatch({\n      type: this.actions.loadCompanyContact,\n    });\n    try {\n      const contacts = extractData(await this::fetchList(options => (\n        this[symbols.api].account().extension().list({\n          ...options,\n          ...userOptions,\n          perPage,\n        })\n      )));\n      this.store.dispatch({\n        type: this.actions.loadCompanyContactSuccess,\n        payload: contacts,\n      });\n    } catch (error) {\n      this.store.dispatch({\n        type: this.actions.loadCompanyContactFailed,\n        error,\n      });\n    }\n  }\n\n  get reducer() {\n    return reducer(this.prefix);\n  }\n}\n"]}