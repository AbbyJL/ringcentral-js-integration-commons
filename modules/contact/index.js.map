{"version":3,"sources":["modules/contact/index.js"],"names":["symbols","Contact","options","api","platform","settings","prefix","getState","state","companyContact","addressBook","console","log","reducer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;AAEA;;;;AACA;;;;;;AAEA,IAAMA,UAAU,wBAAc,CAC5B,KAD4B,EAE5B,UAF4B,EAG5B,UAH4B,CAAd,CAAhB;;AAMA;;;;;IAIqBC,O;;;AACnB;;;AAGA,mBAAYC,OAAZ,EAAqB;AAAA;;AAAA,mKAEdA,OAFc;;AAAA,QAKjBC,GALiB,GASfD,OATe,CAKjBC,GALiB;AAAA,QAMjBC,QANiB,GASfF,OATe,CAMjBE,QANiB;AAAA,QAOjBC,QAPiB,GASfH,OATe,CAOjBG,QAPiB;AAAA,QAQjBC,MARiB,GASfJ,OATe,CAQjBI,MARiB;;;AAWnB,UAAKN,QAAQG,GAAb,IAAoBA,GAApB;AACA,UAAKH,QAAQI,QAAb,IAAyBA,QAAzB;AACA,UAAKJ,QAAQK,QAAb,IAAyBA,QAAzB;;AAEA,oCAAgB,gBAAhB,EAAkC,6BAAmB;AACnDE,gBAAU;AAAA,eAAM,MAAKC,KAAL,CAAWC,cAAjB;AAAA,OADyC;AAEnDH,oBAFmD;AAGnDH,cAHmD;AAInDC,wBAJmD;AAKnDC;AALmD,KAAnB,CAAlC;;AAQA,oCAAgB,aAAhB,EAA+B,0BAAgB;AAC7CE,gBAAU;AAAA,eAAM,MAAKC,KAAL,CAAWE,WAAjB;AAAA,OADmC;AAE7CJ,oBAF6C;AAG7CH,cAH6C;AAI7CC,wBAJ6C;AAK7CC;AAL6C,KAAhB,CAA/B;AAvBmB;AA8BpB;;;;wBAEa;AACZM,cAAQC,GAAR,CAAY,SAAZ;AACA,aAAO,4BAAgB;AACrBH,wBAAgB,KAAKA,cAAL,CAAoBI,OADf;AAErBH,qBAAa,KAAKA,WAAL,CAAiBG;AAFT,OAAhB,CAAP;AAID;;;;;kBA1CkBZ,O","file":"index.js","sourcesContent":["import RcModule, { addModule } from '../../lib/rc-module';\n\nimport SymbolMap from 'data-types/symbol-map';\nimport KeyValueMap from 'data-types/key-value-map';\nimport { combineReducers } from 'redux';\n\nimport CompanyContact from './company-contact';\nimport AddressBook from './address-book';\n\nconst symbols = new SymbolMap([\n  'api',\n  'platform',\n  'settings',\n]);\n\n/**\n * @class\n * @description Contact module\n */\nexport default class Contact extends RcModule {\n  /**\n   * @function\n   */\n  constructor(options) {\n    super({\n      ...options,\n    });\n    const {\n      api,\n      platform,\n      settings,\n      prefix,\n    } = options;\n\n    this[symbols.api] = api;\n    this[symbols.platform] = platform;\n    this[symbols.settings] = settings;\n\n    this::addModule('companyContact', new CompanyContact({\n      getState: () => this.state.companyContact,\n      prefix,\n      api,\n      platform,\n      settings,\n    }));\n\n    this::addModule('addressBook', new AddressBook({\n      getState: () => this.state.addressBook,\n      prefix,\n      api,\n      platform,\n      settings,\n    }));\n  }\n\n  get reducer() {\n    console.log('reducer');\n    return combineReducers({\n      companyContact: this.companyContact.reducer,\n      addressBook: this.addressBook.reducer,\n    });\n  }\n}\n"]}