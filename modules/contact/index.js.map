{"version":3,"sources":["modules/contact/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;AAEA;;;;AACA;;;;;;AAEA,IAAM,UAAU,wBAAc,CAC5B,KAD4B,EAE5B,UAF4B,EAG5B,UAH4B,CAAd,CAAhB;;AAMA;;;;;IAIqB,O;;;AACnB;;;AAGA,mBAAY,OAAZ,EAAqB;AAAA;;AAAA,4IAEd,OAFc;;AAAA,QAKjB,GALiB,GAUf,OAVe,CAKjB,GALiB;AAAA,QAMjB,QANiB,GAUf,OAVe,CAMjB,QANiB;AAAA,QAOjB,QAPiB,GAUf,OAVe,CAOjB,QAPiB;AAAA,QAQjB,eARiB,GAUf,OAVe,CAQjB,eARiB;AAAA,QASjB,MATiB,GAUf,OAVe,CASjB,MATiB;;;AAYnB,UAAK,QAAQ,GAAb,IAAoB,GAApB;AACA,UAAK,QAAQ,QAAb,IAAyB,QAAzB;AACA,UAAK,QAAQ,QAAb,IAAyB,QAAzB;;AAEA,oCAAgB,gBAAhB,EAAkC,6BAAmB;AACnD,sCADmD;AAEnD,gBAAU;AAAA,eAAM,MAAK,KAAL,CAAW,cAAjB;AAAA,OAFyC;AAGnD,oBAHmD;AAInD,cAJmD;AAKnD,wBALmD;AAMnD;AANmD,KAAnB,CAAlC;;AASA,oCAAgB,aAAhB,EAA+B,0BAAgB;AAC7C,sCAD6C;AAE7C,gBAAU;AAAA,eAAM,MAAK,KAAL,CAAW,WAAjB;AAAA,OAFmC;AAG7C,oBAH6C;AAI7C,cAJ6C;AAK7C,wBAL6C;AAM7C;AAN6C,KAAhB,CAA/B;AAzBmB;AAiCpB;;;;wBAEa;AACZ,cAAQ,GAAR,CAAY,SAAZ;AACA,aAAO,4BAAgB;AACrB,wBAAgB,KAAK,cAAL,CAAoB,OADf;AAErB,qBAAa,KAAK,WAAL,CAAiB;AAFT,OAAhB,CAAP;AAID;;;;;kBA7CkB,O","file":"index.js","sourcesContent":["import RcModule from '../../lib/rc-module';\nimport addModule from '../../lib/add-module';\n\nimport SymbolMap from 'data-types/symbol-map';\nimport KeyValueMap from 'data-types/key-value-map';\nimport { combineReducers } from 'redux';\n\nimport CompanyContact from './company-contact';\nimport AddressBook from './address-book';\n\nconst symbols = new SymbolMap([\n  'api',\n  'platform',\n  'settings',\n]);\n\n/**\n * @class\n * @description Contact module\n */\nexport default class Contact extends RcModule {\n  /**\n   * @function\n   */\n  constructor(options) {\n    super({\n      ...options,\n    });\n    const {\n      api,\n      platform,\n      settings,\n      promiseForStore,\n      prefix,\n    } = options;\n\n    this[symbols.api] = api;\n    this[symbols.platform] = platform;\n    this[symbols.settings] = settings;\n\n    this::addModule('companyContact', new CompanyContact({\n      promiseForStore,\n      getState: () => this.state.companyContact,\n      prefix,\n      api,\n      platform,\n      settings,\n    }));\n\n    this::addModule('addressBook', new AddressBook({\n      promiseForStore,\n      getState: () => this.state.addressBook,\n      prefix,\n      api,\n      platform,\n      settings,\n    }));\n  }\n\n  get reducer() {\n    console.log('reducer');\n    return combineReducers({\n      companyContact: this.companyContact.reducer,\n      addressBook: this.addressBook.reducer,\n    });\n  }\n}\n"]}