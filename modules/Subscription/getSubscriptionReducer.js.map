{"version":3,"sources":["modules/Subscription/getSubscriptionReducer.js"],"names":["getMessageReducer","getStatusReducer","getFiltersReducer","getErrorReducer","getSubscriptionReducer","prefix","prefixedTypes","enumMap","state","type","message","notification","pending","init","renewError","subscribeError","removeSuccess","notSubscribed","subscribeSuccess","renewSuccess","subscribed","reset","resetting","resetSuccess","filters","coercedFilters","concat","setFilters","addFilters","removeFilters","filter","indexOf","f","error","removeError","status"],"mappings":"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","file":"getSubscriptionReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { prefixEnum } from '../../lib/Enum';\nimport subscriptionStatus from './subscriptionStatus';\nimport subscriptionActionTypes from './subscriptionActionTypes';\n\nexport function getMessageReducer(prefix) {\n  const prefixedTypes = prefixEnum({ enumMap: subscriptionActionTypes, prefix });\n  return (state = null, { type, message }) => {\n    if (type === prefixedTypes.notification) return message;\n\n    return null;\n  };\n}\n\nexport function getStatusReducer(prefix) {\n  const prefixedTypes = prefixEnum({ enumMap: subscriptionActionTypes, prefix });\n  return (state = subscriptionStatus.pending, { type }) => {\n    switch (type) {\n      case prefixedTypes.init:\n      case prefixedTypes.renewError:\n      case prefixedTypes.subscribeError:\n      case prefixedTypes.removeSuccess:\n        return subscriptionStatus.notSubscribed;\n\n      case prefixedTypes.subscribeSuccess:\n      case prefixedTypes.renewSuccess:\n        return subscriptionStatus.subscribed;\n\n      case prefixedTypes.reset:\n        return subscriptionStatus.resetting;\n\n      case prefixedTypes.resetSuccess:\n        return subscriptionStatus.pending;\n\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getFiltersReducer(prefix) {\n  const prefixedTypes = prefixEnum({ enumMap: subscriptionActionTypes, prefix });\n  return (state = [], { type, filters }) => {\n    const coercedFilters = [].concat(filters);\n    switch (type) {\n      case prefixedTypes.setFilters:\n        return filters;\n\n      case prefixedTypes.addFilters:\n        return [...(new Set([...state].concat(coercedFilters)))];\n\n      case prefixedTypes.removeFilters:\n        return state.filter(f => coercedFilters.indexOf(f) === -1);\n\n      case prefixedTypes.resetSuccess:\n        return [];\n\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getErrorReducer(prefix) {\n  const prefixedTypes = prefixEnum({ enumMap: subscriptionActionTypes, prefix });\n  return (state = null, { type, error }) => {\n    switch (type) {\n      case prefixedTypes.subscribeError:\n      case prefixedTypes.removeError:\n      case prefixedTypes.renewError:\n        return error;\n\n      case prefixedTypes.subscribeSuccess:\n      case prefixedTypes.renewSuccess:\n      case prefixedTypes.removeSuccess:\n      case prefixedTypes.reset:\n      case prefixedTypes.resetSuccess:\n      case prefixedTypes.init:\n        return null;\n\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getSubscriptionReducer(prefix) {\n  return combineReducers({\n    filters: getFiltersReducer(prefix),\n    status: getStatusReducer(prefix),\n    error: getErrorReducer(prefix),\n    message: getMessageReducer(prefix),\n  });\n}\n"]}