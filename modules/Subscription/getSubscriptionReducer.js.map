{"version":3,"sources":["modules/Subscription/getSubscriptionReducer.js"],"names":["getSubscriptionReducer","prefix","actions","state","action","filters","status","pending","error","lastMessage","type","setFilters","notification","message","ready","notSubscribed","subscribeSuccess","subscribed","subscribeError","renewSuccess","renewError","removeSuccess","removeError","reset"],"mappings":";;;;;;;;;;;;;;kBAIwBA,sB;;AAJxB;;AACA;;;;AACA;;;;;;AAEe,SAASA,sBAAT,CAAgCC,MAAhC,EAAwC;AACrD,MAAMC,UAAU,8BAAc,EAAEA,sCAAF,EAAgCD,cAAhC,EAAd,CAAhB;AACA,SAAO,UAACE,KAAD,EAAQC,MAAR,EAAmB;AACxB,QAAI,OAAOD,KAAP,KAAiB,WAArB,EAAkC;AAChC,aAAO;AACLE,iBAAS,EADJ;AAELC,gBAAQ,6BAAmBC,OAFtB;AAGLC,eAAO,IAHF;AAILC,qBAAa;AAJR,OAAP;AAMD;AACD,QAAI,CAACL,MAAL,EAAa,OAAOD,KAAP;;AAEb,YAAQC,OAAOM,IAAf;;AAEE,WAAKR,QAAQS,UAAb;AACE,0CACKR,KADL;AAEEE,8DAAaD,OAAOC,OAApB;AAFF;;AAKF,WAAKH,QAAQU,YAAb;AACE,0CACKT,KADL;AAEEM,uBAAaL,OAAOS;AAFtB;;AAKF,WAAKX,QAAQY,KAAb;AACE,0CACKX,KADL;AAEEG,kBAAQ,6BAAmBS;AAF7B;;AAKF,WAAKb,QAAQc,gBAAb;AACE,0CACKb,KADL;AAEEG,kBAAQ,6BAAmBW,UAF7B;AAGET,iBAAO;AAHT;;AAMF,WAAKN,QAAQgB,cAAb;AACE,0CACKf,KADL;AAEEG,kBAAQ,6BAAmBS,aAF7B;AAGEP,iBAAOJ,OAAOI;AAHhB;;AAMF,WAAKN,QAAQiB,YAAb;AACE,0CACKhB,KADL;AAEEG,kBAAQ,6BAAmBW,UAF7B;AAGET,iBAAO;AAHT;;AAMF,WAAKN,QAAQkB,UAAb;AACE,0CACKjB,KADL;AAEEG,kBAAQ,6BAAmBS,aAF7B;AAGEP,iBAAOJ,OAAOI;AAHhB;;AAMF,WAAKN,QAAQmB,aAAb;AACE,0CACKlB,KADL;AAEEG,kBAAQ,6BAAmBS,aAF7B;AAGEP,iBAAO;AAHT;;AAMF,WAAKN,QAAQoB,WAAb;AACE,0CACKnB,KADL;AAEEG,kBAAQ,6BAAmBW,UAF7B;AAGET,iBAAOJ,OAAOI;AAHhB;;AAMF,WAAKN,QAAQqB,KAAb;AACE,0CACKpB,KADL;AAEEM,uBAAa,IAFf;AAGED,iBAAO,IAHT;AAIEF,kBAAQ,6BAAmBC;AAJ7B;;AAOF;AACE,eAAOJ,KAAP;AAvEJ;AAyED,GApFD;AAqFD","file":"getSubscriptionReducer.js","sourcesContent":["import { prefixActions } from '../../lib/ActionMap';\nimport subscriptionActions from './subscriptionActions';\nimport subscriptionStatus from './subscriptionStatus';\n\nexport default function getSubscriptionReducer(prefix) {\n  const actions = prefixActions({ actions: subscriptionActions, prefix });\n  return (state, action) => {\n    if (typeof state === 'undefined') {\n      return {\n        filters: [],\n        status: subscriptionStatus.pending,\n        error: null,\n        lastMessage: null,\n      };\n    }\n    if (!action) return state;\n\n    switch (action.type) {\n\n      case actions.setFilters:\n        return {\n          ...state,\n          filters: [...action.filters],\n        };\n\n      case actions.notification:\n        return {\n          ...state,\n          lastMessage: action.message,\n        };\n\n      case actions.ready:\n        return {\n          ...state,\n          status: subscriptionStatus.notSubscribed,\n        };\n\n      case actions.subscribeSuccess:\n        return {\n          ...state,\n          status: subscriptionStatus.subscribed,\n          error: null,\n        };\n\n      case actions.subscribeError:\n        return {\n          ...state,\n          status: subscriptionStatus.notSubscribed,\n          error: action.error,\n        };\n\n      case actions.renewSuccess:\n        return {\n          ...state,\n          status: subscriptionStatus.subscribed,\n          error: null,\n        };\n\n      case actions.renewError:\n        return {\n          ...state,\n          status: subscriptionStatus.notSubscribed,\n          error: action.error,\n        };\n\n      case actions.removeSuccess:\n        return {\n          ...state,\n          status: subscriptionStatus.notSubscribed,\n          error: null,\n        };\n\n      case actions.removeError:\n        return {\n          ...state,\n          status: subscriptionStatus.subscribed,\n          error: action.error,\n        };\n\n      case actions.reset:\n        return {\n          ...state,\n          lastMessage: null,\n          error: null,\n          status: subscriptionStatus.pending,\n        };\n\n      default:\n        return state;\n    }\n  };\n}\n"]}