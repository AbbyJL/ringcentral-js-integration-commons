{"version":3,"sources":["modules/Subscription/index.js"],"names":["Subscription","auth","client","storage","options","actionTypes","_auth","_client","_storage","_subscription","_storageKey","_reducer","prefix","store","subscribe","status","authStatus","loggedIn","storageStatus","ready","pending","reset","createSubscription","hasItem","setSubscription","getItem","error","on","events","notification","dispatch","type","message","removeSuccess","removeItem","removeError","renewSuccess","setItem","subscription","renewError","setEventFilters","filters","register","catch","subscribeSuccess","subscribeError","init","resetting","addBeforeLogoutHandler","_resetPromise","Error","oldFilters","addFilters","length","removeFilters","remove","subscribed","resetSuccess","state"],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport subscriptionActionTypes from './subscriptionActionTypes';\nimport subscriptionStatus from './subscriptionStatus';\nimport getSubscriptionReducer from './getSubscriptionReducer';\n\nexport default class Subscription extends RcModule {\n  constructor({\n    auth,\n    client,\n    storage,\n    ...options,\n  }) {\n    super({\n      ...options,\n      actionTypes: subscriptionActionTypes,\n    });\n    this._auth = auth;\n    this._client = client;\n    this._storage = storage;\n    this._subscription = null;\n    this._storageKey = 'subscription-cache';\n    this._reducer = getSubscriptionReducer(this.prefix);\n  }\n  initialize() {\n    this.store.subscribe(async () => {\n      if (\n        this._auth.status === this._auth.authStatus.loggedIn &&\n        this._storage.status === this._storage.storageStatus.ready &&\n        this.status === subscriptionStatus.pending\n      ) {\n        // init\n        if (this._subscription) {\n          await this.reset();\n        }\n        this._subscription = this._client.createSubscription();\n\n        // reuse cached subscription id\n        // we're not reusing the filters however\n        if (this._storage.hasItem(this._storageKey)) {\n          try {\n            this._subscription.setSubscription(this._storage.getItem(this._storageKey));\n          } catch (error) {\n            // cached subscription already expired\n          }\n        }\n\n        this._subscription.on(this._subscription.events.notification, message => {\n          this.store.dispatch({\n            type: this.actionTypes.notification,\n            message,\n          });\n        });\n        this._subscription.on(this._subscription.events.removeSuccess, () => {\n          this._subscription.reset();\n          this._storage.removeItem(this._storageKey);\n          this.store.dispatch({\n            type: this.actionTypes.removeSuccess,\n          });\n        });\n        this._subscription.on(this._subscription.events.removeError, error => {\n          this.store.dispatch({\n            type: this.actionTypes.removeError,\n            error,\n          });\n        });\n        this._subscription.on(this._subscription.events.renewSuccess, () => {\n          this._storage.setItem(this._storageKey, this._subscription.subscription());\n          this.store.dispatch({\n            type: this.actionTypes.renewSuccess,\n          });\n        });\n        this._subscription.on(this._subscription.events.renewError, error => {\n          this._storage.removeItem(this._storageKey);\n          this.store.dispatch({\n            type: this.actionTypes.renewError,\n            error,\n          });\n          // TODO handle 429 error\n          // try to re-subscribe\n          this._subscription.reset().setEventFilters(this.filters).register().catch(e => {});\n        });\n        this._subscription.on(this._subscription.events.subscribeSuccess, () => {\n          this._storage.setItem(this._storageKey, this._subscription.subscription());\n          this.store.dispatch({\n            type: this.actionTypes.subscribeSuccess,\n          });\n        });\n        this._subscription.on(this._subscription.events.subscribeError, error => {\n          this._storage.removeItem(this._storageKey);\n          this.store.dispatch({\n            type: this.actionTypes.subscribeError,\n            error,\n          });\n        });\n        this.store.dispatch({\n          type: this.actionTypes.init,\n        });\n      } else if (\n        this._storage.status === this._storage.storageStatus.pending &&\n        this.status !== subscriptionStatus.pending &&\n          this.status !== subscriptionStatus.resetting\n      ) {\n        // reset\n        this.reset();\n      }\n    });\n    this._auth.addBeforeLogoutHandler(async () => {\n      if (this._resetPromise) {\n        await this._resetPromise;\n      } else if (\n        this.status !== subscriptionStatus.pending &&\n        this.status !== subscriptionStatus.resetting\n      ) {\n        await this.reset();\n      }\n    });\n  }\n  get status() {\n    return this.state.status;\n  }\n\n  get filters() {\n    return this.state.filters;\n  }\n\n  get message() {\n    return this.state.message;\n  }\n\n  get error() {\n    return this.state.error;\n  }\n\n  get subscriptionStatus() {\n    return subscriptionStatus;\n  }\n  async subscribe(events) {\n    if (this.status === subscriptionStatus.pending) {\n      throw new Error('Subscription module is not ready');\n    }\n    const oldFilters = this.filters;\n    this.store.dispatch({\n      type: this.actionTypes.addFilters,\n      filters: events,\n    });\n    if (this.filters.length !== oldFilters.length) {\n      this._subscription.setEventFilters([...this.filters]);\n      try {\n        await this._subscription.register();\n      } catch (error) {\n        /* falls through */\n      }\n    }\n  }\n  async unsubscribe(events) {\n    if (this.status === subscriptionStatus.pending) {\n      throw new Error('Subscription module is not ready');\n    }\n    const oldFilters = this.filters;\n    this.store.dispatch({\n      type: this.actionTypes.removeFilters,\n      filters: events,\n    });\n    if (this.filters.length !== oldFilters) {\n      this._subscription.setEventFilters([...this.filters]);\n      if (this.filters.length > 0) {\n        await this._subscription.register();\n      } else {\n        await this._subscription.remove();\n      }\n    }\n  }\n  async reset() {\n    if (!this._resetPromise) {\n      this._resetPromise = (async () => {\n        this.store.dispatch({\n          type: this.actionTypes.reset,\n        });\n        if (this._subscription) {\n          try {\n            if (this.status === subscriptionStatus.subscribed) {\n              await this._subscription.remove();\n            } else {\n              this._subscription.reset();\n            }\n          } catch (e) {\n                // TODO\n          }\n          this._subscription = null;\n        }\n        this.store.dispatch({\n          type: this.actionTypes.resetSuccess,\n        });\n        this._resetPromise = null;\n      })();\n    }\n    await this._resetPromise;\n  }\n}\n"]}