{"version":3,"sources":["modules/AudioSettings/index.js"],"names":["AudioSettings","deps","storage","alert","options","actionTypes","_storage","_alert","_storageKey","registerReducer","key","reducer","_reducer","addSelector","state","availableDevices","filter","device","kind","devices","store","subscribe","_onStateChange","navigator","mediaDevices","addEventListener","_checkDevices","pending","ready","_shouldInit","dispatch","type","init","supportDevices","initSuccess","_shouldReset","reset","resetSuccess","enumerateDevices","setAvailableDevices","resolve","getUserMedia","webkitGetUserMedia","mozGetUserMedia","audio","stream","_onGetUserMediaSuccess","stop","getTracks","forEach","track","error","_onGetUserMediaError","userMediaAlert","find","item","message","userMediaPermission","messages","dismiss","id","getUserMediaSuccess","getUserMediaError","danger","ttl","allowDuplicates","userMedia","dialButtonVolume","dialButtonMuted","ringtoneVolume","ringtoneMuted","callVolume","outputDeviceId","inputDeviceId","setData","getItem","deviceId","HTMLMediaElement","prototype","setSinkId","_selectors","availableOutputDevices","availableInputDevices","length","label","status"],"mappings":"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","file":"index.js","sourcesContent":["import r from 'ramda';\r\nimport RcModule from '../../lib/RcModule';\r\nimport proxify from '../../lib/proxy/proxify';\r\nimport { Module } from '../../lib/di';\r\nimport ensureExist from '../../lib/ensureExist';\r\nimport actionTypes from './actionTypes';\r\nimport getAudioSettingsReducer from './getAudioSettingsReducer';\r\nimport getStorageReducer from './getStorageReducer';\r\nimport audioSettingsErrors from './audioSettingsErrors';\r\n\r\n/**\r\n * @class\r\n * @description AudioSettings module.\r\n */\r\n@Module({\r\n  deps: [\r\n    'Alert',\r\n    'Storage',\r\n  ],\r\n})\r\nexport default class AudioSettings extends RcModule {\r\n  constructor({\r\n    storage,\r\n    alert,\r\n    ...options\r\n  }) {\r\n    super({\r\n      ...options,\r\n      actionTypes,\r\n    });\r\n    this._storage = this::ensureExist(storage, 'storage');\r\n    this._alert = this::ensureExist(alert, 'alert');\r\n    this._storageKey = 'audioSettings';\r\n    this._storage.registerReducer({\r\n      key: this._storageKey,\r\n      reducer: getStorageReducer(this.actionTypes),\r\n    });\r\n    this._reducer = getAudioSettingsReducer(this.actionTypes);\r\n\r\n    this.addSelector('availableOutputDevices',\r\n      () => this.state.availableDevices,\r\n      devices => r.filter(device => device.kind === 'audiooutput', devices),\r\n    );\r\n    this.addSelector('availableInputDevices',\r\n      () => this.state.availableDevices,\r\n      devices => r.filter(device => device.kind === 'audioinput', devices),\r\n    );\r\n  }\r\n\r\n  initialize() {\r\n    this.store.subscribe(() => this._onStateChange());\r\n    if (\r\n      navigator &&\r\n      navigator.mediaDevices &&\r\n      navigator.mediaDevices.addEventListener\r\n    ) {\r\n      navigator.mediaDevices.addEventListener('devicechange', () => {\r\n        this._checkDevices();\r\n      });\r\n    }\r\n  }\r\n  _shouldInit() {\r\n    return !!(\r\n      this.pending &&\r\n      this._storage.ready\r\n    );\r\n  }\r\n  _shouldReset() {\r\n    return !!(\r\n      this.ready &&\r\n      !this._storage.ready\r\n    );\r\n  }\r\n  async _onStateChange() {\r\n    if (this._shouldInit()) {\r\n      this.store.dispatch({\r\n        type: this.actionTypes.init,\r\n      });\r\n      if (this.supportDevices) {\r\n        await this._checkDevices();\r\n      }\r\n      this.store.dispatch({\r\n        type: this.actionTypes.initSuccess,\r\n      });\r\n    } else if (this._shouldReset()) {\r\n      this.store.dispatch({\r\n        type: this.actionTypes.reset,\r\n      });\r\n      this.store.dispatch({\r\n        type: this.actionTypes.resetSuccess,\r\n      });\r\n    }\r\n  }\r\n\r\n  async _checkDevices() {\r\n    const devices = await navigator.mediaDevices.enumerateDevices();\r\n    this.store.dispatch({\r\n      type: this.actionTypes.setAvailableDevices,\r\n      devices,\r\n    });\r\n  }\r\n\r\n  getUserMedia() {\r\n    return new Promise((resolve) => {\r\n      navigator.getUserMedia = navigator.getUserMedia ||\r\n      navigator.webkitGetUserMedia ||\r\n      navigator.mozGetUserMedia;\r\n      if (navigator.getUserMedia) {\r\n        navigator.getUserMedia({\r\n          audio: true,\r\n        }, (stream) => {\r\n          this._onGetUserMediaSuccess();\r\n          if (typeof stream.stop === 'function') {\r\n            stream.stop();\r\n          } else {\r\n            stream.getTracks().forEach((track) => {\r\n              track.stop();\r\n            });\r\n          }\r\n          resolve();\r\n        }, (error) => {\r\n          this._onGetUserMediaError(error);\r\n          resolve();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  @proxify\r\n  async _onGetUserMediaSuccess() {\r\n    const userMediaAlert = r.find(\r\n      item => item.message === audioSettingsErrors.userMediaPermission,\r\n      this._alert.messages,\r\n    );\r\n    if (userMediaAlert) {\r\n      this._alert.dismiss(userMediaAlert.id);\r\n    }\r\n    this.store.dispatch({\r\n      type: this.actionTypes.getUserMediaSuccess,\r\n    });\r\n    this._checkDevices();\r\n  }\r\n\r\n  @proxify\r\n  async _onGetUserMediaError(error) {\r\n    this.store.dispatch({\r\n      type: this.actionTypes.getUserMediaError,\r\n      error,\r\n    });\r\n    this._alert.danger({\r\n      message: audioSettingsErrors.userMediaPermission,\r\n      ttl: 0,\r\n      allowDuplicates: false,\r\n    });\r\n  }\r\n\r\n  @proxify\r\n  async showAlert() {\r\n    if (!this.userMedia) {\r\n      this._alert.danger({\r\n        message: audioSettingsErrors.userMediaPermission,\r\n        ttl: 0,\r\n        allowDuplicates: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  @proxify\r\n  async setData({\r\n    dialButtonVolume = this.dialButtonVolume,\r\n    dialButtonMuted = this.dialButtonMuted,\r\n    ringtoneVolume = this.ringtoneVolume,\r\n    ringtoneMuted = this.ringtoneMuted,\r\n    callVolume = this.callVolume,\r\n    outputDeviceId = this.outputDeviceId,\r\n    inputDeviceId = this.inputDeviceId,\r\n  }) {\r\n    this.store.dispatch({\r\n      type: this.actionTypes.setData,\r\n      dialButtonVolume,\r\n      dialButtonMuted,\r\n      ringtoneVolume,\r\n      ringtoneMuted,\r\n      callVolume,\r\n      outputDeviceId,\r\n      inputDeviceId,\r\n    });\r\n  }\r\n\r\n  get outputDeviceId() {\r\n    return this._storage.getItem(this._storageKey).outputDeviceId;\r\n  }\r\n  get outputDevice() {\r\n    return r.find(device => (\r\n      device.kind === 'audiooutput' &&\r\n      device.deviceId === this.outputDeviceId\r\n    ), this.availableDevices);\r\n  }\r\n  get inputDeviceId() {\r\n    return this._storage.getItem(this._storageKey).inputDeviceId;\r\n  }\r\n  get inputDevice() {\r\n    return r.find(device => (\r\n      device.kind === 'audioinput' &&\r\n      device.deviceId === this.inputDeviceId\r\n    ), this.availableDevices);\r\n  }\r\n  get supportDevices() {\r\n    return !!(\r\n      HTMLMediaElement.prototype.setSinkId &&\r\n      navigator.mediaDevices &&\r\n      navigator.mediaDevices.enumerateDevices\r\n    );\r\n  }\r\n  get availableDevices() {\r\n    return this.state.availableDevices;\r\n  }\r\n  get availableOutputDevices() {\r\n    return this._selectors.availableOutputDevices();\r\n  }\r\n  get availableInputDevices() {\r\n    return this._selectors.availableInputDevices();\r\n  }\r\n  get dialButtonVolume() {\r\n    return this._storage.getItem(this._storageKey).dialButtonVolume;\r\n  }\r\n  get dialButtonMuted() {\r\n    return this._storage.getItem(this._storageKey).dialButtonMuted;\r\n  }\r\n  get ringtoneVolume() {\r\n    return this._storage.getItem(this._storageKey).ringtoneVolume;\r\n  }\r\n  get ringtoneMuted() {\r\n    return this._storage.getItem(this._storageKey).ringtoneMuted;\r\n  }\r\n  get callVolume() {\r\n    return this._storage.getItem(this._storageKey).callVolume;\r\n  }\r\n\r\n  get userMedia() {\r\n    // this detection method may not work in the future\r\n    // currently there is no good way to detect this\r\n    return !!(\r\n      this.availableDevices.length &&\r\n      this.availableDevices[0].label !== ''\r\n    );\r\n  }\r\n\r\n  get status() {\r\n    return this.state.status;\r\n  }\r\n}\r\n"]}