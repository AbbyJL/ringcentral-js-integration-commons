{"version":3,"sources":["modules/AudioSettings/getStorageReducer.js"],"names":["getHasAutoPromptedReducer","getStorageReducer","getOutputDeviceIdReducer","types","state","type","devices","outputDeviceId","setData","setAvailableDevices","getUserMediaError","find","device","deviceId","kind","getInputDeviceIdReducer","inputDeviceId","getDialButtonVolumeReducer","dialButtonVolume","Math","min","max","getDialButtonMutedReducer","dialButtonMuted","getRingtoneVolumeReducer","ringtoneVolume","getRingtoneMutedReducer","ringtoneMuted","getCallVolumeReducer","callVolume","autoPrompted","hasAutoPrompted"],"mappings":"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","file":"getStorageReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport r from 'ramda';\n\nfunction getOutputDeviceIdReducer(types) {\n  return (state = 'default', { type, devices = [], outputDeviceId = state }) => {\n    switch (type) {\n      case types.setData:\n        return outputDeviceId;\n      case types.setAvailableDevices:\n      case types.getUserMediaError:\n        if (\n          r.find(device => (\n            device.deviceId === state &&\n            device.kind === 'audiooutput'\n          ), devices)\n        ) {\n          return state;\n        }\n        return 'default';\n      default:\n        return state;\n    }\n  };\n}\nfunction getInputDeviceIdReducer(types) {\n  return (state = 'default', { type, devices = [], inputDeviceId = state }) => {\n    switch (type) {\n      case types.setData:\n        return inputDeviceId;\n      case types.setAvailableDevices:\n      case types.getUserMediaError:\n        if (\n          r.find(device => (\n            device.deviceId === state &&\n            device.kind === 'audioinput'\n          ), devices)\n        ) {\n          return state;\n        }\n        return 'default';\n      default:\n        return state;\n    }\n  };\n}\n\nfunction getDialButtonVolumeReducer(types) {\n  return (state = 1, { type, dialButtonVolume = state }) => {\n    if (type === types.setData) {\n      return Math.min(1, Math.max(0, dialButtonVolume));\n    }\n    return state;\n  };\n}\nfunction getDialButtonMutedReducer(types) {\n  return (state = false, { type, dialButtonMuted = state }) => {\n    if (type === types.setData) {\n      return !!dialButtonMuted;\n    }\n    return state;\n  };\n}\nfunction getRingtoneVolumeReducer(types) {\n  return (state = 0.3, { type, ringtoneVolume = state }) => {\n    if (type === types.setData) {\n      return Math.min(1, Math.max(0, ringtoneVolume));\n    }\n    return state;\n  };\n}\nfunction getRingtoneMutedReducer(types) {\n  return (state = false, { type, ringtoneMuted = state }) => {\n    if (type === types.setData) {\n      return !!ringtoneMuted;\n    }\n    return state;\n  };\n}\nfunction getCallVolumeReducer(types) {\n  return (state = 1, { type, callVolume = state }) => {\n    if (type === types.setData) {\n      return Math.min(1, Math.max(0.1, callVolume));\n    }\n    return state;\n  };\n}\n\nexport function getHasAutoPromptedReducer(types) {\n  return (state = false, { type }) => {\n    switch (type) {\n      case types.autoPrompted:\n        return true;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getStorageReducer(types) {\n  return combineReducers({\n    dialButtonVolume: getDialButtonVolumeReducer(types),\n    dialButtonMuted: getDialButtonMutedReducer(types),\n    ringtoneVolume: getRingtoneVolumeReducer(types),\n    ringtoneMuted: getRingtoneMutedReducer(types),\n    callVolume: getCallVolumeReducer(types),\n    outputDeviceId: getOutputDeviceIdReducer(types),\n    inputDeviceId: getInputDeviceIdReducer(types),\n    hasAutoPrompted: getHasAutoPromptedReducer(types),\n  });\n}\n"]}